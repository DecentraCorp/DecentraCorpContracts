{
  "contractName": "WhitelistCrowdsale",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelistAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceWhitelistAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhitelistAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rate\",\"type\":\"uint256\"},{\"name\":\"wallet\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelistAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistedAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistedRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistAdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistAdminRemoved\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Crowdsale in which only whitelisted users can contribute.\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"initialize(uint256,address,address)\":{\"details\":\"The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\",\"params\":{\"rate\":\"Number of token units a buyer gets per wei\",\"token\":\"Address of the token being sold\",\"wallet\":\"Address where collected funds will be forwarded to\"}},\"rate()\":{\"return\":\"the number of token units a buyer gets per wei.\"},\"token()\":{\"return\":\"the token being sold.\"},\"wallet()\":{\"return\":\"the address where funds are collected.\"},\"weiRaised()\":{\"return\":\"the amount of wei raised.\"}},\"title\":\"WhitelistCrowdsale\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/WhitelistCrowdsale.sol\":\"WhitelistCrowdsale\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/frangio/oz/eth-pkg-contracts/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0d4306da5305cb78f09c70c18ec86dbc66f22fa5ade90edc20e1ab88e16d4d10\",\"urls\":[\"bzzr://47885dccac32ee543284e93f21a5f62c499076b04d01b12ff67aefffbbdcbd34\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/access/Roles.sol\":{\"keccak256\":\"0x75481aaa988c5e9fbc91b4f695678806579c04e0ad56907978c1ca5c7e92a682\",\"urls\":[\"bzzr://da472135eb9268d863825ea26e227a9f8980c54bd32e0764d61711acca59fc89\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/access/roles/WhitelistAdminRole.sol\":{\"keccak256\":\"0xa9fa8a823f2f194c3bc9fe48b4bf7fc6f08b25e01ab794662242739d81bd9589\",\"urls\":[\"bzzr://5437740acc0721153fb93d74195d8046c07d2bdde0ac2b885881469056e37251\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/access/roles/WhitelistedRole.sol\":{\"keccak256\":\"0x2c1e3ebff32b8d33047461f2aeb0a93b50e2d77f93e3e6ffc60f4450e78beea0\",\"urls\":[\"bzzr://4a831676482608d079688ac4e8526af5f205f837d39d692973a4ea70a471ce4d\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0xb9b0790612bb9d772a14aaf98adf83dea1530df48ddb86f1a8d7f56c7c1195b5\",\"urls\":[\"bzzr://16b8283065687ce5799dfdb2c15ad425e6e5f329e1199113b9bd5b3bc1f93b47\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/WhitelistCrowdsale.sol\":{\"keccak256\":\"0x0f4a71021f2b9200d3a7cb74ed7a97f8dcd14d04cbee4e98437a795bab024df4\",\"urls\":[\"bzzr://297add2cde8e98f25ce706256ecc276779bcfe2b34cc79c6cbf2549c8379a90e\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x7230c14d692aff375e4931d60ef73ac8a79c28b9e54c200a377b7dc613c81a78\",\"urls\":[\"bzzr://3538d7da02640c67ac909e84d90e799439f3b3195cf0de39fd173dacd5a98311\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xfdf6aa17d66c3fb80fd92feedeb07c5b9fb1ae283d606c56ba51e0bbd5a3bc1a\",\"urls\":[\"bzzr://65f06b03fa1c09da0b54c2269dbe3436fae31931c1bd815f799ff2a405abcac7\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzzr://e45c5a995f57637b2300a376647ee345cc9cb30ee1984735091fcd4b10ff3500\"]}},\"version\":1}",
  "bytecode": "0x6080604052611704806100136000396000f3fe6080604052600436106100e85760003560e01c80637362d9c81161008a578063c4d66de811610059578063c4d66de814610415578063d6cd947314610466578063ec8ac4d81461047d578063fc0c546a146104c1576100e8565b80637362d9c8146102c95780638129fc1c1461031a578063b4988fd014610331578063bb5f747b146103ac576100e8565b80633af32abf116100c65780633af32abf146101c75780634042b66f146102305780634c5a628c1461025b578063521eb27314610272576100e8565b806310154bad146100fa578063291d95491461014b5780632c4e722e1461019c575b6100f86100f3610518565b610520565b005b34801561010657600080fd5b506101496004803603602081101561011d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061061d565b005b34801561015757600080fd5b5061019a6004803603602081101561016e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061068e565b005b3480156101a857600080fd5b506101b16106ff565b6040518082815260200191505060405180910390f35b3480156101d357600080fd5b50610216600480360360208110156101ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610709565b604051808215151515815260200191505060405180910390f35b34801561023c57600080fd5b50610245610726565b6040518082815260200191505060405180910390f35b34801561026757600080fd5b50610270610730565b005b34801561027e57600080fd5b50610287610742565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102d557600080fd5b50610318600480360360208110156102ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061076c565b005b34801561032657600080fd5b5061032f6107dd565b005b34801561033d57600080fd5b506103aa6004803603606081101561035457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108e4565b005b3480156103b857600080fd5b506103fb600480360360208110156103cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610af0565b604051808215151515815260200191505060405180910390f35b34801561042157600080fd5b506104646004803603602081101561043857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b0d565b005b34801561047257600080fd5b5061047b610c24565b005b6104bf6004803603602081101561049357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610520565b005b3480156104cd57600080fd5b506104d6610c36565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600033905090565b60016099600082825401925050819055506000609954905060003490506105478382610c60565b600061055282610c80565b90506105698260cf54610c9e90919063ffffffff16565b60cf819055506105798482610cbd565b8373ffffffffffffffffffffffffffffffffffffffff16610598610518565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36105f78483610ccb565b6105ff610ccf565b6106098483610d3a565b5050609954811461061957600080fd5b5050565b61062d610628610518565b610af0565b610682576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260408152602001806116996040913960400191505060405180910390fd5b61068b81610d3e565b50565b61069e610699610518565b610af0565b6106f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260408152602001806116996040913960400191505060405180910390fd5b6106fc81610d98565b50565b600060ce54905090565b600061071f826066610df290919063ffffffff16565b9050919050565b600060cf54905090565b61074061073b610518565b610e84565b565b600060cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61077c610777610518565b610af0565b6107d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260408152602001806116996040913960400191505060405180910390fd5b6107da81610ede565b50565b600060019054906101000a900460ff16806107fc57506107fb610f38565b5b8061081357506000809054906101000a900460ff16155b610868576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061166b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156108b8576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600160998190555080156108e15760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806109035750610902610f38565b5b8061091a57506000809054906101000a900460ff16155b61096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061166b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156109bf576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600084116109cc57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a0657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a4057600080fd5b8360ce819055508260cd60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160cc60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610aea5760008060016101000a81548160ff0219169083151502179055505b50505050565b6000610b06826033610df290919063ffffffff16565b9050919050565b600060019054906101000a900460ff1680610b2c5750610b2b610f38565b5b80610b4357506000809054906101000a900460ff16155b610b98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061166b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610be8576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610bf182610f49565b610bf9611052565b610bff57fe5b8015610c205760008060016101000a81548160ff0219169083151502179055505b5050565b610c34610c2f610518565b610d98565b565b600060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610c6982610709565b610c7257600080fd5b610c7c8282611114565b5050565b6000610c9760ce548361116090919063ffffffff16565b9050919050565b600080828401905083811015610cb357600080fd5b8091505092915050565b610cc7828261119a565b5050565b5050565b60cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610d37573d6000803e3d6000fd5b50565b5050565b610d528160666111eb90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b610dac81606661129790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e2d57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610e9881603361129790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b610ef28160336111eb90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b600080303b90506000811491505090565b600060019054906101000a900460ff1680610f685750610f67610f38565b5b80610f7f57506000809054906101000a900460ff16155b610fd4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061166b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611024576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61102d82611342565b801561104e5760008060016101000a81548160ff0219169083151502179055505b5050565b60008060ce541180156110b45750600073ffffffffffffffffffffffffffffffffffffffff1660cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b801561110f5750600073ffffffffffffffffffffffffffffffffffffffff1660cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561114e57600080fd5b600081141561115c57600080fd5b5050565b6000808314156111735760009050611194565b600082840290508284828161118457fe5b041461118f57600080fd5b809150505b92915050565b6111e7828260cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166114599092919063ffffffff16565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561122557600080fd5b61122f8282610df2565b1561123957600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112d157600080fd5b6112db8282610df2565b6112e457600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060019054906101000a900460ff16806113615750611360610f38565b5b8061137857506000809054906101000a900460ff16155b6113cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061166b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561141d576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61142682610af0565b6114345761143382610ede565b5b80156114555760008060016101000a81548160ff0219169083151502179055505b5050565b611525838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061152a565b505050565b6115498273ffffffffffffffffffffffffffffffffffffffff16611657565b61155257600080fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106115a1578051825260208201915060208101905060208303925061157e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611603576040519150601f19603f3d011682016040523d82523d6000602084013e611608565b606091505b50915091508161161757600080fd5b6000815111156116515780806020019051602081101561163657600080fd5b810190808051906020019092919050505061165057600080fd5b5b50505050565b600080823b90506000811191505091905056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656457686974656c69737441646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c69737441646d696e20726f6c65a165627a7a72305820aede33d0dfd966e5c31ce890c24aa3c3d3a87cbac5d9a1dfb4b80681b22233e40029",
  "deployedBytecode": "",
  "sourceMap": "205:751:27:-;;;;;;;;;",
  "deployedSourceMap": "205:751:27:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3008:23:15;3018:12;:10;:12::i;:::-;3008:9;:23::i;:::-;205:751:27;1145:108:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1145:108:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1145:108:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;1259:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1259:114:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1259:114:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;3421:75:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3421:75:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1022:117:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1022:117:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1022:117:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3559:85:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3559:85:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1098:93:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1098:93:13;;;:::i;:::-;;3249:87:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3249:87:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;978:114:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;978:114:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;978:114:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;466:214:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;466:214:77;;;:::i;:::-;;2396:284:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2396:284:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2396:284:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;849:123:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;849:123:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;849:123:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;284:156:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:156:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;284:156:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;1379:87:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1379:87:14;;;:::i;:::-;;3901:605:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3901:605:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;3097:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3097:76:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;791:88:0;836:7;862:10;855:17;;791:88;:::o;3901:605:15:-;1106:1:77;1089:13;;:18;;;;;;;;;;;1117:20;1140:13;;1117:36;;3979:17:15;3999:9;3979:29;;4018:44;4039:11;4052:9;4018:20;:44::i;:::-;4121:14;4138:26;4154:9;4138:15;:26::i;:::-;4121:43;;4212:25;4227:9;4212:10;;:14;;:25;;;;:::i;:::-;4199:10;:38;;;;4248:37;4265:11;4278:6;4248:16;:37::i;:::-;4330:11;4300:61;;4316:12;:10;:12::i;:::-;4300:61;;;4343:9;4354:6;4300:61;;;;;;;;;;;;;;;;;;;;;;;;4372:46;4395:11;4408:9;4372:22;:46::i;:::-;4429:15;:13;:15::i;:::-;4454:45;4476:11;4489:9;4454:21;:45::i;:::-;1163:1:77;;1198:13;;1182:12;:29;1174:38;;;;;;3901:605:15;;:::o;1145:108:14:-;726:30:13;743:12;:10;:12::i;:::-;726:16;:30::i;:::-;718:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1222:24:14;1238:7;1222:15;:24::i;:::-;1145:108;:::o;1259:114::-;726:30:13;743:12;:10;:12::i;:::-;726:16;:30::i;:::-;718:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1339:27:14;1358:7;1339:18;:27::i;:::-;1259:114;:::o;3421:75:15:-;3458:7;3484:5;;3477:12;;3421:75;:::o;1022:117:14:-;1083:4;1106:26;1124:7;1106:13;:17;;:26;;;;:::i;:::-;1099:33;;1022:117;;;:::o;3559:85:15:-;3601:7;3627:10;;3620:17;;3559:85;:::o;1098:93:13:-;1149:35;1171:12;:10;:12::i;:::-;1149:21;:35::i;:::-;1098:93::o;3249:87:15:-;3288:15;3322:7;;;;;;;;;;;3315:14;;3249:87;:::o;978:114:13:-;726:30;743:12;:10;:12::i;:::-;726:16;:30::i;:::-;718:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1058:27;1077:7;1058:18;:27::i;:::-;978:114;:::o;466:214:77:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;672:1:77;656:13;:17;;;;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;466:214:77;:::o;2396:284:15:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;2512:1:15;2505:4;:8;2497:17;;;;;;2550:1;2532:20;;:6;:20;;;;2524:29;;;;;;2597:1;2571:28;;2579:5;2571:28;;;;2563:37;;;;;;2619:4;2611:5;:12;;;;2643:6;2633:7;;:16;;;;;;;;;;;;;;;;;;2668:5;2659:6;;:14;;;;;;;;;;;;;;;;;;1268::78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;2396:284:15;;;;:::o;849:123:13:-;913:4;936:29;957:7;936:16;:20;;:29;;;;:::i;:::-;929:36;;849:123;;;:::o;284:156:27:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;349:34:27;376:6;349:26;:34::i;:::-;401:31;:29;:31::i;:::-;394:39;;;;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;284:156:27;;:::o;1379:87:14:-;1427:32;1446:12;:10;:12::i;:::-;1427:18;:32::i;:::-;1379:87::o;3097:76:15:-;3135:6;3160;;;;;;;;;;;3153:13;;3097:76;:::o;717:201:27:-;821:27;835:12;821:13;:27::i;:::-;813:36;;;;;;859:52;886:12;900:10;859:26;:52::i;:::-;717:201;;:::o;7306:120:15:-;7373:7;7399:20;7413:5;;7399:9;:13;;:20;;;;:::i;:::-;7392:27;;7306:120;;;:::o;1439:145:42:-;1497:7;1516:9;1532:1;1528;:5;1516:17;;1556:1;1551;:6;;1543:15;;;;;;1576:1;1569:8;;;1439:145;;;;:::o;6508:134:15:-;6595:40;6610:11;6623;6595:14;:40::i;:::-;6508:134;;:::o;6912:145::-;;;:::o;7513:78::-;7557:7;;;;;;;;;;;:16;;:27;7574:9;7557:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7557:27:15;7513:78::o;5676:149::-;;;:::o;1472:134:14:-;1533:26;1551:7;1533:13;:17;;:26;;;;:::i;:::-;1591:7;1574:25;;;;;;;;;;;;1472:134;:::o;1612:142::-;1676:29;1697:7;1676:13;:20;;:29;;;;:::i;:::-;1739:7;1720:27;;;;;;;;;;;;1612:142;:::o;786:162:8:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;1346:151:13:-;1413:32;1437:7;1413:16;:23;;:32;;;;:::i;:::-;1482:7;1460:30;;;;;;;;;;;;1346:151;:::o;1197:143::-;1261:29;1282:7;1261:16;:20;;:29;;;;:::i;:::-;1325:7;1305:28;;;;;;;;;;;;1197:143;:::o;1409:467:78:-;1456:4;1797:10;1842:7;1830:20;1824:26;;1870:1;1864:2;:7;1857:14;;;1409:467;:::o;907:109:14:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;972:37:14;1002:6;972:29;:37::i;:::-;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;907:109:14;;:::o;4512:159:15:-;4566:4;4599:1;4591:5;;:9;4590:38;;;;;4625:1;4606:21;;:7;;;;;;;;;;;:21;;;;4590:38;:73;;;;;4660:1;4633:29;;4641:6;;;;;;;;;;;4633:29;;;;4590:73;4582:82;;4512:159;:::o;5213:168::-;5338:1;5315:25;;:11;:25;;;;5307:34;;;;;;5372:1;5359:9;:14;;5351:23;;;;;;5213:168;;:::o;231:421:42:-;289:7;534:1;529;:6;525:45;;;558:1;551:8;;;;525:45;580:9;596:1;592;:5;580:17;;624:1;619;615;:5;;;;;;:10;607:19;;;;;;644:1;637:8;;;231:421;;;;;:::o;6105:137:15:-;6190:45;6210:11;6223;6190:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;6105:137;;:::o;259:181:8:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;514:184::-;612:1;593:21;;:7;:21;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;519:153:13:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;589:24:13;606:6;589:16;:24::i;:::-;584:82;;629:26;648:6;629:18;:26::i;:::-;584:82;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;519:153:13;;:::o;662:174:57:-;744:85;763:5;793;:14;;;:23;;;;818:2;822:5;770:58;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;770:58:57;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;770:58:57;744:18;:85::i;:::-;662:174;;;:::o;2487:869::-;3030:27;3038:5;3030:25;;;:27::i;:::-;3022:36;;;;;;3129:12;3143:23;3178:5;3170:19;;3190:4;3170:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3170:25:57;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3128:67:57;;;;3213:7;3205:16;;;;;;3256:1;3236:10;:17;:21;3232:118;;;3319:10;3308:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3308:30:57;;;;;;;;;;;;;;;;3300:39;;;;;;3232:118;2487:869;;;;:::o;463:616:75:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o",
  "source": "pragma solidity ^0.5.2;\nimport \"../Crowdsale.sol\";\nimport \"../../access/roles/WhitelistedRole.sol\";\n\n\n/**\n * @title WhitelistCrowdsale\n * @dev Crowdsale in which only whitelisted users can contribute.\n */\ncontract WhitelistCrowdsale is Initializable, WhitelistedRole, Crowdsale {\n    function initialize(address sender) public initializer {\n        WhitelistedRole.initialize(sender);\n\n        assert(Crowdsale._hasBeenInitialized());\n    }\n\n    /**\n     * @dev Extend parent behavior requiring beneficiary to be whitelisted. Note that no\n     * restriction is imposed on the account sending the transaction.\n     * @param _beneficiary Token beneficiary\n     * @param _weiAmount Amount of wei contributed\n     */\n    function _preValidatePurchase(address _beneficiary, uint256 _weiAmount) internal view {\n        require(isWhitelisted(_beneficiary));\n        super._preValidatePurchase(_beneficiary, _weiAmount);\n    }\n\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
  "ast": {
    "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
    "exportedSymbols": {
      "WhitelistCrowdsale": [
        3504
      ]
    },
    "id": 3505,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3450,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:27"
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/Crowdsale.sol",
        "file": "../Crowdsale.sol",
        "id": 3451,
        "nodeType": "ImportDirective",
        "scope": 3505,
        "sourceUnit": 2367,
        "src": "24:26:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/access/roles/WhitelistedRole.sol",
        "file": "../../access/roles/WhitelistedRole.sol",
        "id": 3452,
        "nodeType": "ImportDirective",
        "scope": 3505,
        "sourceUnit": 2060,
        "src": "51:48:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3453,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9741,
              "src": "236:13:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$9741",
                "typeString": "contract Initializable"
              }
            },
            "id": 3454,
            "nodeType": "InheritanceSpecifier",
            "src": "236:13:27"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3455,
              "name": "WhitelistedRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2059,
              "src": "251:15:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistedRole_$2059",
                "typeString": "contract WhitelistedRole"
              }
            },
            "id": 3456,
            "nodeType": "InheritanceSpecifier",
            "src": "251:15:27"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3457,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2366,
              "src": "268:9:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$2366",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 3458,
            "nodeType": "InheritanceSpecifier",
            "src": "268:9:27"
          }
        ],
        "contractDependencies": [
          26,
          1925,
          2059,
          2366,
          9678,
          9741
        ],
        "contractKind": "contract",
        "documentation": "@title WhitelistCrowdsale\n@dev Crowdsale in which only whitelisted users can contribute.",
        "fullyImplemented": true,
        "id": 3504,
        "linearizedBaseContracts": [
          3504,
          2366,
          9678,
          2059,
          1925,
          26,
          9741
        ],
        "name": "WhitelistCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3477,
              "nodeType": "Block",
              "src": "339:101:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3468,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3460,
                        "src": "376:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3465,
                        "name": "WhitelistedRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2059,
                        "src": "349:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WhitelistedRole_$2059_$",
                          "typeString": "type(contract WhitelistedRole)"
                        }
                      },
                      "id": 3467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1976,
                      "src": "349:26:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "349:34:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3470,
                  "nodeType": "ExpressionStatement",
                  "src": "349:34:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3472,
                            "name": "Crowdsale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2366,
                            "src": "401:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2366_$",
                              "typeString": "type(contract Crowdsale)"
                            }
                          },
                          "id": 3473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2271,
                          "src": "401:29:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 3474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "401:31:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3471,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9745,
                      "src": "394:6:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "394:39:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3476,
                  "nodeType": "ExpressionStatement",
                  "src": "394:39:27"
                }
              ]
            },
            "documentation": null,
            "id": 3478,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3463,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3462,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9722,
                  "src": "327:11:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "327:11:27"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3460,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 3478,
                  "src": "304:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "303:16:27"
            },
            "returnParameters": {
              "id": 3464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "339:0:27"
            },
            "scope": 3504,
            "src": "284:156:27",
            "stateMutability": "nonpayable",
            "superFunction": 1976,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3498,
              "nodeType": "Block",
              "src": "803:115:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3487,
                            "name": "_beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3480,
                            "src": "835:12:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3486,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1989,
                          "src": "821:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 3488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "821:27:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3485,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9759,
                        9760
                      ],
                      "referencedDeclaration": 9759,
                      "src": "813:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "813:36:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3490,
                  "nodeType": "ExpressionStatement",
                  "src": "813:36:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3494,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3480,
                        "src": "886:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3495,
                        "name": "_weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3482,
                        "src": "900:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3491,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9859,
                        "src": "859:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_WhitelistCrowdsale_$3504",
                          "typeString": "contract super WhitelistCrowdsale"
                        }
                      },
                      "id": 3493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2293,
                      "src": "859:26:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 3496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "859:52:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3497,
                  "nodeType": "ExpressionStatement",
                  "src": "859:52:27"
                }
              ]
            },
            "documentation": "@dev Extend parent behavior requiring beneficiary to be whitelisted. Note that no\nrestriction is imposed on the account sending the transaction.\n@param _beneficiary Token beneficiary\n@param _weiAmount Amount of wei contributed",
            "id": 3499,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3480,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3499,
                  "src": "747:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3482,
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3499,
                  "src": "769:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "746:42:27"
            },
            "returnParameters": {
              "id": 3484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "803:0:27"
            },
            "scope": 3504,
            "src": "717:201:27",
            "stateMutability": "view",
            "superFunction": 2293,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3503,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 3504,
            "src": "924:29:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 3500,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "924:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 3502,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 3501,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "932:2:27",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "924:11:27",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 3505,
        "src": "205:751:27"
      }
    ],
    "src": "0:957:27"
  },
  "legacyAST": {
    "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
    "exportedSymbols": {
      "WhitelistCrowdsale": [
        3504
      ]
    },
    "id": 3505,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3450,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:27"
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/Crowdsale.sol",
        "file": "../Crowdsale.sol",
        "id": 3451,
        "nodeType": "ImportDirective",
        "scope": 3505,
        "sourceUnit": 2367,
        "src": "24:26:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/access/roles/WhitelistedRole.sol",
        "file": "../../access/roles/WhitelistedRole.sol",
        "id": 3452,
        "nodeType": "ImportDirective",
        "scope": 3505,
        "sourceUnit": 2060,
        "src": "51:48:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3453,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9741,
              "src": "236:13:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$9741",
                "typeString": "contract Initializable"
              }
            },
            "id": 3454,
            "nodeType": "InheritanceSpecifier",
            "src": "236:13:27"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3455,
              "name": "WhitelistedRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2059,
              "src": "251:15:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistedRole_$2059",
                "typeString": "contract WhitelistedRole"
              }
            },
            "id": 3456,
            "nodeType": "InheritanceSpecifier",
            "src": "251:15:27"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3457,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2366,
              "src": "268:9:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$2366",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 3458,
            "nodeType": "InheritanceSpecifier",
            "src": "268:9:27"
          }
        ],
        "contractDependencies": [
          26,
          1925,
          2059,
          2366,
          9678,
          9741
        ],
        "contractKind": "contract",
        "documentation": "@title WhitelistCrowdsale\n@dev Crowdsale in which only whitelisted users can contribute.",
        "fullyImplemented": true,
        "id": 3504,
        "linearizedBaseContracts": [
          3504,
          2366,
          9678,
          2059,
          1925,
          26,
          9741
        ],
        "name": "WhitelistCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3477,
              "nodeType": "Block",
              "src": "339:101:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3468,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3460,
                        "src": "376:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3465,
                        "name": "WhitelistedRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2059,
                        "src": "349:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WhitelistedRole_$2059_$",
                          "typeString": "type(contract WhitelistedRole)"
                        }
                      },
                      "id": 3467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1976,
                      "src": "349:26:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "349:34:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3470,
                  "nodeType": "ExpressionStatement",
                  "src": "349:34:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3472,
                            "name": "Crowdsale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2366,
                            "src": "401:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2366_$",
                              "typeString": "type(contract Crowdsale)"
                            }
                          },
                          "id": 3473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2271,
                          "src": "401:29:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 3474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "401:31:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3471,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9745,
                      "src": "394:6:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "394:39:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3476,
                  "nodeType": "ExpressionStatement",
                  "src": "394:39:27"
                }
              ]
            },
            "documentation": null,
            "id": 3478,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3463,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3462,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9722,
                  "src": "327:11:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "327:11:27"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3460,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 3478,
                  "src": "304:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "303:16:27"
            },
            "returnParameters": {
              "id": 3464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "339:0:27"
            },
            "scope": 3504,
            "src": "284:156:27",
            "stateMutability": "nonpayable",
            "superFunction": 1976,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3498,
              "nodeType": "Block",
              "src": "803:115:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3487,
                            "name": "_beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3480,
                            "src": "835:12:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3486,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1989,
                          "src": "821:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 3488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "821:27:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3485,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9759,
                        9760
                      ],
                      "referencedDeclaration": 9759,
                      "src": "813:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "813:36:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3490,
                  "nodeType": "ExpressionStatement",
                  "src": "813:36:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3494,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3480,
                        "src": "886:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3495,
                        "name": "_weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3482,
                        "src": "900:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3491,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9859,
                        "src": "859:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_WhitelistCrowdsale_$3504",
                          "typeString": "contract super WhitelistCrowdsale"
                        }
                      },
                      "id": 3493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2293,
                      "src": "859:26:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 3496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "859:52:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3497,
                  "nodeType": "ExpressionStatement",
                  "src": "859:52:27"
                }
              ]
            },
            "documentation": "@dev Extend parent behavior requiring beneficiary to be whitelisted. Note that no\nrestriction is imposed on the account sending the transaction.\n@param _beneficiary Token beneficiary\n@param _weiAmount Amount of wei contributed",
            "id": 3499,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3480,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3499,
                  "src": "747:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3482,
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3499,
                  "src": "769:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "746:42:27"
            },
            "returnParameters": {
              "id": 3484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "803:0:27"
            },
            "scope": 3504,
            "src": "717:201:27",
            "stateMutability": "view",
            "superFunction": 2293,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3503,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 3504,
            "src": "924:29:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 3500,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "924:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 3502,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 3501,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "932:2:27",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "924:11:27",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 3505,
        "src": "205:751:27"
      }
    ],
    "src": "0:957:27"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-08-15T15:08:57.180Z",
  "devdoc": {
    "details": "Crowdsale in which only whitelisted users can contribute.",
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "initialize(uint256,address,address)": {
        "details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
        "params": {
          "rate": "Number of token units a buyer gets per wei",
          "token": "Address of the token being sold",
          "wallet": "Address where collected funds will be forwarded to"
        }
      },
      "rate()": {
        "return": "the number of token units a buyer gets per wei."
      },
      "token()": {
        "return": "the token being sold."
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    },
    "title": "WhitelistCrowdsale"
  },
  "userdoc": {
    "methods": {}
  }
}