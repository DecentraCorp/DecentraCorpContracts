{
  "contractName": "CappedCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "cap",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"capReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rate\",\"type\":\"uint256\"},{\"name\":\"wallet\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Crowdsale with a limit for total contributions.\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"cap()\":{\"return\":\"the cap of the crowdsale.\"},\"capReached()\":{\"details\":\"Checks whether the cap has been reached.\",\"return\":\"Whether the cap was reached\"},\"initialize(uint256)\":{\"details\":\"Constructor, takes maximum amount of wei accepted in the crowdsale.\",\"params\":{\"cap\":\"Max amount of wei to be contributed\"}},\"initialize(uint256,address,address)\":{\"details\":\"The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\",\"params\":{\"rate\":\"Number of token units a buyer gets per wei\",\"token\":\"Address of the token being sold\",\"wallet\":\"Address where collected funds will be forwarded to\"}},\"rate()\":{\"return\":\"the number of token units a buyer gets per wei.\"},\"token()\":{\"return\":\"the token being sold.\"},\"wallet()\":{\"return\":\"the address where funds are collected.\"},\"weiRaised()\":{\"return\":\"the amount of wei raised.\"}},\"title\":\"CappedCrowdsale\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/CappedCrowdsale.sol\":\"CappedCrowdsale\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/frangio/oz/eth-pkg-contracts/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0d4306da5305cb78f09c70c18ec86dbc66f22fa5ade90edc20e1ab88e16d4d10\",\"urls\":[\"bzzr://47885dccac32ee543284e93f21a5f62c499076b04d01b12ff67aefffbbdcbd34\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0xb9b0790612bb9d772a14aaf98adf83dea1530df48ddb86f1a8d7f56c7c1195b5\",\"urls\":[\"bzzr://16b8283065687ce5799dfdb2c15ad425e6e5f329e1199113b9bd5b3bc1f93b47\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/CappedCrowdsale.sol\":{\"keccak256\":\"0x1264a913f99df37a712110ee046dc73757cac324a67534e71e22a2964ed1abc7\",\"urls\":[\"bzzr://18fe6381960f269a3c92e4739997c3e2ed826dbc76ee6013944ea308ca1b55f3\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x7230c14d692aff375e4931d60ef73ac8a79c28b9e54c200a377b7dc613c81a78\",\"urls\":[\"bzzr://3538d7da02640c67ac909e84d90e799439f3b3195cf0de39fd173dacd5a98311\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xfdf6aa17d66c3fb80fd92feedeb07c5b9fb1ae283d606c56ba51e0bbd5a3bc1a\",\"urls\":[\"bzzr://65f06b03fa1c09da0b54c2269dbe3436fae31931c1bd815f799ff2a405abcac7\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzzr://e45c5a995f57637b2300a376647ee345cc9cb30ee1984735091fcd4b10ff3500\"]}},\"version\":1}",
  "bytecode": "0x6080604052610ddb806100136000396000f3fe6080604052600436106100915760003560e01c80638129fc1c116100595780638129fc1c146101aa578063b4988fd0146101c1578063ec8ac4d81461023c578063fc0c546a14610280578063fe4b84df146102d757610091565b80632c4e722e146100a3578063355274ea146100ce5780634042b66f146100f95780634f93594514610124578063521eb27314610153575b6100a161009c610312565b61031a565b005b3480156100af57600080fd5b506100b8610417565b6040518082815260200191505060405180910390f35b3480156100da57600080fd5b506100e3610421565b6040518082815260200191505060405180910390f35b34801561010557600080fd5b5061010e61042b565b6040518082815260200191505060405180910390f35b34801561013057600080fd5b50610139610435565b604051808215151515815260200191505060405180910390f35b34801561015f57600080fd5b50610168610449565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b657600080fd5b506101bf610473565b005b3480156101cd57600080fd5b5061023a600480360360608110156101e457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061057a565b005b61027e6004803603602081101561025257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061031a565b005b34801561028c57600080fd5b50610295610786565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e357600080fd5b50610310600480360360208110156102fa57600080fd5b81019080803590602001909291905050506107b0565b005b600033905090565b600160336000828254019250508190555060006033549050600034905061034183826108d2565b600061034c82610908565b90506103638260695461092690919063ffffffff16565b6069819055506103738482610945565b8373ffffffffffffffffffffffffffffffffffffffff16610392610312565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36103f18483610953565b6103f9610957565b61040384836109c2565b5050603354811461041357600080fd5b5050565b6000606854905090565b6000609c54905090565b6000606954905090565b6000609c5461044261042b565b1015905090565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900460ff168061049257506104916109c6565b5b806104a957506000809054906101000a900460ff16155b6104fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610d82602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561054e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600160338190555080156105775760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168061059957506105986109c6565b5b806105b057506000809054906101000a900460ff16155b610605576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610d82602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610655576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000841161066257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561069c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106d657600080fd5b8360688190555082606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156107805760008060016101000a81548160ff0219169083151502179055505b50505050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900460ff16806107cf57506107ce6109c6565b5b806107e657506000809054906101000a900460ff16155b61083b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610d82602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561088b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6108936109d7565b61089957fe5b600082116108a657600080fd5b81609c8190555080156108ce5760008060016101000a81548160ff0219169083151502179055505b5050565b6108dc8282610a99565b609c546108f9826108eb61042b565b61092690919063ffffffff16565b111561090457600080fd5b5050565b600061091f60685483610ae590919063ffffffff16565b9050919050565b60008082840190508381101561093b57600080fd5b8091505092915050565b61094f8282610b1f565b5050565b5050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156109bf573d6000803e3d6000fd5b50565b5050565b600080303b90506000811491505090565b600080606854118015610a395750600073ffffffffffffffffffffffffffffffffffffffff16606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b8015610a945750600073ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ad357600080fd5b6000811415610ae157600080fd5b5050565b600080831415610af85760009050610b19565b6000828402905082848281610b0957fe5b0414610b1457600080fd5b809150505b92915050565b610b6c8282606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610b709092919063ffffffff16565b5050565b610c3c838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c41565b505050565b610c608273ffffffffffffffffffffffffffffffffffffffff16610d6e565b610c6957600080fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b60208310610cb85780518252602082019150602081019050602083039250610c95565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610d1a576040519150601f19603f3d011682016040523d82523d6000602084013e610d1f565b606091505b509150915081610d2e57600080fd5b600081511115610d6857808060200190516020811015610d4d57600080fd5b8101908080519060200190929190505050610d6757600080fd5b5b50505050565b600080823b90506000811191505091905056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a165627a7a72305820d4254c4acefbe7a548bee865ed4026e1e341234bbf1e48f922a22611f7d270220029",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c80638129fc1c116100595780638129fc1c146101aa578063b4988fd0146101c1578063ec8ac4d81461023c578063fc0c546a14610280578063fe4b84df146102d757610091565b80632c4e722e146100a3578063355274ea146100ce5780634042b66f146100f95780634f93594514610124578063521eb27314610153575b6100a161009c610312565b61031a565b005b3480156100af57600080fd5b506100b8610417565b6040518082815260200191505060405180910390f35b3480156100da57600080fd5b506100e3610421565b6040518082815260200191505060405180910390f35b34801561010557600080fd5b5061010e61042b565b6040518082815260200191505060405180910390f35b34801561013057600080fd5b50610139610435565b604051808215151515815260200191505060405180910390f35b34801561015f57600080fd5b50610168610449565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b657600080fd5b506101bf610473565b005b3480156101cd57600080fd5b5061023a600480360360608110156101e457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061057a565b005b61027e6004803603602081101561025257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061031a565b005b34801561028c57600080fd5b50610295610786565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e357600080fd5b50610310600480360360208110156102fa57600080fd5b81019080803590602001909291905050506107b0565b005b600033905090565b600160336000828254019250508190555060006033549050600034905061034183826108d2565b600061034c82610908565b90506103638260695461092690919063ffffffff16565b6069819055506103738482610945565b8373ffffffffffffffffffffffffffffffffffffffff16610392610312565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36103f18483610953565b6103f9610957565b61040384836109c2565b5050603354811461041357600080fd5b5050565b6000606854905090565b6000609c54905090565b6000606954905090565b6000609c5461044261042b565b1015905090565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900460ff168061049257506104916109c6565b5b806104a957506000809054906101000a900460ff16155b6104fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610d82602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561054e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600160338190555080156105775760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168061059957506105986109c6565b5b806105b057506000809054906101000a900460ff16155b610605576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610d82602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610655576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000841161066257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561069c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106d657600080fd5b8360688190555082606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156107805760008060016101000a81548160ff0219169083151502179055505b50505050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900460ff16806107cf57506107ce6109c6565b5b806107e657506000809054906101000a900460ff16155b61083b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610d82602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561088b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6108936109d7565b61089957fe5b600082116108a657600080fd5b81609c8190555080156108ce5760008060016101000a81548160ff0219169083151502179055505b5050565b6108dc8282610a99565b609c546108f9826108eb61042b565b61092690919063ffffffff16565b111561090457600080fd5b5050565b600061091f60685483610ae590919063ffffffff16565b9050919050565b60008082840190508381101561093b57600080fd5b8091505092915050565b61094f8282610b1f565b5050565b5050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156109bf573d6000803e3d6000fd5b50565b5050565b600080303b90506000811491505090565b600080606854118015610a395750600073ffffffffffffffffffffffffffffffffffffffff16606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b8015610a945750600073ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ad357600080fd5b6000811415610ae157600080fd5b5050565b600080831415610af85760009050610b19565b6000828402905082848281610b0957fe5b0414610b1457600080fd5b809150505b92915050565b610b6c8282606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610b709092919063ffffffff16565b5050565b610c3c838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c41565b505050565b610c608273ffffffffffffffffffffffffffffffffffffffff16610d6e565b610c6957600080fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b60208310610cb85780518252602082019150602081019050602083039250610c95565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610d1a576040519150601f19603f3d011682016040523d82523d6000602084013e610d1f565b606091505b509150915081610d2e57600080fd5b600081511115610d6857808060200190516020811015610d4d57600080fd5b8101908080519060200190929190505050610d6757600080fd5b5b50505050565b600080823b90506000811191505091905056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a165627a7a72305820d4254c4acefbe7a548bee865ed4026e1e341234bbf1e48f922a22611f7d270220029",
  "sourceMap": "238:1208:23:-;;;;;;;;;",
  "deployedSourceMap": "238:1208:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3008:23:15;3018:12;:10;:12::i;:::-;3008:9;:23::i;:::-;238:1208:23;3421:75:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3421:75:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;725:73:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;725:73:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3559:85:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3559:85:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;916:92:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;916:92:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3249:87:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3249:87:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;466:214:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;466:214:77;;;:::i;:::-;;2396:284:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2396:284:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2396:284:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3901:605;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3901:605:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;3097:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3097:76:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;507:155:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;507:155:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;507:155:23;;;;;;;;;;;;;;;;;:::i;:::-;;791:88:0;836:7;862:10;855:17;;791:88;:::o;3901:605:15:-;1106:1:77;1089:13;;:18;;;;;;;;;;;1117:20;1140:13;;1117:36;;3979:17:15;3999:9;3979:29;;4018:44;4039:11;4052:9;4018:20;:44::i;:::-;4121:14;4138:26;4154:9;4138:15;:26::i;:::-;4121:43;;4212:25;4227:9;4212:10;;:14;;:25;;;;:::i;:::-;4199:10;:38;;;;4248:37;4265:11;4278:6;4248:16;:37::i;:::-;4330:11;4300:61;;4316:12;:10;:12::i;:::-;4300:61;;;4343:9;4354:6;4300:61;;;;;;;;;;;;;;;;;;;;;;;;4372:46;4395:11;4408:9;4372:22;:46::i;:::-;4429:15;:13;:15::i;:::-;4454:45;4476:11;4489:9;4454:21;:45::i;:::-;1163:1:77;;1198:13;;1182:12;:29;1174:38;;;;;;3901:605:15;;:::o;3421:75::-;3458:7;3484:5;;3477:12;;3421:75;:::o;725:73:23:-;761:7;787:4;;780:11;;725:73;:::o;3559:85:15:-;3601:7;3627:10;;3620:17;;3559:85;:::o;916:92:23:-;959:4;997;;982:11;:9;:11::i;:::-;:19;;975:26;;916:92;:::o;3249:87:15:-;3288:15;3322:7;;;;;;;;;;;3315:14;;3249:87;:::o;466:214:77:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;672:1:77;656:13;:17;;;;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;466:214:77;:::o;2396:284:15:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;2512:1:15;2505:4;:8;2497:17;;;;;;2550:1;2532:20;;:6;:20;;;;2524:29;;;;;;2597:1;2571:28;;2579:5;2571:28;;;;2563:37;;;;;;2619:4;2611:5;:12;;;;2643:6;2633:7;;:16;;;;;;;;;;;;;;;;;;2668:5;2659:6;;:14;;;;;;;;;;;;;;;;;;1268::78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;2396:284:15;;;;:::o;3097:76::-;3135:6;3160;;;;;;;;;;;3153:13;;3097:76;:::o;507:155:23:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;576:31:23;:29;:31::i;:::-;569:39;;;;633:1;627:3;:7;619:16;;;;;;652:3;645:4;:10;;;;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;507:155:23;;:::o;1204:204::-;1298:50;1325:11;1338:9;1298:26;:50::i;:::-;1396:4;;1366:26;1382:9;1366:11;:9;:11::i;:::-;:15;;:26;;;;:::i;:::-;:34;;1358:43;;;;;;1204:204;;:::o;7306:120:15:-;7373:7;7399:20;7413:5;;7399:9;:13;;:20;;;;:::i;:::-;7392:27;;7306:120;;;:::o;1439:145:42:-;1497:7;1516:9;1532:1;1528;:5;1516:17;;1556:1;1551;:6;;1543:15;;;;;;1576:1;1569:8;;;1439:145;;;;:::o;6508:134:15:-;6595:40;6610:11;6623;6595:14;:40::i;:::-;6508:134;;:::o;6912:145::-;;;:::o;7513:78::-;7557:7;;;;;;;;;;;:16;;:27;7574:9;7557:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7557:27:15;7513:78::o;5676:149::-;;;:::o;1409:467:78:-;1456:4;1797:10;1842:7;1830:20;1824:26;;1870:1;1864:2;:7;1857:14;;;1409:467;:::o;4512:159:15:-;4566:4;4599:1;4591:5;;:9;4590:38;;;;;4625:1;4606:21;;:7;;;;;;;;;;;:21;;;;4590:38;:73;;;;;4660:1;4633:29;;4641:6;;;;;;;;;;;4633:29;;;;4590:73;4582:82;;4512:159;:::o;5213:168::-;5338:1;5315:25;;:11;:25;;;;5307:34;;;;;;5372:1;5359:9;:14;;5351:23;;;;;;5213:168;;:::o;231:421:42:-;289:7;534:1;529;:6;525:45;;;558:1;551:8;;;;525:45;580:9;596:1;592;:5;580:17;;624:1;619;615;:5;;;;;;:10;607:19;;;;;;644:1;637:8;;;231:421;;;;;:::o;6105:137:15:-;6190:45;6210:11;6223;6190:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;6105:137;;:::o;662:174:57:-;744:85;763:5;793;:14;;;:23;;;;818:2;822:5;770:58;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;770:58:57;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;770:58:57;744:18;:85::i;:::-;662:174;;;:::o;2487:869::-;3030:27;3038:5;3030:25;;;:27::i;:::-;3022:36;;;;;;3129:12;3143:23;3178:5;3170:19;;3190:4;3170:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3170:25:57;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3128:67:57;;;;3213:7;3205:16;;;;;;3256:1;3236:10;:17;:21;3232:118;;;3319:10;3308:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3308:30:57;;;;;;;;;;;;;;;;3300:39;;;;;;3232:118;2487:869;;;;:::o;463:616:75:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o",
  "source": "pragma solidity ^0.5.2;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../Crowdsale.sol\";\n\n/**\n * @title CappedCrowdsale\n * @dev Crowdsale with a limit for total contributions.\n */\ncontract CappedCrowdsale is Initializable, Crowdsale {\n    using SafeMath for uint256;\n\n    uint256 private _cap;\n\n    /**\n     * @dev Constructor, takes maximum amount of wei accepted in the crowdsale.\n     * @param cap Max amount of wei to be contributed\n     */\n    function initialize(uint256 cap) public initializer {\n        assert(Crowdsale._hasBeenInitialized());\n\n        require(cap > 0);\n        _cap = cap;\n    }\n\n    /**\n     * @return the cap of the crowdsale.\n     */\n    function cap() public view returns (uint256) {\n        return _cap;\n    }\n\n    /**\n     * @dev Checks whether the cap has been reached.\n     * @return Whether the cap was reached\n     */\n    function capReached() public view returns (bool) {\n        return weiRaised() >= _cap;\n    }\n\n    /**\n     * @dev Extend parent behavior requiring purchase to respect the funding cap.\n     * @param beneficiary Token purchaser\n     * @param weiAmount Amount of wei contributed\n     */\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal view {\n        super._preValidatePurchase(beneficiary, weiAmount);\n        require(weiRaised().add(weiAmount) <= _cap);\n    }\n\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/CappedCrowdsale.sol",
  "ast": {
    "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/CappedCrowdsale.sol",
    "exportedSymbols": {
      "CappedCrowdsale": [
        3077
      ]
    },
    "id": 3078,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2992,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:23"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 2993,
        "nodeType": "ImportDirective",
        "scope": 3078,
        "sourceUnit": 9742,
        "src": "25:60:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/math/SafeMath.sol",
        "file": "../../math/SafeMath.sol",
        "id": 2994,
        "nodeType": "ImportDirective",
        "scope": 3078,
        "sourceUnit": 5568,
        "src": "86:33:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/Crowdsale.sol",
        "file": "../Crowdsale.sol",
        "id": 2995,
        "nodeType": "ImportDirective",
        "scope": 3078,
        "sourceUnit": 2367,
        "src": "120:26:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2996,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9741,
              "src": "266:13:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$9741",
                "typeString": "contract Initializable"
              }
            },
            "id": 2997,
            "nodeType": "InheritanceSpecifier",
            "src": "266:13:23"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2998,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2366,
              "src": "281:9:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$2366",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 2999,
            "nodeType": "InheritanceSpecifier",
            "src": "281:9:23"
          }
        ],
        "contractDependencies": [
          26,
          2366,
          9678,
          9741
        ],
        "contractKind": "contract",
        "documentation": "@title CappedCrowdsale\n@dev Crowdsale with a limit for total contributions.",
        "fullyImplemented": true,
        "id": 3077,
        "linearizedBaseContracts": [
          3077,
          2366,
          9678,
          26,
          9741
        ],
        "name": "CappedCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3002,
            "libraryName": {
              "contractScope": null,
              "id": 3000,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5567,
              "src": "303:8:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5567",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "297:27:23",
            "typeName": {
              "id": 3001,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "316:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3004,
            "name": "_cap",
            "nodeType": "VariableDeclaration",
            "scope": 3077,
            "src": "330:20:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3003,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "330:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3027,
              "nodeType": "Block",
              "src": "559:103:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3012,
                            "name": "Crowdsale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2366,
                            "src": "576:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2366_$",
                              "typeString": "type(contract Crowdsale)"
                            }
                          },
                          "id": 3013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2271,
                          "src": "576:29:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 3014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "576:31:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3011,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9745,
                      "src": "569:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "569:39:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3016,
                  "nodeType": "ExpressionStatement",
                  "src": "569:39:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3018,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3006,
                          "src": "627:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "633:1:23",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "627:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3017,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9759,
                        9760
                      ],
                      "referencedDeclaration": 9759,
                      "src": "619:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "619:16:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3022,
                  "nodeType": "ExpressionStatement",
                  "src": "619:16:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3023,
                      "name": "_cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3004,
                      "src": "645:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3024,
                      "name": "cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3006,
                      "src": "652:3:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "645:10:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3026,
                  "nodeType": "ExpressionStatement",
                  "src": "645:10:23"
                }
              ]
            },
            "documentation": "@dev Constructor, takes maximum amount of wei accepted in the crowdsale.\n@param cap Max amount of wei to be contributed",
            "id": 3028,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3009,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3008,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9722,
                  "src": "547:11:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "547:11:23"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3006,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 3028,
                  "src": "527:11:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "527:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "526:13:23"
            },
            "returnParameters": {
              "id": 3010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "559:0:23"
            },
            "scope": 3077,
            "src": "507:155:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3035,
              "nodeType": "Block",
              "src": "770:28:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3033,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3004,
                    "src": "787:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3032,
                  "id": 3034,
                  "nodeType": "Return",
                  "src": "780:11:23"
                }
              ]
            },
            "documentation": "@return the cap of the crowdsale.",
            "id": 3036,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "737:2:23"
            },
            "returnParameters": {
              "id": 3032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3031,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3036,
                  "src": "761:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "760:9:23"
            },
            "scope": 3077,
            "src": "725:73:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3046,
              "nodeType": "Block",
              "src": "965:43:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3041,
                        "name": "weiRaised",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2186,
                        "src": "982:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 3042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "982:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3043,
                      "name": "_cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3004,
                      "src": "997:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "982:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3040,
                  "id": 3045,
                  "nodeType": "Return",
                  "src": "975:26:23"
                }
              ]
            },
            "documentation": "@dev Checks whether the cap has been reached.\n@return Whether the cap was reached",
            "id": 3047,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "capReached",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "935:2:23"
            },
            "returnParameters": {
              "id": 3040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3039,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3047,
                  "src": "959:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3038,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "959:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "958:6:23"
            },
            "scope": 3077,
            "src": "916:92:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3071,
              "nodeType": "Block",
              "src": "1288:120:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3057,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3049,
                        "src": "1325:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3058,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3051,
                        "src": "1338:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3054,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9851,
                        "src": "1298:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_CappedCrowdsale_$3077",
                          "typeString": "contract super CappedCrowdsale"
                        }
                      },
                      "id": 3056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2293,
                      "src": "1298:26:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 3059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1298:50:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3060,
                  "nodeType": "ExpressionStatement",
                  "src": "1298:50:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3065,
                              "name": "weiAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3051,
                              "src": "1382:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3062,
                                "name": "weiRaised",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2186,
                                "src": "1366:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 3063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1366:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5546,
                            "src": "1366:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1366:26:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3067,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3004,
                          "src": "1396:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1366:34:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3061,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9759,
                        9760
                      ],
                      "referencedDeclaration": 9759,
                      "src": "1358:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1358:43:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3070,
                  "nodeType": "ExpressionStatement",
                  "src": "1358:43:23"
                }
              ]
            },
            "documentation": "@dev Extend parent behavior requiring purchase to respect the funding cap.\n@param beneficiary Token purchaser\n@param weiAmount Amount of wei contributed",
            "id": 3072,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3049,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3072,
                  "src": "1234:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1234:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3051,
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3072,
                  "src": "1255:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3050,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1255:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1233:40:23"
            },
            "returnParameters": {
              "id": 3053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1288:0:23"
            },
            "scope": 3077,
            "src": "1204:204:23",
            "stateMutability": "view",
            "superFunction": 2293,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3076,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 3077,
            "src": "1414:29:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 3073,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1414:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 3075,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 3074,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1422:2:23",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1414:11:23",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 3078,
        "src": "238:1208:23"
      }
    ],
    "src": "0:1447:23"
  },
  "legacyAST": {
    "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/CappedCrowdsale.sol",
    "exportedSymbols": {
      "CappedCrowdsale": [
        3077
      ]
    },
    "id": 3078,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2992,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:23"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 2993,
        "nodeType": "ImportDirective",
        "scope": 3078,
        "sourceUnit": 9742,
        "src": "25:60:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/math/SafeMath.sol",
        "file": "../../math/SafeMath.sol",
        "id": 2994,
        "nodeType": "ImportDirective",
        "scope": 3078,
        "sourceUnit": 5568,
        "src": "86:33:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/Crowdsale.sol",
        "file": "../Crowdsale.sol",
        "id": 2995,
        "nodeType": "ImportDirective",
        "scope": 3078,
        "sourceUnit": 2367,
        "src": "120:26:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2996,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9741,
              "src": "266:13:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$9741",
                "typeString": "contract Initializable"
              }
            },
            "id": 2997,
            "nodeType": "InheritanceSpecifier",
            "src": "266:13:23"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2998,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2366,
              "src": "281:9:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$2366",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 2999,
            "nodeType": "InheritanceSpecifier",
            "src": "281:9:23"
          }
        ],
        "contractDependencies": [
          26,
          2366,
          9678,
          9741
        ],
        "contractKind": "contract",
        "documentation": "@title CappedCrowdsale\n@dev Crowdsale with a limit for total contributions.",
        "fullyImplemented": true,
        "id": 3077,
        "linearizedBaseContracts": [
          3077,
          2366,
          9678,
          26,
          9741
        ],
        "name": "CappedCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3002,
            "libraryName": {
              "contractScope": null,
              "id": 3000,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5567,
              "src": "303:8:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5567",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "297:27:23",
            "typeName": {
              "id": 3001,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "316:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3004,
            "name": "_cap",
            "nodeType": "VariableDeclaration",
            "scope": 3077,
            "src": "330:20:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3003,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "330:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3027,
              "nodeType": "Block",
              "src": "559:103:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3012,
                            "name": "Crowdsale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2366,
                            "src": "576:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2366_$",
                              "typeString": "type(contract Crowdsale)"
                            }
                          },
                          "id": 3013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2271,
                          "src": "576:29:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 3014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "576:31:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3011,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9745,
                      "src": "569:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "569:39:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3016,
                  "nodeType": "ExpressionStatement",
                  "src": "569:39:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3018,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3006,
                          "src": "627:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "633:1:23",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "627:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3017,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9759,
                        9760
                      ],
                      "referencedDeclaration": 9759,
                      "src": "619:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "619:16:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3022,
                  "nodeType": "ExpressionStatement",
                  "src": "619:16:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3023,
                      "name": "_cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3004,
                      "src": "645:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3024,
                      "name": "cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3006,
                      "src": "652:3:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "645:10:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3026,
                  "nodeType": "ExpressionStatement",
                  "src": "645:10:23"
                }
              ]
            },
            "documentation": "@dev Constructor, takes maximum amount of wei accepted in the crowdsale.\n@param cap Max amount of wei to be contributed",
            "id": 3028,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3009,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3008,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9722,
                  "src": "547:11:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "547:11:23"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3006,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 3028,
                  "src": "527:11:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "527:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "526:13:23"
            },
            "returnParameters": {
              "id": 3010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "559:0:23"
            },
            "scope": 3077,
            "src": "507:155:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3035,
              "nodeType": "Block",
              "src": "770:28:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3033,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3004,
                    "src": "787:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3032,
                  "id": 3034,
                  "nodeType": "Return",
                  "src": "780:11:23"
                }
              ]
            },
            "documentation": "@return the cap of the crowdsale.",
            "id": 3036,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "737:2:23"
            },
            "returnParameters": {
              "id": 3032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3031,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3036,
                  "src": "761:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "760:9:23"
            },
            "scope": 3077,
            "src": "725:73:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3046,
              "nodeType": "Block",
              "src": "965:43:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3041,
                        "name": "weiRaised",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2186,
                        "src": "982:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 3042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "982:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3043,
                      "name": "_cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3004,
                      "src": "997:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "982:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3040,
                  "id": 3045,
                  "nodeType": "Return",
                  "src": "975:26:23"
                }
              ]
            },
            "documentation": "@dev Checks whether the cap has been reached.\n@return Whether the cap was reached",
            "id": 3047,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "capReached",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "935:2:23"
            },
            "returnParameters": {
              "id": 3040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3039,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3047,
                  "src": "959:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3038,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "959:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "958:6:23"
            },
            "scope": 3077,
            "src": "916:92:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3071,
              "nodeType": "Block",
              "src": "1288:120:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3057,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3049,
                        "src": "1325:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3058,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3051,
                        "src": "1338:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3054,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9851,
                        "src": "1298:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_CappedCrowdsale_$3077",
                          "typeString": "contract super CappedCrowdsale"
                        }
                      },
                      "id": 3056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2293,
                      "src": "1298:26:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 3059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1298:50:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3060,
                  "nodeType": "ExpressionStatement",
                  "src": "1298:50:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3065,
                              "name": "weiAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3051,
                              "src": "1382:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3062,
                                "name": "weiRaised",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2186,
                                "src": "1366:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 3063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1366:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5546,
                            "src": "1366:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1366:26:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3067,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3004,
                          "src": "1396:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1366:34:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3061,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9759,
                        9760
                      ],
                      "referencedDeclaration": 9759,
                      "src": "1358:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1358:43:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3070,
                  "nodeType": "ExpressionStatement",
                  "src": "1358:43:23"
                }
              ]
            },
            "documentation": "@dev Extend parent behavior requiring purchase to respect the funding cap.\n@param beneficiary Token purchaser\n@param weiAmount Amount of wei contributed",
            "id": 3072,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3049,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3072,
                  "src": "1234:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1234:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3051,
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3072,
                  "src": "1255:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3050,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1255:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1233:40:23"
            },
            "returnParameters": {
              "id": 3053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1288:0:23"
            },
            "scope": 3077,
            "src": "1204:204:23",
            "stateMutability": "view",
            "superFunction": 2293,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3076,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 3077,
            "src": "1414:29:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 3073,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1414:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 3075,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 3074,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1422:2:23",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1414:11:23",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 3078,
        "src": "238:1208:23"
      }
    ],
    "src": "0:1447:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-08-15T15:08:57.176Z",
  "devdoc": {
    "details": "Crowdsale with a limit for total contributions.",
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "cap()": {
        "return": "the cap of the crowdsale."
      },
      "capReached()": {
        "details": "Checks whether the cap has been reached.",
        "return": "Whether the cap was reached"
      },
      "initialize(uint256)": {
        "details": "Constructor, takes maximum amount of wei accepted in the crowdsale.",
        "params": {
          "cap": "Max amount of wei to be contributed"
        }
      },
      "initialize(uint256,address,address)": {
        "details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
        "params": {
          "rate": "Number of token units a buyer gets per wei",
          "token": "Address of the token being sold",
          "wallet": "Address where collected funds will be forwarded to"
        }
      },
      "rate()": {
        "return": "the number of token units a buyer gets per wei."
      },
      "token()": {
        "return": "the token being sold."
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    },
    "title": "CappedCrowdsale"
  },
  "userdoc": {
    "methods": {}
  }
}