{
  "contractName": "PausableCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rate\",\"type\":\"uint256\"},{\"name\":\"wallet\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"initialize(uint256,address,address)\":{\"details\":\"The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\",\"params\":{\"rate\":\"Number of token units a buyer gets per wei\",\"token\":\"Address of the token being sold\",\"wallet\":\"Address where collected funds will be forwarded to\"}},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"paused()\":{\"return\":\"true if the contract is paused, false otherwise.\"},\"rate()\":{\"return\":\"the number of token units a buyer gets per wei.\"},\"token()\":{\"return\":\"the token being sold.\"},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"},\"wallet()\":{\"return\":\"the address where funds are collected.\"},\"weiRaised()\":{\"return\":\"the amount of wei raised.\"}},\"title\":\"PausableCrowdsale\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/PausableCrowdsale.sol\":\"PausableCrowdsale\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/frangio/oz/eth-pkg-contracts/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0d4306da5305cb78f09c70c18ec86dbc66f22fa5ade90edc20e1ab88e16d4d10\",\"urls\":[\"bzzr://47885dccac32ee543284e93f21a5f62c499076b04d01b12ff67aefffbbdcbd34\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/access/Roles.sol\":{\"keccak256\":\"0x75481aaa988c5e9fbc91b4f695678806579c04e0ad56907978c1ca5c7e92a682\",\"urls\":[\"bzzr://da472135eb9268d863825ea26e227a9f8980c54bd32e0764d61711acca59fc89\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/access/roles/PauserRole.sol\":{\"keccak256\":\"0x29a1dfa6012d46d003a9483304a4c00b190de1ae51b0868c8a6e04d20bfe8785\",\"urls\":[\"bzzr://5e89b972d28eb2cf57c2f1060d778b2b8b6f57114415765057dbde1aa4411473\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0xb9b0790612bb9d772a14aaf98adf83dea1530df48ddb86f1a8d7f56c7c1195b5\",\"urls\":[\"bzzr://16b8283065687ce5799dfdb2c15ad425e6e5f329e1199113b9bd5b3bc1f93b47\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/PausableCrowdsale.sol\":{\"keccak256\":\"0x22ee1fda05203358c204ebf816db954113af3cbf1ac16e7107707001ed448e57\",\"urls\":[\"bzzr://35e2e567fcab481eace04b0f73f9b0ff7ede0ff37c90c4adc76a759e62b70044\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0xbafa850bc322e320545b88204fc3a20494ea8ca3319cb4bb1b693676490db578\",\"urls\":[\"bzzr://7e08e647723b7e8c3a3af2a51685cf45fc936cd8e1fa4e5fa153cac8afa0f94e\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x7230c14d692aff375e4931d60ef73ac8a79c28b9e54c200a377b7dc613c81a78\",\"urls\":[\"bzzr://3538d7da02640c67ac909e84d90e799439f3b3195cf0de39fd173dacd5a98311\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xfdf6aa17d66c3fb80fd92feedeb07c5b9fb1ae283d606c56ba51e0bbd5a3bc1a\",\"urls\":[\"bzzr://65f06b03fa1c09da0b54c2269dbe3436fae31931c1bd815f799ff2a405abcac7\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzzr://e45c5a995f57637b2300a376647ee345cc9cb30ee1984735091fcd4b10ff3500\"]}},\"version\":1}",
  "bytecode": "0x60806040526116a4806100136000396000f3fe6080604052600436106100dd5760003560e01c80638129fc1c1161007f578063b4988fd011610059578063b4988fd0146102e1578063c4d66de81461035c578063ec8ac4d8146103ad578063fc0c546a146103f1576100dd565b80638129fc1c1461026257806382dc1ec4146102795780638456cb59146102ca576100dd565b806346fbf68e116100bb57806346fbf68e1461015c578063521eb273146101c55780635c975abb1461021c5780636ef8d66d1461024b576100dd565b80632c4e722e146100ef5780633f4ba83a1461011a5780634042b66f14610131575b6100ed6100e8610448565b610450565b005b3480156100fb57600080fd5b5061010461054d565b6040518082815260200191505060405180910390f35b34801561012657600080fd5b5061012f610557565b005b34801561013d57600080fd5b5061014661065c565b6040518082815260200191505060405180910390f35b34801561016857600080fd5b506101ab6004803603602081101561017f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610666565b604051808215151515815260200191505060405180910390f35b3480156101d157600080fd5b506101da610683565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022857600080fd5b506102316106ad565b604051808215151515815260200191505060405180910390f35b34801561025757600080fd5b506102606106c4565b005b34801561026e57600080fd5b506102776106d6565b005b34801561028557600080fd5b506102c86004803603602081101561029c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107dd565b005b3480156102d657600080fd5b506102df61084e565b005b3480156102ed57600080fd5b5061035a6004803603606081101561030457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610954565b005b34801561036857600080fd5b506103ab6004803603602081101561037f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b60565b005b6103ef600480360360208110156103c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610450565b005b3480156103fd57600080fd5b50610406610c77565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600033905090565b60016033600082825401925050819055506000603354905060003490506104778382610ca1565b600061048282610cc9565b905061049982606954610ce790919063ffffffff16565b6069819055506104a98482610d06565b8373ffffffffffffffffffffffffffffffffffffffff166104c8610448565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36105278483610d14565b61052f610d18565b6105398483610d83565b5050603354811461054957600080fd5b5050565b6000606854905090565b610567610562610448565b610666565b6105bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061161b6030913960400191505060405180910390fd5b60cf60009054906101000a900460ff166105d557600080fd5b600060cf60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610619610448565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000606954905090565b600061067c82609c610d8790919063ffffffff16565b9050919050565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060cf60009054906101000a900460ff16905090565b6106d46106cf610448565b610e19565b565b600060019054906101000a900460ff16806106f557506106f4610e73565b5b8061070c57506000809054906101000a900460ff16155b610761576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061164b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156107b1576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600160338190555080156107da5760008060016101000a81548160ff0219169083151502179055505b50565b6107ed6107e8610448565b610666565b610842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061161b6030913960400191505060405180910390fd5b61084b81610e84565b50565b61085e610859610448565b610666565b6108b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061161b6030913960400191505060405180910390fd5b60cf60009054906101000a900460ff16156108cd57600080fd5b600160cf60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610911610448565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600060019054906101000a900460ff16806109735750610972610e73565b5b8061098a57506000809054906101000a900460ff16155b6109df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061164b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610a2f576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b60008411610a3c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a7657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab057600080fd5b8360688190555082606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610b5a5760008060016101000a81548160ff0219169083151502179055505b50505050565b600060019054906101000a900460ff1680610b7f5750610b7e610e73565b5b80610b9657506000809054906101000a900460ff16155b610beb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061164b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610c3b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610c43610ede565b610c4957fe5b610c5282610fa0565b8015610c735760008060016101000a81548160ff0219169083151502179055505b5050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60cf60009054906101000a900460ff1615610cbb57600080fd5b610cc582826110c4565b5050565b6000610ce06068548361111090919063ffffffff16565b9050919050565b600080828401905083811015610cfc57600080fd5b8091505092915050565b610d10828261114a565b5050565b5050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610d80573d6000803e3d6000fd5b50565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dc257600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610e2d81609c61119b90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b600080303b90506000811491505090565b610e9881609c61124690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600080606854118015610f405750600073ffffffffffffffffffffffffffffffffffffffff16606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b8015610f9b5750600073ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b905090565b600060019054906101000a900460ff1680610fbf5750610fbe610e73565b5b80610fd657506000809054906101000a900460ff16155b61102b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061164b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561107b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611084826112f2565b600060cf60006101000a81548160ff02191690831515021790555080156110c05760008060016101000a81548160ff0219169083151502179055505b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110fe57600080fd5b600081141561110c57600080fd5b5050565b6000808314156111235760009050611144565b600082840290508284828161113457fe5b041461113f57600080fd5b809150505b92915050565b6111978282606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166114099092919063ffffffff16565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156111d557600080fd5b6111df8282610d87565b6111e857600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561128057600080fd5b61128a8282610d87565b1561129457600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060019054906101000a900460ff16806113115750611310610e73565b5b8061132857506000809054906101000a900460ff16155b61137d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061164b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156113cd576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6113d682610666565b6113e4576113e382610e84565b5b80156114055760008060016101000a81548160ff0219169083151502179055505b5050565b6114d5838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506114da565b505050565b6114f98273ffffffffffffffffffffffffffffffffffffffff16611607565b61150257600080fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b60208310611551578051825260208201915060208101905060208303925061152e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146115b3576040519150601f19603f3d011682016040523d82523d6000602084013e6115b8565b606091505b5091509150816115c757600080fd5b600081511115611601578080602001905160208110156115e657600080fd5b810190808051906020019092919050505061160057600080fd5b5b50505050565b600080823b90506000811191505091905056fe506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c65436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a165627a7a7230582085d76d05b9e1d28a1d4acc70a7a0c2e459344f94aed8ad8597407dc097fa6e850029",
  "deployedBytecode": "0x6080604052600436106100dd5760003560e01c80638129fc1c1161007f578063b4988fd011610059578063b4988fd0146102e1578063c4d66de81461035c578063ec8ac4d8146103ad578063fc0c546a146103f1576100dd565b80638129fc1c1461026257806382dc1ec4146102795780638456cb59146102ca576100dd565b806346fbf68e116100bb57806346fbf68e1461015c578063521eb273146101c55780635c975abb1461021c5780636ef8d66d1461024b576100dd565b80632c4e722e146100ef5780633f4ba83a1461011a5780634042b66f14610131575b6100ed6100e8610448565b610450565b005b3480156100fb57600080fd5b5061010461054d565b6040518082815260200191505060405180910390f35b34801561012657600080fd5b5061012f610557565b005b34801561013d57600080fd5b5061014661065c565b6040518082815260200191505060405180910390f35b34801561016857600080fd5b506101ab6004803603602081101561017f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610666565b604051808215151515815260200191505060405180910390f35b3480156101d157600080fd5b506101da610683565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022857600080fd5b506102316106ad565b604051808215151515815260200191505060405180910390f35b34801561025757600080fd5b506102606106c4565b005b34801561026e57600080fd5b506102776106d6565b005b34801561028557600080fd5b506102c86004803603602081101561029c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107dd565b005b3480156102d657600080fd5b506102df61084e565b005b3480156102ed57600080fd5b5061035a6004803603606081101561030457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610954565b005b34801561036857600080fd5b506103ab6004803603602081101561037f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b60565b005b6103ef600480360360208110156103c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610450565b005b3480156103fd57600080fd5b50610406610c77565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600033905090565b60016033600082825401925050819055506000603354905060003490506104778382610ca1565b600061048282610cc9565b905061049982606954610ce790919063ffffffff16565b6069819055506104a98482610d06565b8373ffffffffffffffffffffffffffffffffffffffff166104c8610448565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36105278483610d14565b61052f610d18565b6105398483610d83565b5050603354811461054957600080fd5b5050565b6000606854905090565b610567610562610448565b610666565b6105bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061161b6030913960400191505060405180910390fd5b60cf60009054906101000a900460ff166105d557600080fd5b600060cf60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610619610448565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000606954905090565b600061067c82609c610d8790919063ffffffff16565b9050919050565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060cf60009054906101000a900460ff16905090565b6106d46106cf610448565b610e19565b565b600060019054906101000a900460ff16806106f557506106f4610e73565b5b8061070c57506000809054906101000a900460ff16155b610761576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061164b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156107b1576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600160338190555080156107da5760008060016101000a81548160ff0219169083151502179055505b50565b6107ed6107e8610448565b610666565b610842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061161b6030913960400191505060405180910390fd5b61084b81610e84565b50565b61085e610859610448565b610666565b6108b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061161b6030913960400191505060405180910390fd5b60cf60009054906101000a900460ff16156108cd57600080fd5b600160cf60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610911610448565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600060019054906101000a900460ff16806109735750610972610e73565b5b8061098a57506000809054906101000a900460ff16155b6109df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061164b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610a2f576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b60008411610a3c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a7657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab057600080fd5b8360688190555082606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610b5a5760008060016101000a81548160ff0219169083151502179055505b50505050565b600060019054906101000a900460ff1680610b7f5750610b7e610e73565b5b80610b9657506000809054906101000a900460ff16155b610beb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061164b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610c3b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610c43610ede565b610c4957fe5b610c5282610fa0565b8015610c735760008060016101000a81548160ff0219169083151502179055505b5050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60cf60009054906101000a900460ff1615610cbb57600080fd5b610cc582826110c4565b5050565b6000610ce06068548361111090919063ffffffff16565b9050919050565b600080828401905083811015610cfc57600080fd5b8091505092915050565b610d10828261114a565b5050565b5050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610d80573d6000803e3d6000fd5b50565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dc257600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610e2d81609c61119b90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b600080303b90506000811491505090565b610e9881609c61124690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600080606854118015610f405750600073ffffffffffffffffffffffffffffffffffffffff16606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b8015610f9b5750600073ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b905090565b600060019054906101000a900460ff1680610fbf5750610fbe610e73565b5b80610fd657506000809054906101000a900460ff16155b61102b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061164b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561107b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611084826112f2565b600060cf60006101000a81548160ff02191690831515021790555080156110c05760008060016101000a81548160ff0219169083151502179055505b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110fe57600080fd5b600081141561110c57600080fd5b5050565b6000808314156111235760009050611144565b600082840290508284828161113457fe5b041461113f57600080fd5b809150505b92915050565b6111978282606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166114099092919063ffffffff16565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156111d557600080fd5b6111df8282610d87565b6111e857600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561128057600080fd5b61128a8282610d87565b1561129457600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060019054906101000a900460ff16806113115750611310610e73565b5b8061132857506000809054906101000a900460ff16155b61137d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061164b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156113cd576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6113d682610666565b6113e4576113e382610e84565b5b80156114055760008060016101000a81548160ff0219169083151502179055505b5050565b6114d5838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506114da565b505050565b6114f98273ffffffffffffffffffffffffffffffffffffffff16611607565b61150257600080fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b60208310611551578051825260208201915060208101905060208303925061152e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146115b3576040519150601f19603f3d011682016040523d82523d6000602084013e6115b8565b606091505b5091509150816115c757600080fd5b600081511115611601578080602001905160208110156115e657600080fd5b810190808051906020019092919050505061160057600080fd5b5b50505050565b600080823b90506000811191505091905056fe506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c65436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a165627a7a7230582085d76d05b9e1d28a1d4acc70a7a0c2e459344f94aed8ad8597407dc097fa6e850029",
  "sourceMap": "293:811:25:-;;;;;;;;;",
  "deployedSourceMap": "293:811:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3008:23:15;3018:12;:10;:12::i;:::-;3008:9;:23::i;:::-;293:811:25;3421:75:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3421:75:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1364:117:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1364:117:40;;;:::i;:::-;;3559:85:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3559:85:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;643:107:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;643:107:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;643:107:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3249:87:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3249:87:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;646:76:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;646:76:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;852:77:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;852:77:11;;;:::i;:::-;;466:214:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;466:214:77;;;:::i;:::-;;756:90:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;756:90:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;756:90:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;1159:115:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1159:115:40;;;:::i;:::-;;2396:284:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2396:284:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2396:284:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;364:149:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;364:149:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;364:149:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;3901:605:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3901:605:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;3097:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3097:76:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;791:88:0;836:7;862:10;855:17;;791:88;:::o;3901:605:15:-;1106:1:77;1089:13;;:18;;;;;;;;;;;1117:20;1140:13;;1117:36;;3979:17:15;3999:9;3979:29;;4018:44;4039:11;4052:9;4018:20;:44::i;:::-;4121:14;4138:26;4154:9;4138:15;:26::i;:::-;4121:43;;4212:25;4227:9;4212:10;;:14;;:25;;;;:::i;:::-;4199:10;:38;;;;4248:37;4265:11;4278:6;4248:16;:37::i;:::-;4330:11;4300:61;;4316:12;:10;:12::i;:::-;4300:61;;;4343:9;4354:6;4300:61;;;;;;;;;;;;;;;;;;;;;;;;4372:46;4395:11;4408:9;4372:22;:46::i;:::-;4429:15;:13;:15::i;:::-;4454:45;4476:11;4489:9;4454:21;:45::i;:::-;1163:1:77;;1198:13;;1182:12;:29;1174:38;;;;;;3901:605:15;;:::o;3421:75::-;3458:7;3484:5;;3477:12;;3421:75;:::o;1364:117:40:-;544:22:11;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1046:7:40;;;;;;;;;;;1038:16;;;;;;1432:5;1422:7;;:15;;;;;;;;;;;;;;;;;;1452:22;1461:12;:10;:12::i;:::-;1452:22;;;;;;;;;;;;;;;;;;;;;;1364:117::o;3559:85:15:-;3601:7;3627:10;;3620:17;;3559:85;:::o;643:107:11:-;699:4;722:21;735:7;722:8;:12;;:21;;;;:::i;:::-;715:28;;643:107;;;:::o;3249:87:15:-;3288:15;3322:7;;;;;;;;;;;3315:14;;3249:87;:::o;646:76:40:-;685:4;708:7;;;;;;;;;;;701:14;;646:76;:::o;852:77:11:-;895:27;909:12;:10;:12::i;:::-;895:13;:27::i;:::-;852:77::o;466:214:77:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;672:1:77;656:13;:17;;;;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;466:214:77;:::o;756:90:11:-;544:22;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:19;831:7;820:10;:19::i;:::-;756:90;:::o;1159:115:40:-;544:22:11;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:7:40;;;;;;;;;;;874:8;866:17;;;;;;1228:4;1218:7;;:14;;;;;;;;;;;;;;;;;;1247:20;1254:12;:10;:12::i;:::-;1247:20;;;;;;;;;;;;;;;;;;;;;;1159:115::o;2396:284:15:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;2512:1:15;2505:4;:8;2497:17;;;;;;2550:1;2532:20;;:6;:20;;;;2524:29;;;;;;2597:1;2571:28;;2579:5;2571:28;;;;2563:37;;;;;;2619:4;2611:5;:12;;;;2643:6;2633:7;;:16;;;;;;;;;;;;;;;;;;2668:5;2659:6;;:14;;;;;;;;;;;;;;;;;;1268::78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;2396:284:15;;;;:::o;364:149:25:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;436:31:25;:29;:31::i;:::-;429:39;;;;479:27;499:6;479:19;:27::i;:::-;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;364:149:25;;:::o;3097:76:15:-;3135:6;3160;;;;;;;;;;;3153:13;;3097:76;:::o;890:176:25:-;875:7:40;;;;;;;;;;;874:8;866:17;;;;;;1007:52:25;1034:12;1048:10;1007:26;:52::i;:::-;890:176;;:::o;7306:120:15:-;7373:7;7399:20;7413:5;;7399:9;:13;;:20;;;;:::i;:::-;7392:27;;7306:120;;;:::o;1439:145:42:-;1497:7;1516:9;1532:1;1528;:5;1516:17;;1556:1;1551;:6;;1543:15;;;;;;1576:1;1569:8;;;1439:145;;;;:::o;6508:134:15:-;6595:40;6610:11;6623;6595:14;:40::i;:::-;6508:134;;:::o;6912:145::-;;;:::o;7513:78::-;7557:7;;;;;;;;;;;:16;;:27;7574:9;7557:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7557:27:15;7513:78::o;5676:149::-;;;:::o;786:162:8:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;1060:127:11:-;1119:24;1135:7;1119:8;:15;;:24;;;;:::i;:::-;1172:7;1158:22;;;;;;;;;;;;1060:127;:::o;1409:467:78:-;1456:4;1797:10;1842:7;1830:20;1824:26;;1870:1;1864:2;:7;1857:14;;;1409:467;:::o;935:119:11:-;991:21;1004:7;991:8;:12;;:21;;;;:::i;:::-;1039:7;1027:20;;;;;;;;;;;;935:119;:::o;4512:159:15:-;4566:4;4599:1;4591:5;;:9;4590:38;;;;;4625:1;4606:21;;:7;;;;;;;;;;;:21;;;;4590:38;:73;;;;;4660:1;4633:29;;4641:6;;;;;;;;;;;4633:29;;;;4590:73;4582:82;;4512:159;:::o;433:127:40:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;498:29:40;520:6;498:21;:29::i;:::-;548:5;538:7;;:15;;;;;;;;;;;;;;;;;;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;433:127:40;;:::o;5213:168:15:-;5338:1;5315:25;;:11;:25;;;;5307:34;;;;;;5372:1;5359:9;:14;;5351:23;;;;;;5213:168;;:::o;231:421:42:-;289:7;534:1;529;:6;525:45;;;558:1;551:8;;;;525:45;580:9;596:1;592;:5;580:17;;624:1;619;615;:5;;;;;;:10;607:19;;;;;;644:1;637:8;;;231:421;;;;;:::o;6105:137:15:-;6190:45;6210:11;6223;6190:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;6105:137;;:::o;514:184:8:-;612:1;593:21;;:7;:21;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;259:181::-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;361:137:11:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;431:16:11;440:6;431:8;:16::i;:::-;426:66;;463:18;474:6;463:10;:18::i;:::-;426:66;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;361:137:11;;:::o;662:174:57:-;744:85;763:5;793;:14;;;:23;;;;818:2;822:5;770:58;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;770:58:57;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;770:58:57;744:18;:85::i;:::-;662:174;;;:::o;2487:869::-;3030:27;3038:5;3030:25;;;:27::i;:::-;3022:36;;;;;;3129:12;3143:23;3178:5;3170:19;;3190:4;3170:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3170:25:57;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3128:67:57;;;;3213:7;3205:16;;;;;;3256:1;3236:10;:17;:21;3232:118;;;3319:10;3308:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3308:30:57;;;;;;;;;;;;;;;;3300:39;;;;;;3232:118;2487:869;;;;:::o;463:616:75:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o",
  "source": "pragma solidity ^0.5.2;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\n\nimport \"../Crowdsale.sol\";\nimport \"../../lifecycle/Pausable.sol\";\n\n/**\n * @title PausableCrowdsale\n * @dev Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.\n */\ncontract PausableCrowdsale is Initializable, Crowdsale, Pausable {\n    function initialize(address sender) public initializer {\n        assert(Crowdsale._hasBeenInitialized());\n\n        Pausable.initialize(sender);\n    }\n\n    /**\n     * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n     * Use super to concatenate validations.\n     * Adds the validation that the crowdsale must not be paused.\n     * @param _beneficiary Address performing the token purchase\n     * @param _weiAmount Value in wei involved in the purchase\n     */\n    function _preValidatePurchase(address _beneficiary, uint256 _weiAmount) internal view whenNotPaused {\n        return super._preValidatePurchase(_beneficiary, _weiAmount);\n    }\n\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/PausableCrowdsale.sol",
  "ast": {
    "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/PausableCrowdsale.sol",
    "exportedSymbols": {
      "PausableCrowdsale": [
        3271
      ]
    },
    "id": 3272,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3221,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:25"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 3222,
        "nodeType": "ImportDirective",
        "scope": 3272,
        "sourceUnit": 9742,
        "src": "25:60:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/Crowdsale.sol",
        "file": "../Crowdsale.sol",
        "id": 3223,
        "nodeType": "ImportDirective",
        "scope": 3272,
        "sourceUnit": 2367,
        "src": "87:26:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/lifecycle/Pausable.sol",
        "file": "../../lifecycle/Pausable.sol",
        "id": 3224,
        "nodeType": "ImportDirective",
        "scope": 3272,
        "sourceUnit": 5371,
        "src": "114:38:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3225,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9741,
              "src": "323:13:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$9741",
                "typeString": "contract Initializable"
              }
            },
            "id": 3226,
            "nodeType": "InheritanceSpecifier",
            "src": "323:13:25"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3227,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2366,
              "src": "338:9:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$2366",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 3228,
            "nodeType": "InheritanceSpecifier",
            "src": "338:9:25"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3229,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5370,
              "src": "349:8:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$5370",
                "typeString": "contract Pausable"
              }
            },
            "id": 3230,
            "nodeType": "InheritanceSpecifier",
            "src": "349:8:25"
          }
        ],
        "contractDependencies": [
          26,
          1679,
          2366,
          5370,
          9678,
          9741
        ],
        "contractKind": "contract",
        "documentation": "@title PausableCrowdsale\n@dev Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.",
        "fullyImplemented": true,
        "id": 3271,
        "linearizedBaseContracts": [
          3271,
          5370,
          1679,
          2366,
          9678,
          26,
          9741
        ],
        "name": "PausableCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3249,
              "nodeType": "Block",
              "src": "419:94:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3238,
                            "name": "Crowdsale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2366,
                            "src": "436:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2366_$",
                              "typeString": "type(contract Crowdsale)"
                            }
                          },
                          "id": 3239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2271,
                          "src": "436:29:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 3240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "436:31:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3237,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9745,
                      "src": "429:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "429:39:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3242,
                  "nodeType": "ExpressionStatement",
                  "src": "429:39:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3246,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3232,
                        "src": "499:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3243,
                        "name": "Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5370,
                        "src": "479:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Pausable_$5370_$",
                          "typeString": "type(contract Pausable)"
                        }
                      },
                      "id": 3245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5306,
                      "src": "479:19:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "479:27:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3248,
                  "nodeType": "ExpressionStatement",
                  "src": "479:27:25"
                }
              ]
            },
            "documentation": null,
            "id": 3250,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3235,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3234,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9722,
                  "src": "407:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "407:11:25"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3232,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 3250,
                  "src": "384:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "384:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "383:16:25"
            },
            "returnParameters": {
              "id": 3236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "419:0:25"
            },
            "scope": 3271,
            "src": "364:149:25",
            "stateMutability": "nonpayable",
            "superFunction": 5306,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3265,
              "nodeType": "Block",
              "src": "990:76:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3261,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3252,
                        "src": "1034:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3262,
                        "name": "_weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3254,
                        "src": "1048:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3259,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9857,
                        "src": "1007:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_PausableCrowdsale_$3271",
                          "typeString": "contract super PausableCrowdsale"
                        }
                      },
                      "id": 3260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2293,
                      "src": "1007:26:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 3263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1007:52:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 3258,
                  "id": 3264,
                  "nodeType": "Return",
                  "src": "1000:59:25"
                }
              ]
            },
            "documentation": "@dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\nUse super to concatenate validations.\nAdds the validation that the crowdsale must not be paused.\n@param _beneficiary Address performing the token purchase\n@param _weiAmount Value in wei involved in the purchase",
            "id": 3266,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3257,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3256,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5323,
                  "src": "976:13:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "976:13:25"
              }
            ],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3252,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3266,
                  "src": "920:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3254,
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3266,
                  "src": "942:18:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "942:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "919:42:25"
            },
            "returnParameters": {
              "id": 3258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "990:0:25"
            },
            "scope": 3271,
            "src": "890:176:25",
            "stateMutability": "view",
            "superFunction": 2293,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3270,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 3271,
            "src": "1072:29:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 3267,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1072:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 3269,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 3268,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1080:2:25",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1072:11:25",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 3272,
        "src": "293:811:25"
      }
    ],
    "src": "0:1105:25"
  },
  "legacyAST": {
    "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/PausableCrowdsale.sol",
    "exportedSymbols": {
      "PausableCrowdsale": [
        3271
      ]
    },
    "id": 3272,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3221,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:25"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 3222,
        "nodeType": "ImportDirective",
        "scope": 3272,
        "sourceUnit": 9742,
        "src": "25:60:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/Crowdsale.sol",
        "file": "../Crowdsale.sol",
        "id": 3223,
        "nodeType": "ImportDirective",
        "scope": 3272,
        "sourceUnit": 2367,
        "src": "87:26:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/lifecycle/Pausable.sol",
        "file": "../../lifecycle/Pausable.sol",
        "id": 3224,
        "nodeType": "ImportDirective",
        "scope": 3272,
        "sourceUnit": 5371,
        "src": "114:38:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3225,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9741,
              "src": "323:13:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$9741",
                "typeString": "contract Initializable"
              }
            },
            "id": 3226,
            "nodeType": "InheritanceSpecifier",
            "src": "323:13:25"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3227,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2366,
              "src": "338:9:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$2366",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 3228,
            "nodeType": "InheritanceSpecifier",
            "src": "338:9:25"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3229,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5370,
              "src": "349:8:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$5370",
                "typeString": "contract Pausable"
              }
            },
            "id": 3230,
            "nodeType": "InheritanceSpecifier",
            "src": "349:8:25"
          }
        ],
        "contractDependencies": [
          26,
          1679,
          2366,
          5370,
          9678,
          9741
        ],
        "contractKind": "contract",
        "documentation": "@title PausableCrowdsale\n@dev Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.",
        "fullyImplemented": true,
        "id": 3271,
        "linearizedBaseContracts": [
          3271,
          5370,
          1679,
          2366,
          9678,
          26,
          9741
        ],
        "name": "PausableCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3249,
              "nodeType": "Block",
              "src": "419:94:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3238,
                            "name": "Crowdsale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2366,
                            "src": "436:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2366_$",
                              "typeString": "type(contract Crowdsale)"
                            }
                          },
                          "id": 3239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2271,
                          "src": "436:29:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 3240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "436:31:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3237,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9745,
                      "src": "429:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "429:39:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3242,
                  "nodeType": "ExpressionStatement",
                  "src": "429:39:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3246,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3232,
                        "src": "499:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3243,
                        "name": "Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5370,
                        "src": "479:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Pausable_$5370_$",
                          "typeString": "type(contract Pausable)"
                        }
                      },
                      "id": 3245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5306,
                      "src": "479:19:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "479:27:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3248,
                  "nodeType": "ExpressionStatement",
                  "src": "479:27:25"
                }
              ]
            },
            "documentation": null,
            "id": 3250,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3235,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3234,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9722,
                  "src": "407:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "407:11:25"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3232,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 3250,
                  "src": "384:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "384:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "383:16:25"
            },
            "returnParameters": {
              "id": 3236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "419:0:25"
            },
            "scope": 3271,
            "src": "364:149:25",
            "stateMutability": "nonpayable",
            "superFunction": 5306,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3265,
              "nodeType": "Block",
              "src": "990:76:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3261,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3252,
                        "src": "1034:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3262,
                        "name": "_weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3254,
                        "src": "1048:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3259,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9857,
                        "src": "1007:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_PausableCrowdsale_$3271",
                          "typeString": "contract super PausableCrowdsale"
                        }
                      },
                      "id": 3260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2293,
                      "src": "1007:26:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 3263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1007:52:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 3258,
                  "id": 3264,
                  "nodeType": "Return",
                  "src": "1000:59:25"
                }
              ]
            },
            "documentation": "@dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\nUse super to concatenate validations.\nAdds the validation that the crowdsale must not be paused.\n@param _beneficiary Address performing the token purchase\n@param _weiAmount Value in wei involved in the purchase",
            "id": 3266,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3257,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3256,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5323,
                  "src": "976:13:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "976:13:25"
              }
            ],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3252,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3266,
                  "src": "920:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3254,
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3266,
                  "src": "942:18:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "942:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "919:42:25"
            },
            "returnParameters": {
              "id": 3258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "990:0:25"
            },
            "scope": 3271,
            "src": "890:176:25",
            "stateMutability": "view",
            "superFunction": 2293,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3270,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 3271,
            "src": "1072:29:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 3267,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1072:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 3269,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 3268,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1080:2:25",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1072:11:25",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 3272,
        "src": "293:811:25"
      }
    ],
    "src": "0:1105:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-08-15T15:08:57.178Z",
  "devdoc": {
    "details": "Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.",
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "initialize(uint256,address,address)": {
        "details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
        "params": {
          "rate": "Number of token units a buyer gets per wei",
          "token": "Address of the token being sold",
          "wallet": "Address where collected funds will be forwarded to"
        }
      },
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "paused()": {
        "return": "true if the contract is paused, false otherwise."
      },
      "rate()": {
        "return": "the number of token units a buyer gets per wei."
      },
      "token()": {
        "return": "the token being sold."
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    },
    "title": "PausableCrowdsale"
  },
  "userdoc": {
    "methods": {}
  }
}