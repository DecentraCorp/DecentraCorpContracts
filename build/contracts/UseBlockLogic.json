{
  "contractName": "UseBlockLogic",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "numerator",
          "type": "uint256"
        },
        {
          "name": "denominator",
          "type": "uint256"
        },
        {
          "name": "precision",
          "type": "uint256"
        }
      ],
      "name": "percent",
      "outputs": [
        {
          "name": "quotient",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "hash",
          "type": "string"
        }
      ],
      "name": "getPropID",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "localMiningtimeTracker",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ideaProposalID",
          "type": "uint256"
        },
        {
          "name": "supportsProposal",
          "type": "bool"
        }
      ],
      "name": "ideaVote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ideaProposals",
      "outputs": [
        {
          "name": "IdeaIPFS",
          "type": "string"
        },
        {
          "name": "IdeaBlock",
          "type": "bool"
        },
        {
          "name": "executed",
          "type": "bool"
        },
        {
          "name": "globalUseBlockAmount",
          "type": "uint256"
        },
        {
          "name": "royalty",
          "type": "uint256"
        },
        {
          "name": "miningTime",
          "type": "uint256"
        },
        {
          "name": "stakeAmount",
          "type": "uint256"
        },
        {
          "name": "levelRequirement",
          "type": "uint256"
        },
        {
          "name": "inventorAddress",
          "type": "address"
        },
        {
          "name": "inventionAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_mem",
          "type": "address"
        }
      ],
      "name": "getOwnedIB",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ideaBlockReward",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "numOfvotes",
          "type": "uint256"
        },
        {
          "name": "numOfmem",
          "type": "uint256"
        }
      ],
      "name": "setVoteNumberQuorum",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalBlockHalfTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "repOwnes",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_add",
          "type": "address"
        },
        {
          "name": "_ideaProposalID",
          "type": "uint256"
        }
      ],
      "name": "checkIfVotedIdea",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "IdeaAddToId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ideaIPFS",
          "type": "string"
        },
        {
          "name": "_globalUseBlockAmount",
          "type": "uint256"
        },
        {
          "name": "_miningTime",
          "type": "uint256"
        },
        {
          "name": "_royalty",
          "type": "uint256"
        },
        {
          "name": "_stakeAmount",
          "type": "uint256"
        },
        {
          "name": "_levelRequirement",
          "type": "uint256"
        },
        {
          "name": "_inventor",
          "type": "address"
        },
        {
          "name": "_invention",
          "type": "address"
        }
      ],
      "name": "proposeIdea",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "repInfo",
      "outputs": [
        {
          "name": "BlockReward",
          "type": "uint256"
        },
        {
          "name": "IdeaID",
          "type": "uint256"
        },
        {
          "name": "Royalty",
          "type": "uint256"
        },
        {
          "name": "InventorsAddress",
          "type": "address"
        },
        {
          "name": "ReplicationAddress",
          "type": "address"
        },
        {
          "name": "ReplicationMember",
          "type": "address"
        },
        {
          "name": "OwnersAddress",
          "type": "address"
        },
        {
          "name": "DeviceLockHash",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalUseBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "weightTracker",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        },
        {
          "name": "_ideaProposalID",
          "type": "uint256"
        }
      ],
      "name": "transferIdeaBlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ideaId",
          "type": "uint256"
        },
        {
          "name": "_repAdd",
          "type": "address"
        },
        {
          "name": "_repOwner",
          "type": "address"
        },
        {
          "name": "_userId",
          "type": "string"
        },
        {
          "name": "_DLhash",
          "type": "string"
        }
      ],
      "name": "generateReplicationBlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "localWeightTracker",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "numOfvotes",
          "type": "uint256"
        },
        {
          "name": "numOfmem",
          "type": "uint256"
        }
      ],
      "name": "setVoteQuorum",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "replications",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DCPoA",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ideaUpgradeProposals",
      "outputs": [
        {
          "name": "uIdeaIPFS",
          "type": "string"
        },
        {
          "name": "uexecuted",
          "type": "bool"
        },
        {
          "name": "uglobalUseBlockAmount",
          "type": "uint256"
        },
        {
          "name": "uroyalty",
          "type": "uint256"
        },
        {
          "name": "uminingTime",
          "type": "uint256"
        },
        {
          "name": "ustakeAmount",
          "type": "uint256"
        },
        {
          "name": "ulevelRequirement",
          "type": "uint256"
        },
        {
          "name": "uinventorAddress",
          "type": "address"
        },
        {
          "name": "uinventionAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ideaRepCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "Validators",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalIdeaPropCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "IPFS",
          "type": "string"
        }
      ],
      "name": "IdeaProposed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "member",
          "type": "address"
        }
      ],
      "name": "NewMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "IPFS",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "Inventor",
          "type": "address"
        }
      ],
      "name": "IdeaApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_voter",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "inSupport",
          "type": "bool"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_repAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "repOwner",
          "type": "address"
        }
      ],
      "name": "NewReplication",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "repAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "reOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "repWeight",
          "type": "uint256"
        }
      ],
      "name": "LocalUseWeight",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "repAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "reOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "ideaId",
          "type": "uint256"
        }
      ],
      "name": "GlobalUseBlock",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_DLhash",
          "type": "string"
        }
      ],
      "name": "generateUseBlockWeight",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"numerator\",\"type\":\"uint256\"},{\"name\":\"denominator\",\"type\":\"uint256\"},{\"name\":\"precision\",\"type\":\"uint256\"}],\"name\":\"percent\",\"outputs\":[{\"name\":\"quotient\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"getPropID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"localMiningtimeTracker\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ideaProposalID\",\"type\":\"uint256\"},{\"name\":\"supportsProposal\",\"type\":\"bool\"}],\"name\":\"ideaVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ideaProposals\",\"outputs\":[{\"name\":\"IdeaIPFS\",\"type\":\"string\"},{\"name\":\"IdeaBlock\",\"type\":\"bool\"},{\"name\":\"executed\",\"type\":\"bool\"},{\"name\":\"globalUseBlockAmount\",\"type\":\"uint256\"},{\"name\":\"royalty\",\"type\":\"uint256\"},{\"name\":\"miningTime\",\"type\":\"uint256\"},{\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"name\":\"levelRequirement\",\"type\":\"uint256\"},{\"name\":\"inventorAddress\",\"type\":\"address\"},{\"name\":\"inventionAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_mem\",\"type\":\"address\"}],\"name\":\"getOwnedIB\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ideaBlockReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"numOfvotes\",\"type\":\"uint256\"},{\"name\":\"numOfmem\",\"type\":\"uint256\"}],\"name\":\"setVoteNumberQuorum\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"globalBlockHalfTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"repOwnes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_add\",\"type\":\"address\"},{\"name\":\"_ideaProposalID\",\"type\":\"uint256\"}],\"name\":\"checkIfVotedIdea\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"IdeaAddToId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ideaIPFS\",\"type\":\"string\"},{\"name\":\"_globalUseBlockAmount\",\"type\":\"uint256\"},{\"name\":\"_miningTime\",\"type\":\"uint256\"},{\"name\":\"_royalty\",\"type\":\"uint256\"},{\"name\":\"_stakeAmount\",\"type\":\"uint256\"},{\"name\":\"_levelRequirement\",\"type\":\"uint256\"},{\"name\":\"_inventor\",\"type\":\"address\"},{\"name\":\"_invention\",\"type\":\"address\"}],\"name\":\"proposeIdea\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"repInfo\",\"outputs\":[{\"name\":\"BlockReward\",\"type\":\"uint256\"},{\"name\":\"IdeaID\",\"type\":\"uint256\"},{\"name\":\"Royalty\",\"type\":\"uint256\"},{\"name\":\"InventorsAddress\",\"type\":\"address\"},{\"name\":\"ReplicationAddress\",\"type\":\"address\"},{\"name\":\"ReplicationMember\",\"type\":\"address\"},{\"name\":\"OwnersAddress\",\"type\":\"address\"},{\"name\":\"DeviceLockHash\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"globalUseBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"weightTracker\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"},{\"name\":\"_ideaProposalID\",\"type\":\"uint256\"}],\"name\":\"transferIdeaBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ideaId\",\"type\":\"uint256\"},{\"name\":\"_repAdd\",\"type\":\"address\"},{\"name\":\"_repOwner\",\"type\":\"address\"},{\"name\":\"_userId\",\"type\":\"string\"},{\"name\":\"_DLhash\",\"type\":\"string\"}],\"name\":\"generateReplicationBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"localWeightTracker\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"numOfvotes\",\"type\":\"uint256\"},{\"name\":\"numOfmem\",\"type\":\"uint256\"}],\"name\":\"setVoteQuorum\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"replications\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DCPoA\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ideaUpgradeProposals\",\"outputs\":[{\"name\":\"uIdeaIPFS\",\"type\":\"string\"},{\"name\":\"uexecuted\",\"type\":\"bool\"},{\"name\":\"uglobalUseBlockAmount\",\"type\":\"uint256\"},{\"name\":\"uroyalty\",\"type\":\"uint256\"},{\"name\":\"uminingTime\",\"type\":\"uint256\"},{\"name\":\"ustakeAmount\",\"type\":\"uint256\"},{\"name\":\"ulevelRequirement\",\"type\":\"uint256\"},{\"name\":\"uinventorAddress\",\"type\":\"address\"},{\"name\":\"uinventionAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_DLhash\",\"type\":\"string\"}],\"name\":\"generateUseBlockWeight\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ideaRepCounter\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Validators\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"globalIdeaPropCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"IPFS\",\"type\":\"string\"}],\"name\":\"IdeaProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"member\",\"type\":\"address\"}],\"name\":\"NewMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"IPFS\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"Inventor\",\"type\":\"address\"}],\"name\":\"IdeaApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_voter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"inSupport\",\"type\":\"bool\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_repAdd\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"repOwner\",\"type\":\"address\"}],\"name\":\"NewReplication\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"repAdd\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"reOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"repWeight\",\"type\":\"uint256\"}],\"name\":\"LocalUseWeight\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"repAdd\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"reOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ideaId\",\"type\":\"uint256\"}],\"name\":\"GlobalUseBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"generateReplicationBlock(uint256,address,address,string,string)\":{\"details\":\"this requires the replicator has enough Notio to meet the stake amount and burns it from existenceit also adds the replicator as a member of DecentraCorpfinally, this contract calls the Proof of Replication Ownership contract and mints a PoRO token to the msg.sender\"},\"generateUseBlockWeight(string)\":{\"details\":\"this is called by generateUseBlockWeight\"},\"getPropID(string)\":{\"details\":\"getPropID is made for easier front end interaction\"},\"initialize(address)\":{\"details\":\"The Ownable constructor sets the original `owner` of the contract to the sender account.\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"percent(uint256,uint256,uint256)\":{\"details\":\"quorum is set to 60%\"},\"proposeIdea(string,uint256,uint256,uint256,uint256,uint256,address,address)\":{\"details\":\"the struct for this is set in interface.solidityidea proposals are put up for community approval\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"generateReplicationBlock(uint256,address,address,string,string)\":{\"notice\":\"generateReplicationBlock is used to generate a replication block when someone sucessfully replicates an Idea\"},\"generateUseBlockWeight(string)\":{\"notice\":\"UseBlockWeight is an internal function that tracks loacal use weightTracker\"},\"getPropID(string)\":{\"notice\":\"getPropID function allows one to rerieve a proposal ID by its ipfs hash\"},\"ideaVote(uint256,bool)\":{\"notice\":\"vote is a member only function which allows DecentraCorp members to vote on proposalPassed\"},\"percent(uint256,uint256,uint256)\":{\"notice\":\"set_Quorum is an internal function used by proposal vote counts to see if the community approves\"},\"proposeIdea(string,uint256,uint256,uint256,uint256,uint256,address,address)\":{\"notice\":\"proposeIdea is used to allow ANYONE to petition the community for idea approval\"},\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/UseBlockLogic.sol\":\"UseBlockLogic\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/IdeaBlockLogic.sol\":{\"keccak256\":\"0xfa47cbc1e4b7ac50dc236795cd6efbc654ab9daef7cbea60f77fa76e41107085\",\"urls\":[\"bzzr://3c3bae021e27d298f40fe1ea2cd4cecce53d7917c6b8462803f4f69718254373\"]},\"/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/RepBlockLogic.sol\":{\"keccak256\":\"0xa4041a7f4be49406bc01dd4588172aa26e17480b21403ace1177c328ddeffaa8\",\"urls\":[\"bzzr://f9f96b35fcb86172f889eea7c42725d8f9ede8e5ae49c1490117e97cea736092\"]},\"/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/UseBlockLogic.sol\":{\"keccak256\":\"0x36e7dd7abef8e7bc26070fc740d12601fd7b206f01fe77b2094c4addf06df9f4\",\"urls\":[\"bzzr://0ac44c09e254e950636ef0318b011e0d3f967b2874fabf3c1c9ba398d68246f2\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0d4306da5305cb78f09c70c18ec86dbc66f22fa5ade90edc20e1ab88e16d4d10\",\"urls\":[\"bzzr://47885dccac32ee543284e93f21a5f62c499076b04d01b12ff67aefffbbdcbd34\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xe96d36a781eb7ce39e70936f7da6591356199ca7e46b2bf6ea0c87b2ea84e0ab\",\"urls\":[\"bzzr://caf23f5ace762c5f52ddf315ee9c6489c662061cf12d2e2d693e8e28ff2b27e3\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzzr://e45c5a995f57637b2300a376647ee345cc9cb30ee1984735091fcd4b10ff3500\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "55:3670:5:-;;;;;;;;;",
  "deployedSourceMap": "55:3670:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;55:3670:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6259:397:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6259:397:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12042:121;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12042:121:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;12042:121:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12042:121:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;12042:121:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;12042:121:3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2695:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2695:54:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7536:1915;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7536:1915:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2165:50;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2165:50:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2165:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12173:129;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12173:129:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12173:129:3;;;;;;;;;;;;;;;;;1889:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7019:379;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7019:379:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1854:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2855:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2855:57:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11664:226;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11664:226:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2118:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2118:43:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4734:897;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4734:897:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4734:897:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4734:897:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4734:897:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4734:897:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2801:50;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2801:50:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2801:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:137:17;;;:::i;:::-;;1955:26:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2287:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2287:42:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;804:77:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12312:271:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12312:271:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1124:92:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;526:1957:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;526:1957:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;526:1957:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;526:1957:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;526:1957:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;526:1957:4;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;526:1957:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;526:1957:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;526:1957:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;526:1957:4;;;;;;;;;;;;;;;:::i;:::-;;599:142:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;599:142:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;2333:50:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2333:50:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6666:343;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6666:343:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2753:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2753:44:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1613:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2219:64;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2219:64:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2219:64:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1367:2355:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1367:2355:5;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1367:2355:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1367:2355:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1367:2355:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1367:2355:5;;;;;;;;;;;;;;;:::i;:::-;;1878:107:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1878:107:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;2648:43:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2648:43:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1642:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1920:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6259:397;6346:13;6434:15;6482:1;6472:9;:11;6465:2;:19;6453:9;:31;6434:50;;6547:14;6600:2;6595:1;6580:11;6567:10;:24;;;;;;6566:30;6565:37;;;;;;6547:55;;6629:9;6620:19;;;;6259:397;;;;;:::o;12042:121::-;12101:4;12133:7;12141:4;12133:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;12133:13:3;;;;;;;;;;;;;;;;;;;;;;12126:20;;12042:121;;;:::o;2695:54::-;;;;;;;;;;;;;;;;;:::o;7536:1915::-;7749:4;7713:40;;:5;;;;;;;;;;;:20;;;7734:10;7713:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7713:32:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7713:32:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7713:32:3;;;;;;;;;;;;;;;;:40;;;7705:49;;;;;;7776:22;7801:13;:30;7815:15;7801:30;;;;;;;;;;;7776:55;;7936:4;7913:27;;:1;:7;;:19;7921:10;7913:19;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;;7905:36;;;;;;8067:4;8053:18;;:1;:10;;;;;;;;;;;;:18;;;;8045:27;;;;;;8160:11;8174:1;:7;;:16;;;;;;;;;;;:::i;:::-;8160:30;;8313:54;;;;;;;;8330:16;8313:54;;;;;;8355:10;8313:54;;;;;8295:1;:7;;8303:6;8295:15;;;;;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8513:4;8491:1;:7;;:19;8499:10;8491:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;8606:5;;;;;;;;;;;:20;;;8627:10;8606:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8606:32:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8606:32:3;;;;8724:35;8730:10;8742:16;8724:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8819:14;8836:5;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8836:22:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8836:22:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8836:22:3;;;;;;;;;;;;;;;;8819:39;;8943:10;8956:40;8970:1;:7;;:14;;;;8986:9;8956:13;:40::i;:::-;8943:53;;9233:5;9230:191;;;9276:41;9290:15;9307:9;9276:13;:41::i;:::-;9230:191;7536:1915;;;;;;:::o;2165:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12173:129::-;12227:13;12264:15;:21;12280:4;12264:21;;;;;;;;;;;;;;;12257:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12173:129;;;:::o;1889:27::-;;;;:::o;7019:379::-;7100:4;7126:19;7148:33;7156:10;7168:8;7178:1;7148:7;:33::i;:::-;7126:55;;7225:2;7207:14;:20;7204:168;;7265:4;7258:11;;;;;7204:168;7337:5;7330:12;;;7019:379;;;;;:::o;1854:31::-;;;;:::o;2855:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11664:226::-;11746:4;11774:22;11799:13;:30;11813:15;11799:30;;;;;;;;;;;11774:55;;11858:1;:7;;:13;11866:4;11858:13;;;;;;;;;;;;;;;;;;;;;;;;;11851:20;;;11664:226;;;;:::o;2118:43::-;;;;;;;;;;;;;;;;;:::o;4734:897::-;4978:19;;:21;;;;;;;;;;;;;5033:19;;5012:7;5020:9;5012:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5012:18:3;;;;;;;;;;;;;;;;;;;;;:40;;;;5065:12;5115:3;5104:8;5080:21;:32;:38;;;;;;5065:53;;5131:22;5156:13;:34;5170:19;;5156:34;;;;;;;;;;;5131:59;;5215:9;5202:1;:10;;:22;;;;;;;;;;;;:::i;:::-;;5250:5;5236:1;:11;;;:19;;;;;;;;;;;;;;;;;;5280:5;5267:1;:10;;;:18;;;;;;;;;;;;;;;;;;5322:21;5297:1;:22;;:46;;;;5367:7;5355:1;:9;;:19;;;;5402:12;5386:1;:13;;:28;;;;5447:17;5426:1;:18;;:38;;;;5491:11;5476:1;:12;;:26;;;;5534:9;5514:1;:17;;;:29;;;;;;;;;;;;;;;;;;5576:10;5555:1;:18;;;:31;;;;;;;;;;;;;;;;;;5603:23;5616:9;5603:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5603:23:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4734:897;;;;;;;;;;:::o;2801:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1570:137:17:-;1008:9;:7;:9::i;:::-;1000:18;;;;;;1668:1;1631:40;;1652:6;;;;;;;;;;;1631:40;;;;;;;;;;;;1698:1;1681:6;;:19;;;;;;;;;;;;;;;;;;1570:137::o;1955:26:3:-;;;;:::o;2287:42::-;;;;;;;;;;;;;;;;;:::o;804:77:17:-;842:7;868:6;;;;;;;;;;;861:13;;804:77;:::o;12312:271:3:-;12406:22;12431:13;:30;12445:15;12431:30;;;;;;;;;;;12406:55;;12501:1;:17;;;;;;;;;;;;12487:31;;:10;:31;;;12479:40;;;;;;12557:9;12537:1;:17;;;:29;;;;;;;;;;;;;;;;;;12312:271;;;:::o;1124:92:17:-;1164:4;1203:6;;;;;;;;;;;1187:22;;:12;:10;:12::i;:::-;:22;;;1180:29;;1124:92;:::o;526:1957:4:-;670:14;687:5;;;;;;;;;;;:20;;;708:7;687:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;687:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;687:29:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;687:29:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;687:29:4;;;;;;;;;;;;;;;;670:46;;769:10;782:5;;;;;;;;;;;:14;;;797:6;782:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;782:22:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;782:22:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;782:22:4;;;;;;;;;;;;;;;;769:35;;833:25;861:13;:22;875:7;861:22;;;;;;;;;;;833:50;;934:5;;;;;;;;;;;:20;;;955:6;934:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;934:28:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;934:28:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;934:28:4;;;;;;;;;;;;;;;;926:37;;;;;;1041:4;:21;;;1032:5;:30;;1024:39;;;;;;1169:4;:14;;;;;;;;;;;;1161:23;;;;;;1233:5;;;;;;;;;;;:18;;;1252:6;1260:4;:16;;;1233:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1233:44:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1233:44:4;;;;1353:16;1400:4;:12;;;1372:4;:25;;;:40;1353:59;;1471:16;1490:4;:20;;;;;;;;;;;;1471:39;;1573:25;1601:7;:16;1609:7;1601:16;;;;;;;;;;;;;;;1573:44;;1639:11;1623:1;:13;;:27;;;;1667:7;1656:1;:8;;:18;;;;1692:4;:12;;;1680:1;:9;;:24;;;;1731:8;1710:1;:18;;;:29;;;;;;;;;;;;;;;;;;1768:7;1745:1;:20;;;:30;;;;;;;;;;;;;;;;;;1803:6;1781:1;:19;;;:28;;;;;;;;;;;;;;;;;;1833:9;1815:1;:15;;;:27;;;;;;;;;;;;;;;;;;1867:7;1848:1;:16;;:26;;;;;;;;;;;;:::i;:::-;;1944:42;1925:61;;:1;:15;;;;;;;;;;;;:61;;;1922:101;;;2012:6;1994:1;:15;;;:24;;;;;;;;;;;;;;;;;;1922:101;2055:14;:23;2070:7;2055:23;;;;;;;;;;;;:25;;;;;;;;;;;;2029:14;:23;2044:7;2029:23;;;;;;;;;;;:51;;;;2168:4;2144:12;:21;2157:7;2144:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;2256:8;:16;2265:6;2256:16;;;;;;;;;;;;;;;:25;2273:7;2256:25;;;;;;;;;;;;:27;;;;;;;;;;;;2228:8;:16;2237:6;2228:16;;;;;;;;;;;;;;;:25;2245:7;2228:25;;;;;;;;;;;:55;;;;2363:5;;;;;;;;;;;:20;;;2384:6;2363:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2363:28:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2363:28:4;;;;2431:3;2397:22;:31;2420:7;2397:31;;;;;;;;;;;;;;;:37;;;;2445:31;2460:7;2469:6;2445:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;526:1957;;;;;;;;;;;:::o;599:142:17:-;1024:12:21;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;673:6:17;664;;:15;;;;;;;;;;;;;;;;;;727:6;;;;;;;;;;;694:40;;723:1;694:40;;;;;;;;;;;;1268:14:21;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;599:142:17;;:::o;2333:50:3:-;;;;;;;;;;;;;;;;;:::o;6666:343::-;6741:4;6767:19;6789:33;6797:10;6809:8;6819:1;6789:7;:33::i;:::-;6767:55;;6864:2;6846:14;:20;6843:148;;6900:4;6893:11;;;;;6843:148;6964:5;6957:12;;;6666:343;;;;;:::o;2753:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;1613:25::-;;;;;;;;;;;;;:::o;2219:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1367:2355:5:-;1509:12;:24;1522:10;1509:24;;;;;;;;;;;;;;;;;;;;;;;;;1501:33;;;;;;1540:12;1555:10;1540:25;;1637:28;;:::i;:::-;1668:7;:13;1676:4;1668:13;;;;;;;;;;;;;;;1637:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2001:5;:20;;;1983:40;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1983:40:5;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1983:40:5;;;1973:51;;;;;;1959:7;1941:27;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1941:27:5;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1941:27:5;;;1931:38;;;;;;:93;1923:102;;;;;;2113:11;2127:5;:12;;;2113:26;;2213:25;2241:13;:21;2255:6;2241:21;;;;;;;;;;;2213:49;;2337:14;2381:1;2354:18;:24;2373:4;2354:24;;;;;;;;;;;;;;;;:28;2337:45;;2487:4;:15;;;2455:22;:28;2478:4;2455:28;;;;;;;;;;;;;;;;:47;2448:3;:54;;2440:63;;;;;;2729:13;:21;2743:6;2729:21;;;;;;;;;;;;2717:9;:33;2714:1004;;;2812:28;2835:4;2812:22;:28::i;:::-;2925:3;2894:22;:28;2917:4;2894:28;;;;;;;;;;;;;;;:34;;;;3039:9;3015:13;:21;3029:6;3015:21;;;;;;;;;;;:33;;;;3155:1;3128:18;:24;3147:4;3128:24;;;;;;;;;;;;;;;:28;;;;2714:1004;;;3342:3;3311:22;:28;3334:4;3311:28;;;;;;;;;;;;;;;:34;;;;3477:9;3450:18;:24;3469:4;3450:24;;;;;;;;;;;;;;;:36;;;;3566:52;3581:4;3587:5;:19;;;3608:9;3566:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2714:1004;1367:2355;;;;;;:::o;1878:107:17:-;1008:9;:7;:9::i;:::-;1000:18;;;;;;1950:28;1969:8;1950:18;:28::i;:::-;1878:107;:::o;2648:43:3:-;;;;;;;;;;;;;;;;;:::o;1642:33::-;;;;;;;;;;;;;:::o;1920:31::-;;;;:::o;9772:1881::-;9864:22;9889:13;:30;9903:15;9889:30;;;;;;;;;;;9864:55;;10019:8;10030:1;10019:12;;10068:6;10077:1;10068:10;;10063:276;10085:1;:7;;:14;;;;10080:1;:19;10063:276;;;10140:14;10157:1;:7;;10165:1;10157:10;;;;;;;;;;;;;;;10140:27;;10206:1;:11;;;;;;;;;;;;10202:101;;;10262:1;10255:8;;;;10202:101;10063:276;10101:3;;;;;10063:276;;;;10361:11;10375:35;10395:3;10400:9;10375:19;:35::i;:::-;10361:49;;10558:6;10554:1067;;;10702:4;10688:1;:11;;;:18;;;;;;;;;;;;;;;;;;10760:4;10747:1;:10;;;:17;;;;;;;;;;;;;;;;;;10839:15;10805:11;:31;10817:1;:18;;;;;;;;;;;;10805:31;;;;;;;;;;;;;;;:49;;;;10895:19;:17;:19::i;:::-;;10955:10;;;;;;;;;;;:23;;;10979:1;:18;;;;;;;;;;;;10955:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10955:43:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10955:43:3;;;;11039:5;;;;;;;;;;;:18;;;11059:1;:17;;;;;;;;;;;;11078:15;;11039:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11039:55:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11039:55:3;;;;11135:5;;;;;;;;;;;:20;;;11156:1;:17;;;;;;;;;;;;11135:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11135:39:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11135:39:3;;;;11215:15;:34;11231:1;:17;;;;;;;;;;;;11215:34;;;;;;;;;;;;;;;11255:15;11215:56;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;11215:56:3;;;;;;;;;;;;;;;;;;;;;;11317:44;11331:1;:10;;11343:1;:17;;;;;;;;;;;;11317:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10554:1067;;;11519:5;11506:1;:10;;;:18;;;;;;;;;;;;;;;;;;11579:4;11565:1;:11;;;:18;;;;;;;;;;;;;;;;;;10554:1067;9772:1881;;;;;:::o;791:88:15:-;836:7;862:10;855:17;;791:88;:::o;1409:467:21:-;1456:4;1797:10;1842:7;1830:20;1824:26;;1870:1;1864:2;:7;1857:14;;;1409:467;:::o;276:947:5:-;335:28;;:::i;:::-;366:7;:13;374:4;366:13;;;;;;;;;;;;;;;335:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:14;;:16;;;;;;;;;;;;;706:13;742:1;722:5;:17;;;:21;;;;;;706:37;;827:5;;;;;;;;;;;:18;;;846:5;:23;;;871:8;827:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;827:53:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;827:53:5;;;;943:5;;;;;;;;;;;:18;;;962:5;:19;;;983:8;943:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;943:49:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;943:49:5;;;;1054:5;;;;;;;;;;;:18;;;1073:5;:22;;;1097:5;:13;;;1054:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1054:57:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1054:57:5;;;;1163:55;1178:4;1184:5;:19;;;1205:5;:12;;;1163:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;276:947;;;:::o;2129:183:17:-;2222:1;2202:22;;:8;:22;;;;2194:31;;;;;;2269:8;2240:38;;2261:6;;;;;;;;;;;2240:38;;;;;;;;;;;;2297:8;2288:6;;:17;;;;;;;;;;;;;;;;;;2129:183;:::o;5828:277:3:-;5874:4;5919:8;5897:19;;:30;5890:3;:37;5887:212;;5975:1;5957:15;;:19;;;;;;5939:15;:37;;;;6008:3;5986:19;:25;;;;6028:15;;6021:22;;;;5887:212;6075:15;;6068:22;;5828:277;;:::o;55:3670:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\nimport './RepBlockLogic.sol';\n\ncontract UseBlockLogic is RepBlockLogic {\n  ///@notice generateGlobalUseBlock is an internal function called when the cryptopatent blockchain has determined\n  ///        that a replication has mined a global use block.\n  function generateGlobalUseBlock(address _rep) internal {\n  ReplicationInfo memory infoR = repInfo[_rep];\n  //pulls a specific replications information in to be used as the variable infoR\n  // sets poolModedBlockReward equal to the block reward for a specific replications\n  // and multiplies it by how many replications a member owns. this is the pool mining bonus\n    globalUseBlock++;\n  //increases the Global UseBlock count\n   uint halfsies = infoR.BlockReward / 2;\n  //cuts block reward in half to be split between the rep maker and rep owner\n    DCPoA.proxyNTCMint(infoR.ReplicationMember, halfsies);\n  //mints the replicating member his modded block reward\n    DCPoA.proxyNTCMint(infoR.OwnersAddress, halfsies);\n  //mints the replication Owner his modded block reward\n    DCPoA.proxyNTCMint(infoR.InventorsAddress, infoR.Royalty);\n  //mints royalties to the idea inventor\n    emit GlobalUseBlock(_rep, infoR.OwnersAddress, infoR.IdeaID);\n  }\n\n  ///@notice UseBlockWeight is an internal function that tracks loacal use weightTracker\n  ///@dev this is called by generateUseBlockWeight\n  function generateUseBlockWeight(string memory _DLhash) public {\n  //requires the msg.sender's address is an activated replication\n    require(replications[msg.sender]);\n    address _rep = msg.sender;\n  //pulls the specific replications replication block into memory\n    ReplicationInfo memory infoR = repInfo[_rep];\n  //requires that the DeviceLock IPFS hash sent from the MineUseBlock function of the EPMS matches\n  //the one stored in the devices Replication Block...\n  //this encodes both strings as == doesnt work with strings in solidity directly\n    require(keccak256(abi.encodePacked((_DLhash))) == keccak256(abi.encodePacked((infoR.DeviceLockHash))));\n  //pulls a specific replications information in to be used as the variable infoR\n    uint ideaID = infoR.IdeaID;\n  //sets ideaID as a specific ideaID from the replications struct\n      IdeaProposal storage info = ideaProposals[ideaID];\n  //pulls a specific idea struct int to be used as the variable info\n    uint newWeight = localWeightTracker[_rep] + 1;\n  // increases the weight of a specific replication\n    require(now >= localMiningtimeTracker[_rep] +  info.miningTime);\n  //requires the time the function is called to be later than the combined total of its last call\n  //and the specific ideas mining time resraint\n  //this require fails if the rep is calling to frequently\n    if(newWeight > weightTracker[ideaID]) {\n  //checks if the replication has the heaviest weight\n    generateGlobalUseBlock(_rep);\n  //if it does it generates a global use block\n     localMiningtimeTracker[_rep] = now;\n  //resets the global mining time for a specific idea after a useBlock is mined\n     weightTracker[ideaID] = newWeight;\n  //sets the global block height to the weight of the mining replication\n     localWeightTracker[_rep] = 0;\n  //resets the local weight tracker for the mining replication\n  } else {\n    //if the replications weight is not heavy enough to mine a new block\n      localMiningtimeTracker[_rep] = now;\n    //set its local mining time tracker to the current time so it cant abuse the mining function\n      localWeightTracker[_rep] = newWeight;\n    //setts the local weight tracker for the rep to its new weight\n      emit LocalUseWeight(_rep, infoR.OwnersAddress, newWeight);\n    //emit event signaling that a replication mined a local weight without a global Useblock\n    }\n  }\n\n}\n",
  "sourcePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/UseBlockLogic.sol",
  "ast": {
    "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/UseBlockLogic.sol",
    "exportedSymbols": {
      "UseBlockLogic": [
        2131
      ]
    },
    "id": 2132,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1950,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/RepBlockLogic.sol",
        "file": "./RepBlockLogic.sol",
        "id": 1951,
        "nodeType": "ImportDirective",
        "scope": 2132,
        "sourceUnit": 1949,
        "src": "24:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1952,
              "name": "RepBlockLogic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1948,
              "src": "81:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RepBlockLogic_$1948",
                "typeString": "contract RepBlockLogic"
              }
            },
            "id": 1953,
            "nodeType": "InheritanceSpecifier",
            "src": "81:13:5"
          }
        ],
        "contractDependencies": [
          1756,
          1948,
          4839,
          5089,
          5681
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2131,
        "linearizedBaseContracts": [
          2131,
          1948,
          1756,
          5089,
          4839,
          5681
        ],
        "name": "UseBlockLogic",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2007,
              "nodeType": "Block",
              "src": "331:892:5",
              "statements": [
                {
                  "assignments": [
                    1959
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1959,
                      "name": "infoR",
                      "nodeType": "VariableDeclaration",
                      "scope": 2007,
                      "src": "335:28:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1958,
                        "name": "ReplicationInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1218,
                        "src": "335:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1963,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1960,
                      "name": "repInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "366:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ReplicationInfo_$1218_storage_$",
                        "typeString": "mapping(address => struct IdeaBlockLogic.ReplicationInfo storage ref)"
                      }
                    },
                    "id": 1962,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1961,
                      "name": "_rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1955,
                      "src": "374:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "366:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage",
                      "typeString": "struct IdeaBlockLogic.ReplicationInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "335:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "645:16:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 1964,
                      "name": "globalUseBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1049,
                      "src": "645:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1966,
                  "nodeType": "ExpressionStatement",
                  "src": "645:16:5"
                },
                {
                  "assignments": [
                    1968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1968,
                      "name": "halfsies",
                      "nodeType": "VariableDeclaration",
                      "scope": 2007,
                      "src": "706:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1967,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "706:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1973,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1969,
                        "name": "infoR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1959,
                        "src": "722:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                        }
                      },
                      "id": 1970,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "BlockReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1203,
                      "src": "722:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 1971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "742:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "722:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "706:37:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1977,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "846:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1978,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ReplicationMember",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1213,
                        "src": "846:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1979,
                        "name": "halfsies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1968,
                        "src": "871:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1974,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "827:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proxyNTCMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 974,
                      "src": "827:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "827:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1981,
                  "nodeType": "ExpressionStatement",
                  "src": "827:53:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1985,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "962:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1986,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "OwnersAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1215,
                        "src": "962:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1987,
                        "name": "halfsies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1968,
                        "src": "983:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1982,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "943:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proxyNTCMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 974,
                      "src": "943:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "943:49:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1989,
                  "nodeType": "ExpressionStatement",
                  "src": "943:49:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1993,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "1073:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1994,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "InventorsAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1209,
                        "src": "1073:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1995,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "1097:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1996,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "Royalty",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1207,
                        "src": "1097:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1990,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "1054:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proxyNTCMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 974,
                      "src": "1054:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1054:57:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1998,
                  "nodeType": "ExpressionStatement",
                  "src": "1054:57:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2000,
                        "name": "_rep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1955,
                        "src": "1178:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2001,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "1184:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 2002,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "OwnersAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1215,
                        "src": "1184:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2003,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "1205:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 2004,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "IdeaID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1205,
                        "src": "1205:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1999,
                      "name": "GlobalUseBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1142,
                      "src": "1163:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1163:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2006,
                  "nodeType": "EmitStatement",
                  "src": "1158:60:5"
                }
              ]
            },
            "documentation": "@notice generateGlobalUseBlock is an internal function called when the cryptopatent blockchain has determined\n        that a replication has mined a global use block.",
            "id": 2008,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateGlobalUseBlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1955,
                  "name": "_rep",
                  "nodeType": "VariableDeclaration",
                  "scope": 2008,
                  "src": "308:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "308:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "307:14:5"
            },
            "returnParameters": {
              "id": 1957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:5"
            },
            "scope": 2131,
            "src": "276:947:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2129,
              "nodeType": "Block",
              "src": "1429:2293:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2014,
                          "name": "replications",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1081,
                          "src": "1509:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 2017,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2015,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5696,
                            "src": "1522:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1522:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1509:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2013,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "1501:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1501:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2019,
                  "nodeType": "ExpressionStatement",
                  "src": "1501:33:5"
                },
                {
                  "assignments": [
                    2021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2021,
                      "name": "_rep",
                      "nodeType": "VariableDeclaration",
                      "scope": 2129,
                      "src": "1540:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2020,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1540:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2024,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2022,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5696,
                      "src": "1555:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1555:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1540:25:5"
                },
                {
                  "assignments": [
                    2026
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2026,
                      "name": "infoR",
                      "nodeType": "VariableDeclaration",
                      "scope": 2129,
                      "src": "1637:28:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2025,
                        "name": "ReplicationInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1218,
                        "src": "1637:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2030,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2027,
                      "name": "repInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "1668:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ReplicationInfo_$1218_storage_$",
                        "typeString": "mapping(address => struct IdeaBlockLogic.ReplicationInfo storage ref)"
                      }
                    },
                    "id": 2029,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2028,
                      "name": "_rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2021,
                      "src": "1676:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1668:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage",
                      "typeString": "struct IdeaBlockLogic.ReplicationInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1637:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2035,
                                      "name": "_DLhash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2010,
                                      "src": "1959:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 2036,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1958:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2033,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5683,
                                  "src": "1941:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2034,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1941:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1941:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2032,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5690,
                            "src": "1931:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1931:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2042,
                                        "name": "infoR",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2026,
                                        "src": "2001:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                                          "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                                        }
                                      },
                                      "id": 2043,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "DeviceLockHash",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1217,
                                      "src": "2001:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 2044,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2000:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2040,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5683,
                                  "src": "1983:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2041,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1983:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1983:40:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2039,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5690,
                            "src": "1973:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1973:51:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1931:93:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2031,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "1923:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1923:102:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2049,
                  "nodeType": "ExpressionStatement",
                  "src": "1923:102:5"
                },
                {
                  "assignments": [
                    2051
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2051,
                      "name": "ideaID",
                      "nodeType": "VariableDeclaration",
                      "scope": 2129,
                      "src": "2113:11:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2050,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2113:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2054,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2052,
                      "name": "infoR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2026,
                      "src": "2127:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                      }
                    },
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "IdeaID",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1205,
                    "src": "2127:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2113:26:5"
                },
                {
                  "assignments": [
                    2056
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2056,
                      "name": "info",
                      "nodeType": "VariableDeclaration",
                      "scope": 2129,
                      "src": "2213:25:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                        "typeString": "struct IdeaBlockLogic.IdeaProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2055,
                        "name": "IdeaProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1170,
                        "src": "2213:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2060,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2057,
                      "name": "ideaProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1057,
                      "src": "2241:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IdeaProposal_$1170_storage_$",
                        "typeString": "mapping(uint256 => struct IdeaBlockLogic.IdeaProposal storage ref)"
                      }
                    },
                    "id": 2059,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2058,
                      "name": "ideaID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2051,
                      "src": "2255:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2241:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage",
                      "typeString": "struct IdeaBlockLogic.IdeaProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2213:49:5"
                },
                {
                  "assignments": [
                    2062
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2062,
                      "name": "newWeight",
                      "nodeType": "VariableDeclaration",
                      "scope": 2129,
                      "src": "2337:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2061,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2337:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2068,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2063,
                        "name": "localWeightTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1069,
                        "src": "2354:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2065,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2064,
                        "name": "_rep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2021,
                        "src": "2373:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2354:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 2066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2381:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2354:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2337:45:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2070,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5698,
                          "src": "2448:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2071,
                              "name": "localMiningtimeTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1077,
                              "src": "2455:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2073,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2072,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2021,
                              "src": "2478:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2455:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2074,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2056,
                              "src": "2487:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 2075,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "miningTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1154,
                            "src": "2487:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2455:47:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2448:54:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2069,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "2440:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:63:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2079,
                  "nodeType": "ExpressionStatement",
                  "src": "2440:63:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2080,
                      "name": "newWeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2062,
                      "src": "2717:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2081,
                        "name": "weightTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "2729:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2083,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2082,
                        "name": "ideaID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2051,
                        "src": "2743:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2729:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2717:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2127,
                    "nodeType": "Block",
                    "src": "3230:488:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2108,
                              "name": "localMiningtimeTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1077,
                              "src": "3311:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2110,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2109,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2021,
                              "src": "3334:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3311:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2111,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5698,
                            "src": "3342:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3311:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2113,
                        "nodeType": "ExpressionStatement",
                        "src": "3311:34:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2114,
                              "name": "localWeightTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1069,
                              "src": "3450:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2116,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2115,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2021,
                              "src": "3469:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3450:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2117,
                            "name": "newWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2062,
                            "src": "3477:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3450:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2119,
                        "nodeType": "ExpressionStatement",
                        "src": "3450:36:5"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2121,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2021,
                              "src": "3581:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2122,
                                "name": "infoR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2026,
                                "src": "3587:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                                  "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                                }
                              },
                              "id": 2123,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "OwnersAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1215,
                              "src": "3587:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2124,
                              "name": "newWeight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2062,
                              "src": "3608:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2120,
                            "name": "LocalUseWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1134,
                            "src": "3566:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3566:52:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2126,
                        "nodeType": "EmitStatement",
                        "src": "3561:57:5"
                      }
                    ]
                  },
                  "id": 2128,
                  "nodeType": "IfStatement",
                  "src": "2714:1004:5",
                  "trueBody": {
                    "id": 2107,
                    "nodeType": "Block",
                    "src": "2752:472:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2086,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2021,
                              "src": "2835:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2085,
                            "name": "generateGlobalUseBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2008,
                            "src": "2812:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2812:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2088,
                        "nodeType": "ExpressionStatement",
                        "src": "2812:28:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2089,
                              "name": "localMiningtimeTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1077,
                              "src": "2894:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2091,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2090,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2021,
                              "src": "2917:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2894:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2092,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5698,
                            "src": "2925:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2894:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2094,
                        "nodeType": "ExpressionStatement",
                        "src": "2894:34:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2095,
                              "name": "weightTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1065,
                              "src": "3015:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 2097,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2096,
                              "name": "ideaID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2051,
                              "src": "3029:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3015:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2098,
                            "name": "newWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2062,
                            "src": "3039:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3015:33:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2100,
                        "nodeType": "ExpressionStatement",
                        "src": "3015:33:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2101,
                              "name": "localWeightTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1069,
                              "src": "3128:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2103,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2102,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2021,
                              "src": "3147:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3128:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3155:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3128:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2106,
                        "nodeType": "ExpressionStatement",
                        "src": "3128:28:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice UseBlockWeight is an internal function that tracks loacal use weightTracker\n@dev this is called by generateUseBlockWeight",
            "id": 2130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateUseBlockWeight",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2010,
                  "name": "_DLhash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2130,
                  "src": "1399:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2009,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1398:23:5"
            },
            "returnParameters": {
              "id": 2012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1429:0:5"
            },
            "scope": 2131,
            "src": "1367:2355:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2132,
        "src": "55:3670:5"
      }
    ],
    "src": "0:3726:5"
  },
  "legacyAST": {
    "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/UseBlockLogic.sol",
    "exportedSymbols": {
      "UseBlockLogic": [
        2131
      ]
    },
    "id": 2132,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1950,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/RepBlockLogic.sol",
        "file": "./RepBlockLogic.sol",
        "id": 1951,
        "nodeType": "ImportDirective",
        "scope": 2132,
        "sourceUnit": 1949,
        "src": "24:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1952,
              "name": "RepBlockLogic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1948,
              "src": "81:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RepBlockLogic_$1948",
                "typeString": "contract RepBlockLogic"
              }
            },
            "id": 1953,
            "nodeType": "InheritanceSpecifier",
            "src": "81:13:5"
          }
        ],
        "contractDependencies": [
          1756,
          1948,
          4839,
          5089,
          5681
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2131,
        "linearizedBaseContracts": [
          2131,
          1948,
          1756,
          5089,
          4839,
          5681
        ],
        "name": "UseBlockLogic",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2007,
              "nodeType": "Block",
              "src": "331:892:5",
              "statements": [
                {
                  "assignments": [
                    1959
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1959,
                      "name": "infoR",
                      "nodeType": "VariableDeclaration",
                      "scope": 2007,
                      "src": "335:28:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1958,
                        "name": "ReplicationInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1218,
                        "src": "335:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1963,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1960,
                      "name": "repInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "366:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ReplicationInfo_$1218_storage_$",
                        "typeString": "mapping(address => struct IdeaBlockLogic.ReplicationInfo storage ref)"
                      }
                    },
                    "id": 1962,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1961,
                      "name": "_rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1955,
                      "src": "374:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "366:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage",
                      "typeString": "struct IdeaBlockLogic.ReplicationInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "335:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "645:16:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 1964,
                      "name": "globalUseBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1049,
                      "src": "645:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1966,
                  "nodeType": "ExpressionStatement",
                  "src": "645:16:5"
                },
                {
                  "assignments": [
                    1968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1968,
                      "name": "halfsies",
                      "nodeType": "VariableDeclaration",
                      "scope": 2007,
                      "src": "706:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1967,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "706:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1973,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1969,
                        "name": "infoR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1959,
                        "src": "722:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                        }
                      },
                      "id": 1970,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "BlockReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1203,
                      "src": "722:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 1971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "742:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "722:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "706:37:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1977,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "846:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1978,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ReplicationMember",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1213,
                        "src": "846:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1979,
                        "name": "halfsies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1968,
                        "src": "871:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1974,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "827:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proxyNTCMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 974,
                      "src": "827:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "827:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1981,
                  "nodeType": "ExpressionStatement",
                  "src": "827:53:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1985,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "962:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1986,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "OwnersAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1215,
                        "src": "962:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1987,
                        "name": "halfsies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1968,
                        "src": "983:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1982,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "943:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proxyNTCMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 974,
                      "src": "943:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "943:49:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1989,
                  "nodeType": "ExpressionStatement",
                  "src": "943:49:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1993,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "1073:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1994,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "InventorsAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1209,
                        "src": "1073:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1995,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "1097:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1996,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "Royalty",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1207,
                        "src": "1097:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1990,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "1054:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proxyNTCMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 974,
                      "src": "1054:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1054:57:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1998,
                  "nodeType": "ExpressionStatement",
                  "src": "1054:57:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2000,
                        "name": "_rep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1955,
                        "src": "1178:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2001,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "1184:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 2002,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "OwnersAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1215,
                        "src": "1184:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2003,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "1205:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 2004,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "IdeaID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1205,
                        "src": "1205:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1999,
                      "name": "GlobalUseBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1142,
                      "src": "1163:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1163:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2006,
                  "nodeType": "EmitStatement",
                  "src": "1158:60:5"
                }
              ]
            },
            "documentation": "@notice generateGlobalUseBlock is an internal function called when the cryptopatent blockchain has determined\n        that a replication has mined a global use block.",
            "id": 2008,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateGlobalUseBlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1955,
                  "name": "_rep",
                  "nodeType": "VariableDeclaration",
                  "scope": 2008,
                  "src": "308:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "308:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "307:14:5"
            },
            "returnParameters": {
              "id": 1957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:5"
            },
            "scope": 2131,
            "src": "276:947:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2129,
              "nodeType": "Block",
              "src": "1429:2293:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2014,
                          "name": "replications",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1081,
                          "src": "1509:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 2017,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2015,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5696,
                            "src": "1522:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1522:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1509:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2013,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "1501:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1501:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2019,
                  "nodeType": "ExpressionStatement",
                  "src": "1501:33:5"
                },
                {
                  "assignments": [
                    2021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2021,
                      "name": "_rep",
                      "nodeType": "VariableDeclaration",
                      "scope": 2129,
                      "src": "1540:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2020,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1540:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2024,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2022,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5696,
                      "src": "1555:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1555:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1540:25:5"
                },
                {
                  "assignments": [
                    2026
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2026,
                      "name": "infoR",
                      "nodeType": "VariableDeclaration",
                      "scope": 2129,
                      "src": "1637:28:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2025,
                        "name": "ReplicationInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1218,
                        "src": "1637:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2030,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2027,
                      "name": "repInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "1668:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ReplicationInfo_$1218_storage_$",
                        "typeString": "mapping(address => struct IdeaBlockLogic.ReplicationInfo storage ref)"
                      }
                    },
                    "id": 2029,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2028,
                      "name": "_rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2021,
                      "src": "1676:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1668:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage",
                      "typeString": "struct IdeaBlockLogic.ReplicationInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1637:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2035,
                                      "name": "_DLhash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2010,
                                      "src": "1959:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 2036,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1958:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2033,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5683,
                                  "src": "1941:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2034,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1941:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1941:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2032,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5690,
                            "src": "1931:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1931:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2042,
                                        "name": "infoR",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2026,
                                        "src": "2001:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                                          "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                                        }
                                      },
                                      "id": 2043,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "DeviceLockHash",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1217,
                                      "src": "2001:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 2044,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2000:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2040,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5683,
                                  "src": "1983:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2041,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1983:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1983:40:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2039,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5690,
                            "src": "1973:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1973:51:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1931:93:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2031,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "1923:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1923:102:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2049,
                  "nodeType": "ExpressionStatement",
                  "src": "1923:102:5"
                },
                {
                  "assignments": [
                    2051
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2051,
                      "name": "ideaID",
                      "nodeType": "VariableDeclaration",
                      "scope": 2129,
                      "src": "2113:11:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2050,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2113:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2054,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2052,
                      "name": "infoR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2026,
                      "src": "2127:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                      }
                    },
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "IdeaID",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1205,
                    "src": "2127:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2113:26:5"
                },
                {
                  "assignments": [
                    2056
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2056,
                      "name": "info",
                      "nodeType": "VariableDeclaration",
                      "scope": 2129,
                      "src": "2213:25:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                        "typeString": "struct IdeaBlockLogic.IdeaProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2055,
                        "name": "IdeaProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1170,
                        "src": "2213:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2060,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2057,
                      "name": "ideaProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1057,
                      "src": "2241:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IdeaProposal_$1170_storage_$",
                        "typeString": "mapping(uint256 => struct IdeaBlockLogic.IdeaProposal storage ref)"
                      }
                    },
                    "id": 2059,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2058,
                      "name": "ideaID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2051,
                      "src": "2255:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2241:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage",
                      "typeString": "struct IdeaBlockLogic.IdeaProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2213:49:5"
                },
                {
                  "assignments": [
                    2062
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2062,
                      "name": "newWeight",
                      "nodeType": "VariableDeclaration",
                      "scope": 2129,
                      "src": "2337:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2061,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2337:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2068,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2063,
                        "name": "localWeightTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1069,
                        "src": "2354:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2065,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2064,
                        "name": "_rep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2021,
                        "src": "2373:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2354:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 2066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2381:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2354:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2337:45:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2070,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5698,
                          "src": "2448:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2071,
                              "name": "localMiningtimeTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1077,
                              "src": "2455:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2073,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2072,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2021,
                              "src": "2478:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2455:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2074,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2056,
                              "src": "2487:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 2075,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "miningTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1154,
                            "src": "2487:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2455:47:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2448:54:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2069,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "2440:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:63:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2079,
                  "nodeType": "ExpressionStatement",
                  "src": "2440:63:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2080,
                      "name": "newWeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2062,
                      "src": "2717:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2081,
                        "name": "weightTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "2729:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2083,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2082,
                        "name": "ideaID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2051,
                        "src": "2743:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2729:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2717:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2127,
                    "nodeType": "Block",
                    "src": "3230:488:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2108,
                              "name": "localMiningtimeTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1077,
                              "src": "3311:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2110,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2109,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2021,
                              "src": "3334:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3311:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2111,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5698,
                            "src": "3342:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3311:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2113,
                        "nodeType": "ExpressionStatement",
                        "src": "3311:34:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2114,
                              "name": "localWeightTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1069,
                              "src": "3450:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2116,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2115,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2021,
                              "src": "3469:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3450:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2117,
                            "name": "newWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2062,
                            "src": "3477:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3450:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2119,
                        "nodeType": "ExpressionStatement",
                        "src": "3450:36:5"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2121,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2021,
                              "src": "3581:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2122,
                                "name": "infoR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2026,
                                "src": "3587:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                                  "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                                }
                              },
                              "id": 2123,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "OwnersAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1215,
                              "src": "3587:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2124,
                              "name": "newWeight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2062,
                              "src": "3608:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2120,
                            "name": "LocalUseWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1134,
                            "src": "3566:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3566:52:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2126,
                        "nodeType": "EmitStatement",
                        "src": "3561:57:5"
                      }
                    ]
                  },
                  "id": 2128,
                  "nodeType": "IfStatement",
                  "src": "2714:1004:5",
                  "trueBody": {
                    "id": 2107,
                    "nodeType": "Block",
                    "src": "2752:472:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2086,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2021,
                              "src": "2835:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2085,
                            "name": "generateGlobalUseBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2008,
                            "src": "2812:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2812:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2088,
                        "nodeType": "ExpressionStatement",
                        "src": "2812:28:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2089,
                              "name": "localMiningtimeTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1077,
                              "src": "2894:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2091,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2090,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2021,
                              "src": "2917:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2894:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2092,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5698,
                            "src": "2925:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2894:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2094,
                        "nodeType": "ExpressionStatement",
                        "src": "2894:34:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2095,
                              "name": "weightTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1065,
                              "src": "3015:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 2097,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2096,
                              "name": "ideaID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2051,
                              "src": "3029:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3015:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2098,
                            "name": "newWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2062,
                            "src": "3039:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3015:33:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2100,
                        "nodeType": "ExpressionStatement",
                        "src": "3015:33:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2101,
                              "name": "localWeightTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1069,
                              "src": "3128:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2103,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2102,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2021,
                              "src": "3147:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3128:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3155:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3128:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2106,
                        "nodeType": "ExpressionStatement",
                        "src": "3128:28:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice UseBlockWeight is an internal function that tracks loacal use weightTracker\n@dev this is called by generateUseBlockWeight",
            "id": 2130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateUseBlockWeight",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2010,
                  "name": "_DLhash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2130,
                  "src": "1399:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2009,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1398:23:5"
            },
            "returnParameters": {
              "id": 2012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1429:0:5"
            },
            "scope": 2131,
            "src": "1367:2355:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2132,
        "src": "55:3670:5"
      }
    ],
    "src": "0:3726:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-09-13T18:41:29.227Z",
  "devdoc": {
    "methods": {
      "generateReplicationBlock(uint256,address,address,string,string)": {
        "details": "this requires the replicator has enough Notio to meet the stake amount and burns it from existenceit also adds the replicator as a member of DecentraCorpfinally, this contract calls the Proof of Replication Ownership contract and mints a PoRO token to the msg.sender"
      },
      "generateUseBlockWeight(string)": {
        "details": "this is called by generateUseBlockWeight"
      },
      "getPropID(string)": {
        "details": "getPropID is made for easier front end interaction"
      },
      "initialize(address)": {
        "details": "The Ownable constructor sets the original `owner` of the contract to the sender account."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "percent(uint256,uint256,uint256)": {
        "details": "quorum is set to 60%"
      },
      "proposeIdea(string,uint256,uint256,uint256,uint256,uint256,address,address)": {
        "details": "the struct for this is set in interface.solidityidea proposals are put up for community approval"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "generateReplicationBlock(uint256,address,address,string,string)": {
        "notice": "generateReplicationBlock is used to generate a replication block when someone sucessfully replicates an Idea"
      },
      "generateUseBlockWeight(string)": {
        "notice": "UseBlockWeight is an internal function that tracks loacal use weightTracker"
      },
      "getPropID(string)": {
        "notice": "getPropID function allows one to rerieve a proposal ID by its ipfs hash"
      },
      "ideaVote(uint256,bool)": {
        "notice": "vote is a member only function which allows DecentraCorp members to vote on proposalPassed"
      },
      "percent(uint256,uint256,uint256)": {
        "notice": "set_Quorum is an internal function used by proposal vote counts to see if the community approves"
      },
      "proposeIdea(string,uint256,uint256,uint256,uint256,uint256,address,address)": {
        "notice": "proposeIdea is used to allow ANYONE to petition the community for idea approval"
      },
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}