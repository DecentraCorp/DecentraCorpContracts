{
  "contractName": "UseBlockLogic",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "localMiningtimeTracker",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ideaProposals",
      "outputs": [
        {
          "name": "IdeaIPFS",
          "type": "string"
        },
        {
          "name": "executed",
          "type": "bool"
        },
        {
          "name": "proposalPassed",
          "type": "bool"
        },
        {
          "name": "globalUseBlockAmount",
          "type": "uint256"
        },
        {
          "name": "royalty",
          "type": "uint256"
        },
        {
          "name": "miningTime",
          "type": "uint256"
        },
        {
          "name": "stakeAmount",
          "type": "uint256"
        },
        {
          "name": "inventorAddress",
          "type": "address"
        },
        {
          "name": "inventionAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ideaBlockReward",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalBlockHalfTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "repOwnes",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ideaVariables",
      "outputs": [
        {
          "name": "globalUseBlockAmount",
          "type": "uint256"
        },
        {
          "name": "royalty",
          "type": "uint256"
        },
        {
          "name": "miningTime",
          "type": "uint256"
        },
        {
          "name": "stakeAmount",
          "type": "uint256"
        },
        {
          "name": "inventorAddress",
          "type": "address"
        },
        {
          "name": "inventionAddress",
          "type": "address"
        },
        {
          "name": "IPFShash",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalIdeaCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "IdeaAddToId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "repInfo",
      "outputs": [
        {
          "name": "BlockReward",
          "type": "uint256"
        },
        {
          "name": "OwnersAddress",
          "type": "address"
        },
        {
          "name": "IdeaID",
          "type": "uint256"
        },
        {
          "name": "Royalty",
          "type": "uint256"
        },
        {
          "name": "RepID",
          "type": "uint256"
        },
        {
          "name": "InventorsAddress",
          "type": "address"
        },
        {
          "name": "ReplicationAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalUseBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "weightTracker",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ideaId",
          "type": "uint256"
        },
        {
          "name": "_repAdd",
          "type": "address"
        },
        {
          "name": "_userId",
          "type": "string"
        }
      ],
      "name": "generateReplicationBlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalRepCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "localWeightTracker",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "replications",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DCPoA",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ideaRepCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "Validators",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalIdeaPropCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "IPFS",
          "type": "string"
        }
      ],
      "name": "IdeaProposed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "member",
          "type": "address"
        }
      ],
      "name": "NewMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "IPFS",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "Inventor",
          "type": "address"
        }
      ],
      "name": "IdeaApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_voter",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "inSupport",
          "type": "bool"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_repAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "repOwner",
          "type": "address"
        }
      ],
      "name": "NewReplication",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "repAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "reOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "repWeight",
          "type": "uint256"
        }
      ],
      "name": "LocalUseWeight",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "repAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "reOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "ideaId",
          "type": "uint256"
        }
      ],
      "name": "GlobalUseBlock",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "generateUseBlockWeight",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50612903806100206000396000f3fe608060405260043610610149576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311e658441461014e5780631855efa6146101b35780631ddc883b146102ff57806328a6e47c1461032a5780632e858cce146103555780634242779f146103c45780634cfa2409146104fa5780634f214e84146105255780636849e7951461058a578063715018a61461069d57806375824974146106b457806381cbb677146106df5780638da5cb5b1461072e5780638f32d59b14610785578063a416ecd7146107b4578063b4fdd85d146107cb578063be6cbbcf146108bd578063c4d66de8146108e8578063ce87d3ee14610939578063d436b5e91461099e578063e026daa114610a07578063f2fde38b14610a5e578063f54a012914610aaf578063f691977414610afe578063f7e1e4f014610b55575b600080fd5b34801561015a57600080fd5b5061019d6004803603602081101561017157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b80565b6040518082815260200191505060405180910390f35b3480156101bf57600080fd5b506101ec600480360360208110156101d657600080fd5b8101908080359060200190929190505050610b98565b60405180806020018a151515158152602001891515151581526020018881526020018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182810382528b818151815260200191508051906020019080838360005b838110156102bc5780820151818401526020810190506102a1565b50505050905090810190601f1680156102e95780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b34801561030b57600080fd5b50610314610cd8565b6040518082815260200191505060405180910390f35b34801561033657600080fd5b5061033f610cde565b6040518082815260200191505060405180910390f35b34801561036157600080fd5b506103ae6004803603604081101561037857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ce4565b6040518082815260200191505060405180910390f35b3480156103d057600080fd5b506103fd600480360360208110156103e757600080fd5b8101908080359060200190929190505050610d09565b604051808881526020018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156104b957808201518184015260208101905061049e565b50505050905090810190601f1680156104e65780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561050657600080fd5b5061050f610e23565b6040518082815260200191505060405180910390f35b34801561053157600080fd5b506105746004803603602081101561054857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e29565b6040518082815260200191505060405180910390f35b34801561059657600080fd5b506105d9600480360360208110156105ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e41565b604051808881526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200197505050505050505060405180910390f35b3480156106a957600080fd5b506106b2610ee3565b005b3480156106c057600080fd5b506106c9610fb7565b6040518082815260200191505060405180910390f35b3480156106eb57600080fd5b506107186004803603602081101561070257600080fd5b8101908080359060200190929190505050610fbd565b6040518082815260200191505060405180910390f35b34801561073a57600080fd5b50610743610fd5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561079157600080fd5b5061079a610fff565b604051808215151515815260200191505060405180910390f35b3480156107c057600080fd5b506107c9611057565b005b3480156107d757600080fd5b506108bb600480360360608110156107ee57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561083557600080fd5b82018360208201111561084757600080fd5b8035906020019184600183028401116401000000008311171561086957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611673565b005b3480156108c957600080fd5b506108d261201f565b6040518082815260200191505060405180910390f35b3480156108f457600080fd5b506109376004803603602081101561090b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612025565b005b34801561094557600080fd5b506109886004803603602081101561095c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612219565b6040518082815260200191505060405180910390f35b3480156109aa57600080fd5b506109ed600480360360208110156109c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612231565b604051808215151515815260200191505060405180910390f35b348015610a1357600080fd5b50610a1c612251565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a6a57600080fd5b50610aad60048036036020811015610a8157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612277565b005b348015610abb57600080fd5b50610ae860048036036020811015610ad257600080fd5b8101908080359060200190929190505050612296565b6040518082815260200191505060405180910390f35b348015610b0a57600080fd5b50610b136122ae565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610b6157600080fd5b50610b6a6122d4565b6040518082815260200191505060405180910390f35b60746020528060005260406000206000915090505481565b6070602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c445780601f10610c1957610100808354040283529160200191610c44565b820191906000526020600020905b815481529060010190602001808311610c2757829003601f168201915b5050505050908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16908060020154908060030154908060040154908060050154908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905089565b606a5481565b60695481565b6077602052816000526040600020602052806000526040600020600091509150505481565b606e6020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806006018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e195780601f10610dee57610100808354040283529160200191610e19565b820191906000526020600020905b815481529060010190602001808311610dfc57829003601f168201915b5050505050905087565b60685481565b606f6020528060005260406000206000915090505481565b60766020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905087565b610eeb610fff565b1515610ef657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b606d5481565b60716020528060005260406000206000915090505481565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b607560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156110af57600080fd5b60003390506110bc6127ed565b607660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060e06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160400151905061124461286d565b606e600083815260200190815260200160002060e06040519081016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113d05780601f106113a5576101008083540402835291602001916113d0565b820191906000526020600020905b8154815290600101906020018083116113b357829003601f168201915b505050505081525050905060006001607260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540190508160400151607460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401421015151561147657600080fd5b60716000848152602001908152602001600020548111156115405761149a856122da565b42607460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508060716000858152602001908152602001600020819055506000607260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061166c565b42607460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080607260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f7e0163293172761353775ed5413c5650c56917cf163cbd6293a4636b6a87a6e685856020015183604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15b5050505050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dc8e79fb836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561171f578082015181840152602081019050611704565b50505050905090810190601f16801561174c5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561176957600080fd5b505afa15801561177d573d6000803e3d6000fd5b505050506040513d602081101561179357600080fd5b810190808051906020019092919050505090506117ae61286d565b606e600086815260200190815260200160002060e06040519081016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561193a5780601f1061190f5761010080835404028352916020019161193a565b820191906000526020600020905b81548152906001019060200180831161191d57829003601f168201915b5050505050815250509050606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aaa746bb836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611a0057600080fd5b505afa158015611a14573d6000803e3d6000fd5b505050506040513d6020811015611a2a57600080fd5b81019080805190602001909291905050501515611a4657600080fd5b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c812a6018383606001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015611b0f57600080fd5b505af1158015611b23573d6000803e3d6000fd5b50505050606c60008154809291906001019190505550600081600001519050600082602001519050600081830390506000846080015190506000606c549050611b6a6127ed565b60e0604051908101604052808581526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018c81526020018681526020018381526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018b73ffffffffffffffffffffffffffffffffffffffff16815250905080607660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506000607360008d815260200190815260200160002054905080806001019150607360008e8152602001908152602001600020819055506001607560008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000607760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e815260200190815260200160002054905080806001019150607760008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008f815260200190815260200160002081905550606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634777e8ea8b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015611f1d57600080fd5b505af1158015611f31573d6000803e3d6000fd5b5050505042607460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f5f3846e5f661cdab5e659252fcf86d485b1390b32b8445afbc165881296513338c8b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150505050505050505050505050565b606c5481565b600060019054906101000a900460ff168061204457506120436126e0565b5b8061205b57506000809054906101000a900460ff16155b15156120f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600060016101000a81548160ff0219169083151502179055505050565b60726020528060005260406000206000915090505481565b60756020528060005260406000206000915054906101000a900460ff1681565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61227f610fff565b151561228a57600080fd5b612293816126f1565b50565b60736020528060005260406000206000915090505481565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606b5481565b6122e26127ed565b607660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060e06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050606d60008154809291906001019190505550606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636326e4ce826020015183600001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561253857600080fd5b505af115801561254c573d6000803e3d6000fd5b50505050606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636326e4ce8260a0015183606001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561261d57600080fd5b505af1158015612631573d6000803e3d6000fd5b505050507f8a950e000c348dbaa89e6f160262461c978e369ad1596e8697d08cd54d8515408282602001518360400151604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b600080303b90506000811491505090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561272d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60e06040519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60e06040519081016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152509056fea165627a7a72305820303fa94c390565adb38e45138c85a289b57afaae0ab8794c0480410a6a6c94cd0029",
  "deployedBytecode": "0x608060405260043610610149576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311e658441461014e5780631855efa6146101b35780631ddc883b146102ff57806328a6e47c1461032a5780632e858cce146103555780634242779f146103c45780634cfa2409146104fa5780634f214e84146105255780636849e7951461058a578063715018a61461069d57806375824974146106b457806381cbb677146106df5780638da5cb5b1461072e5780638f32d59b14610785578063a416ecd7146107b4578063b4fdd85d146107cb578063be6cbbcf146108bd578063c4d66de8146108e8578063ce87d3ee14610939578063d436b5e91461099e578063e026daa114610a07578063f2fde38b14610a5e578063f54a012914610aaf578063f691977414610afe578063f7e1e4f014610b55575b600080fd5b34801561015a57600080fd5b5061019d6004803603602081101561017157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b80565b6040518082815260200191505060405180910390f35b3480156101bf57600080fd5b506101ec600480360360208110156101d657600080fd5b8101908080359060200190929190505050610b98565b60405180806020018a151515158152602001891515151581526020018881526020018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182810382528b818151815260200191508051906020019080838360005b838110156102bc5780820151818401526020810190506102a1565b50505050905090810190601f1680156102e95780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b34801561030b57600080fd5b50610314610cd8565b6040518082815260200191505060405180910390f35b34801561033657600080fd5b5061033f610cde565b6040518082815260200191505060405180910390f35b34801561036157600080fd5b506103ae6004803603604081101561037857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ce4565b6040518082815260200191505060405180910390f35b3480156103d057600080fd5b506103fd600480360360208110156103e757600080fd5b8101908080359060200190929190505050610d09565b604051808881526020018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156104b957808201518184015260208101905061049e565b50505050905090810190601f1680156104e65780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561050657600080fd5b5061050f610e23565b6040518082815260200191505060405180910390f35b34801561053157600080fd5b506105746004803603602081101561054857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e29565b6040518082815260200191505060405180910390f35b34801561059657600080fd5b506105d9600480360360208110156105ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e41565b604051808881526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200197505050505050505060405180910390f35b3480156106a957600080fd5b506106b2610ee3565b005b3480156106c057600080fd5b506106c9610fb7565b6040518082815260200191505060405180910390f35b3480156106eb57600080fd5b506107186004803603602081101561070257600080fd5b8101908080359060200190929190505050610fbd565b6040518082815260200191505060405180910390f35b34801561073a57600080fd5b50610743610fd5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561079157600080fd5b5061079a610fff565b604051808215151515815260200191505060405180910390f35b3480156107c057600080fd5b506107c9611057565b005b3480156107d757600080fd5b506108bb600480360360608110156107ee57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561083557600080fd5b82018360208201111561084757600080fd5b8035906020019184600183028401116401000000008311171561086957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611673565b005b3480156108c957600080fd5b506108d261201f565b6040518082815260200191505060405180910390f35b3480156108f457600080fd5b506109376004803603602081101561090b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612025565b005b34801561094557600080fd5b506109886004803603602081101561095c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612219565b6040518082815260200191505060405180910390f35b3480156109aa57600080fd5b506109ed600480360360208110156109c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612231565b604051808215151515815260200191505060405180910390f35b348015610a1357600080fd5b50610a1c612251565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a6a57600080fd5b50610aad60048036036020811015610a8157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612277565b005b348015610abb57600080fd5b50610ae860048036036020811015610ad257600080fd5b8101908080359060200190929190505050612296565b6040518082815260200191505060405180910390f35b348015610b0a57600080fd5b50610b136122ae565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610b6157600080fd5b50610b6a6122d4565b6040518082815260200191505060405180910390f35b60746020528060005260406000206000915090505481565b6070602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c445780601f10610c1957610100808354040283529160200191610c44565b820191906000526020600020905b815481529060010190602001808311610c2757829003601f168201915b5050505050908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16908060020154908060030154908060040154908060050154908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905089565b606a5481565b60695481565b6077602052816000526040600020602052806000526040600020600091509150505481565b606e6020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806006018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e195780601f10610dee57610100808354040283529160200191610e19565b820191906000526020600020905b815481529060010190602001808311610dfc57829003601f168201915b5050505050905087565b60685481565b606f6020528060005260406000206000915090505481565b60766020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905087565b610eeb610fff565b1515610ef657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b606d5481565b60716020528060005260406000206000915090505481565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b607560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156110af57600080fd5b60003390506110bc6127ed565b607660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060e06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160400151905061124461286d565b606e600083815260200190815260200160002060e06040519081016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113d05780601f106113a5576101008083540402835291602001916113d0565b820191906000526020600020905b8154815290600101906020018083116113b357829003601f168201915b505050505081525050905060006001607260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540190508160400151607460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401421015151561147657600080fd5b60716000848152602001908152602001600020548111156115405761149a856122da565b42607460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508060716000858152602001908152602001600020819055506000607260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061166c565b42607460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080607260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f7e0163293172761353775ed5413c5650c56917cf163cbd6293a4636b6a87a6e685856020015183604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15b5050505050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dc8e79fb836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561171f578082015181840152602081019050611704565b50505050905090810190601f16801561174c5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561176957600080fd5b505afa15801561177d573d6000803e3d6000fd5b505050506040513d602081101561179357600080fd5b810190808051906020019092919050505090506117ae61286d565b606e600086815260200190815260200160002060e06040519081016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561193a5780601f1061190f5761010080835404028352916020019161193a565b820191906000526020600020905b81548152906001019060200180831161191d57829003601f168201915b5050505050815250509050606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aaa746bb836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611a0057600080fd5b505afa158015611a14573d6000803e3d6000fd5b505050506040513d6020811015611a2a57600080fd5b81019080805190602001909291905050501515611a4657600080fd5b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c812a6018383606001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015611b0f57600080fd5b505af1158015611b23573d6000803e3d6000fd5b50505050606c60008154809291906001019190505550600081600001519050600082602001519050600081830390506000846080015190506000606c549050611b6a6127ed565b60e0604051908101604052808581526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018c81526020018681526020018381526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018b73ffffffffffffffffffffffffffffffffffffffff16815250905080607660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506000607360008d815260200190815260200160002054905080806001019150607360008e8152602001908152602001600020819055506001607560008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000607760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e815260200190815260200160002054905080806001019150607760008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008f815260200190815260200160002081905550606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634777e8ea8b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015611f1d57600080fd5b505af1158015611f31573d6000803e3d6000fd5b5050505042607460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f5f3846e5f661cdab5e659252fcf86d485b1390b32b8445afbc165881296513338c8b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150505050505050505050505050565b606c5481565b600060019054906101000a900460ff168061204457506120436126e0565b5b8061205b57506000809054906101000a900460ff16155b15156120f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600060016101000a81548160ff0219169083151502179055505050565b60726020528060005260406000206000915090505481565b60756020528060005260406000206000915054906101000a900460ff1681565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61227f610fff565b151561228a57600080fd5b612293816126f1565b50565b60736020528060005260406000206000915090505481565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606b5481565b6122e26127ed565b607660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060e06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050606d60008154809291906001019190505550606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636326e4ce826020015183600001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561253857600080fd5b505af115801561254c573d6000803e3d6000fd5b50505050606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636326e4ce8260a0015183606001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561261d57600080fd5b505af1158015612631573d6000803e3d6000fd5b505050507f8a950e000c348dbaa89e6f160262461c978e369ad1596e8697d08cd54d8515408282602001518360400151604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b600080303b90506000811491505090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561272d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60e06040519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60e06040519081016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152509056fea165627a7a72305820303fa94c390565adb38e45138c85a289b57afaae0ab8794c0480410a6a6c94cd0029",
  "sourceMap": "55:2941:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;55:2941:5;;;;;;;",
  "deployedSourceMap": "55:2941:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2816:54:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2816:54:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2816:54:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2354:50;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2354:50:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2354:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2354:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1900:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1900:27:3;;;;;;;;;;;;;;;;;;;;;;;1865:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1865:31:3;;;;;;;;;;;;;;;;;;;;;;;2976:57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2976:57:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2976:57:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2256:47:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2256:47:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2256:47:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1834:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1834:27:3;;;;;;;;;;;;;;;;;;;;;;;2307:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2307:43:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2307:43:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2922:50;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2922:50:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2922:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1438:137:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1438:137:12;;;;;;2094:26:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2094:26:3;;;;;;;;;;;;;;;;;;;;;;;2408:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2408:42:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2408:42:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;750:77:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;750:77:12;;;;;;;;;;;;;;;;;;;;;;;;;;;1070:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1070:90:12;;;;;;;;;;;;;;;;;;;;;;;;;;;1140:1853:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1140:1853:5;;;;;;526:2194:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;526:2194:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;526:2194:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;526:2194:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;526:2194:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;526:2194:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;526:2194:4;;;;;;;;;;;;;;;;;;2064:26:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2064:26:3;;;;;;;;;;;;;;;;;;;;;;;545:142:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;545:142:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;545:142:12;;;;;;;;;;;;;;;;;;;;;;2454:50:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2454:50:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2454:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2874:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2874:44:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2874:44:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1513:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1513:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1746:107:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1746:107:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1746:107:12;;;;;;;;;;;;;;;;;;;;;;2769:43:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2769:43:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2769:43:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1542:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1542:33:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1931:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1931:31:3;;;;;;;;;;;;;;;;;;;;;;;2816:54;;;;;;;;;;;;;;;;;:::o;2354:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1900:27::-;;;;:::o;1865:31::-;;;;:::o;2976:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2256:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1834:27::-;;;;:::o;2307:43::-;;;;;;;;;;;;;;;;;:::o;2922:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1438:137:12:-;954:9;:7;:9::i;:::-;946:18;;;;;;;;1536:1;1499:40;;1520:6;;;;;;;;;;;1499:40;;;;;;;;;;;;1566:1;1549:6;;:19;;;;;;;;;;;;;;;;;;1438:137::o;2094:26:3:-;;;;:::o;2408:42::-;;;;;;;;;;;;;;;;;:::o;750:77:12:-;788:7;814:6;;;;;;;;;;;807:13;;750:77;:::o;1070:90::-;1110:4;1147:6;;;;;;;;;;;1133:20;;:10;:20;;;1126:27;;1070:90;:::o;1140:1853:5:-;1195:12;:24;1208:10;1195:24;;;;;;;;;;;;;;;;;;;;;;;;;1187:33;;;;;;;;1226:12;1241:10;1226:25;;1258:28;;:::i;:::-;1289:7;:13;1297:4;1289:13;;;;;;;;;;;;;;;1258:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:11;1404:5;:12;;;1390:26;;1488:21;;:::i;:::-;1512:13;:21;1526:6;1512:21;;;;;;;;;;;1488:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1608:14;1652:1;1625:18;:24;1644:4;1625:24;;;;;;;;;;;;;;;;:28;1608:45;;1758:4;:15;;;1726:22;:28;1749:4;1726:28;;;;;;;;;;;;;;;;:47;1719:3;:54;;1711:63;;;;;;;;2000:13;:21;2014:6;2000:21;;;;;;;;;;;;1988:9;:33;1985:1004;;;2083:28;2106:4;2083:22;:28::i;:::-;2196:3;2165:22;:28;2188:4;2165:28;;;;;;;;;;;;;;;:34;;;;2310:9;2286:13;:21;2300:6;2286:21;;;;;;;;;;;:33;;;;2426:1;2399:18;:24;2418:4;2399:24;;;;;;;;;;;;;;;:28;;;;1985:1004;;;2613:3;2582:22;:28;2605:4;2582:28;;;;;;;;;;;;;;;:34;;;;2748:9;2721:18;:24;2740:4;2721:24;;;;;;;;;;;;;;;:36;;;;2837:52;2852:4;2858:5;:19;;;2879:9;2837:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:1004;1140:1853;;;;;:::o;526:2194:4:-;628:14;645:5;;;;;;;;;;;:20;;;666:7;645:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;645:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;645:29:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;645:29:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;645:29:4;;;;;;;;;;;;;;;;628:46;;743:21;;:::i;:::-;767:13;:22;781:7;767:22;;;;;;;;;;;743:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;840:5;;;;;;;;;;;:20;;;861:6;840:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;840:28:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;840:28:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;840:28:4;;;;;;;;;;;;;;;;832:37;;;;;;;;930:5;;;;;;;;;;;:18;;;949:6;957:4;:16;;;930:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;930:44:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;930:44:4;;;;1050:14;;:16;;;;;;;;;;;;;1112:19;1135:4;:25;;;1112:48;;1240:12;1255:4;:12;;;1240:27;;1331:16;1367:7;1350:14;:24;1331:43;;1433:16;1452:4;:20;;;1433:39;;1531:11;1545:14;;1531:28;;1608;;:::i;:::-;1639:259;;;;;;;;;1680:11;1639:259;;;;1721:6;1639:259;;;;;;1747:7;1639:259;;;;1775:7;1639:259;;;;1801:6;1639:259;;;;1840:8;1639:259;;;;;;1883:7;1639:259;;;;;1608:290;;1967:5;1948:7;:16;1956:7;1948:16;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2037:17;2057:14;:23;2072:7;2057:23;;;;;;;;;;;;2037:43;;2176:14;;;;;;2150;:23;2165:7;2150:23;;;;;;;;;;;:40;;;;2278:4;2254:12;:21;2267:7;2254:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;2338:18;2359:8;:16;2368:6;2359:16;;;;;;;;;;;;;;;:25;2376:7;2359:25;;;;;;;;;;;;2338:46;;2505:15;;;;;;2477:8;:16;2486:6;2477:16;;;;;;;;;;;;;;;:25;2494:7;2477:25;;;;;;;;;;;:43;;;;2600:5;;;;;;;;;;;:20;;;2621:6;2600:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2600:28:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2600:28:4;;;;2668:3;2634:22;:31;2657:7;2634:31;;;;;;;;;;;;;;;:37;;;;2682:31;2697:7;2706:6;2682:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;526:2194;;;;;;;;;;;;;:::o;2064:26:3:-;;;;:::o;545:142:12:-;1024:12:16;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;619:6:12;610;;:15;;;;;;;;;;;;;;;;;;673:6;;;;;;;;;;;640:40;;669:1;640:40;;;;;;;;;;;;1243:15:16;1228:12;;:30;;;;;;;;;;;;;;;;;;545:142:12;;:::o;2454:50:3:-;;;;;;;;;;;;;;;;;:::o;2874:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;1513:25::-;;;;;;;;;;;;;:::o;1746:107:12:-;954:9;:7;:9::i;:::-;946:18;;;;;;;;1818:28;1837:8;1818:18;:28::i;:::-;1746:107;:::o;2769:43:3:-;;;;;;;;;;;;;;;;;:::o;1542:33::-;;;;;;;;;;;;;:::o;1931:31::-;;;;:::o;276:720:5:-;335:28;;:::i;:::-;366:7;:13;374:4;366:13;;;;;;;;;;;;;;;335:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:14;;:16;;;;;;;;;;;;;707:5;;;;;;;;;;;:18;;;726:5;:19;;;747:5;:17;;;707:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;707:58:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;707:58:5;;;;827:5;;;;;;;;;;;:18;;;846:5;:22;;;870:5;:13;;;827:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;827:57:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;827:57:5;;;;936:55;951:4;957:5;:19;;;978:5;:12;;;936:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;276:720;;:::o;1349:467:16:-;1396:4;1737:10;1782:7;1770:20;1764:26;;1810:1;1804:2;:7;1797:14;;;1349:467;:::o;1997:183:12:-;2090:1;2070:22;;:8;:22;;;;2062:31;;;;;;;;2137:8;2108:38;;2129:6;;;;;;;;;;;2108:38;;;;;;;;;;;;2165:8;2156:6;;:17;;;;;;;;;;;;;;;;;;1997:183;:::o;55:2941:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\nimport './RepBlockLogic.sol';\n\ncontract UseBlockLogic is RepBlockLogic {\n  ///@notice generateGlobalUseBlock is an internal function called when the cryptopatent blockchain has determined\n  ///        that a replication has mined a global use block.\n  function generateGlobalUseBlock(address _rep) internal {\n  ReplicationInfo memory infoR = repInfo[_rep];\n  //pulls a specific replications information in to be used as the variable infoR\n  // sets poolModedBlockReward equal to the block reward for a specific replications\n  // and multiplies it by how many replications a member owns. this is the pool mining bonus\n    globalUseBlock++;\n  //increases the Global UseBlock count\n    DCPoA.proxyNTCMint(infoR.OwnersAddress, infoR.BlockReward);\n  //mints the replication Owner his modded block reward\n    DCPoA.proxyNTCMint(infoR.InventorsAddress, infoR.Royalty);\n  //mints royalties to the idea inventor\n    emit GlobalUseBlock(_rep, infoR.OwnersAddress, infoR.IdeaID);\n  }\n\n  ///@notice UseBlockWeight is an internal function that tracks loacal use weightTracker\n  ///@dev this is called by generateUseBlockWeight\n  function generateUseBlockWeight() public {\n    require(replications[msg.sender]);\n    address _rep = msg.sender;\n\n    ReplicationInfo memory infoR = repInfo[_rep];\n  //pulls a specific replications information in to be used as the variable infoR\n    uint ideaID = infoR.IdeaID;\n  //sets ideaID as a specific ideaID from the replications struct\n    IdeaBlock memory info = ideaVariables[ideaID];\n  //pulls a specific idea struct int to be used as the variable info\n    uint newWeight = localWeightTracker[_rep] + 1;\n  // increases the weight of a specific replication\n    require(now >= localMiningtimeTracker[_rep] +  info.miningTime);\n  //requires the time the function is called to be later than the combined total of its last call\n  //and the specific ideas mining time resraint\n  //this require fails if the rep is calling to frequently\n    if(newWeight > weightTracker[ideaID]) {\n  //checks if the replication has the heaviest weight\n    generateGlobalUseBlock(_rep);\n  //if it does it generates a global use block\n     localMiningtimeTracker[_rep] = now;\n  //resets the global mining time for a specific idea after a useBlock is mined\n     weightTracker[ideaID] = newWeight;\n  //sets the global block height to the weight of the mining replication\n     localWeightTracker[_rep] = 0;\n  //resets the local weight tracker for the mining replication\n  } else {\n    //if the replications weight is not heavy enough to mine a new block\n      localMiningtimeTracker[_rep] = now;\n    //set its local mining time tracker to the current time so it cant abuse the mining function\n      localWeightTracker[_rep] = newWeight;\n    //setts the local weight tracker for the rep to its new weight\n      emit LocalUseWeight(_rep, infoR.OwnersAddress, newWeight);\n    //emit event signaling that a replication mined a local weight without a global Useblock\n    }\n  }\n\n}\n",
  "sourcePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/UseBlockLogic.sol",
  "ast": {
    "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/UseBlockLogic.sol",
    "exportedSymbols": {
      "UseBlockLogic": [
        1833
      ]
    },
    "id": 1834,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1687,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/RepBlockLogic.sol",
        "file": "./RepBlockLogic.sol",
        "id": 1688,
        "nodeType": "ImportDirective",
        "scope": 1834,
        "sourceUnit": 1686,
        "src": "24:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1689,
              "name": "RepBlockLogic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1685,
              "src": "81:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RepBlockLogic_$1685",
                "typeString": "contract RepBlockLogic"
              }
            },
            "id": 1690,
            "nodeType": "InheritanceSpecifier",
            "src": "81:13:5"
          }
        ],
        "contractDependencies": [
          1528,
          1685,
          3753,
          4384
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1833,
        "linearizedBaseContracts": [
          1833,
          1685,
          1528,
          3753,
          4384
        ],
        "name": "UseBlockLogic",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1730,
              "nodeType": "Block",
              "src": "331:665:5",
              "statements": [
                {
                  "assignments": [
                    1696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1696,
                      "name": "infoR",
                      "nodeType": "VariableDeclaration",
                      "scope": 1730,
                      "src": "335:28:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1695,
                        "name": "ReplicationInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1341,
                        "src": "335:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1341_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1700,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1697,
                      "name": "repInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1223,
                      "src": "366:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ReplicationInfo_$1341_storage_$",
                        "typeString": "mapping(address => struct IdeaBlockLogic.ReplicationInfo storage ref)"
                      }
                    },
                    "id": 1699,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1698,
                      "name": "_rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1692,
                      "src": "374:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "366:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReplicationInfo_$1341_storage",
                      "typeString": "struct IdeaBlockLogic.ReplicationInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "335:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "645:16:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 1701,
                      "name": "globalUseBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1187,
                      "src": "645:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1703,
                  "nodeType": "ExpressionStatement",
                  "src": "645:16:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1707,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1696,
                          "src": "726:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1708,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "OwnersAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1330,
                        "src": "726:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1709,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1696,
                          "src": "747:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1710,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "BlockReward",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1328,
                        "src": "747:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1704,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "707:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1161",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proxyNTCMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1115,
                      "src": "707:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "707:58:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1712,
                  "nodeType": "ExpressionStatement",
                  "src": "707:58:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1716,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1696,
                          "src": "846:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1717,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "InventorsAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1338,
                        "src": "846:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1718,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1696,
                          "src": "870:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1719,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "Royalty",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1334,
                        "src": "870:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1713,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "827:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1161",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proxyNTCMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1115,
                      "src": "827:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "827:57:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1721,
                  "nodeType": "ExpressionStatement",
                  "src": "827:57:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1723,
                        "name": "_rep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1692,
                        "src": "951:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1724,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1696,
                          "src": "957:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1725,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "OwnersAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1330,
                        "src": "957:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1726,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1696,
                          "src": "978:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1727,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "IdeaID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1332,
                        "src": "978:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1722,
                      "name": "GlobalUseBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1280,
                      "src": "936:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "936:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1729,
                  "nodeType": "EmitStatement",
                  "src": "931:60:5"
                }
              ]
            },
            "documentation": "@notice generateGlobalUseBlock is an internal function called when the cryptopatent blockchain has determined\n        that a replication has mined a global use block.",
            "id": 1731,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateGlobalUseBlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1692,
                  "name": "_rep",
                  "nodeType": "VariableDeclaration",
                  "scope": 1731,
                  "src": "308:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "308:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "307:14:5"
            },
            "returnParameters": {
              "id": 1694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:5"
            },
            "scope": 1833,
            "src": "276:720:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1831,
              "nodeType": "Block",
              "src": "1181:1812:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1735,
                          "name": "replications",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1219,
                          "src": "1195:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1738,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1736,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4399,
                            "src": "1208:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1208:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1195:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1734,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4402,
                        4403
                      ],
                      "referencedDeclaration": 4402,
                      "src": "1187:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1187:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1740,
                  "nodeType": "ExpressionStatement",
                  "src": "1187:33:5"
                },
                {
                  "assignments": [
                    1742
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1742,
                      "name": "_rep",
                      "nodeType": "VariableDeclaration",
                      "scope": 1831,
                      "src": "1226:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1741,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1226:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1745,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1743,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4399,
                      "src": "1241:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1241:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1226:25:5"
                },
                {
                  "assignments": [
                    1747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1747,
                      "name": "infoR",
                      "nodeType": "VariableDeclaration",
                      "scope": 1831,
                      "src": "1258:28:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1746,
                        "name": "ReplicationInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1341,
                        "src": "1258:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1341_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1751,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1748,
                      "name": "repInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1223,
                      "src": "1289:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ReplicationInfo_$1341_storage_$",
                        "typeString": "mapping(address => struct IdeaBlockLogic.ReplicationInfo storage ref)"
                      }
                    },
                    "id": 1750,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1749,
                      "name": "_rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1742,
                      "src": "1297:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1289:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReplicationInfo_$1341_storage",
                      "typeString": "struct IdeaBlockLogic.ReplicationInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1258:44:5"
                },
                {
                  "assignments": [
                    1753
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1753,
                      "name": "ideaID",
                      "nodeType": "VariableDeclaration",
                      "scope": 1831,
                      "src": "1390:11:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1752,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1390:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1756,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1754,
                      "name": "infoR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1747,
                      "src": "1404:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                      }
                    },
                    "id": 1755,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "IdeaID",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1332,
                    "src": "1404:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1390:26:5"
                },
                {
                  "assignments": [
                    1758
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1758,
                      "name": "info",
                      "nodeType": "VariableDeclaration",
                      "scope": 1831,
                      "src": "1488:21:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdeaBlock_$1326_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.IdeaBlock"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1757,
                        "name": "IdeaBlock",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1326,
                        "src": "1488:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaBlock_$1326_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaBlock"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1762,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1759,
                      "name": "ideaVariables",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1191,
                      "src": "1512:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IdeaBlock_$1326_storage_$",
                        "typeString": "mapping(uint256 => struct IdeaBlockLogic.IdeaBlock storage ref)"
                      }
                    },
                    "id": 1761,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1760,
                      "name": "ideaID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1753,
                      "src": "1526:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1512:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdeaBlock_$1326_storage",
                      "typeString": "struct IdeaBlockLogic.IdeaBlock storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1488:45:5"
                },
                {
                  "assignments": [
                    1764
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1764,
                      "name": "newWeight",
                      "nodeType": "VariableDeclaration",
                      "scope": 1831,
                      "src": "1608:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1763,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1608:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1770,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1765,
                        "name": "localWeightTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "1625:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1767,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1766,
                        "name": "_rep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1742,
                        "src": "1644:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1625:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1652:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1625:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1608:45:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1772,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4401,
                          "src": "1719:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1773,
                              "name": "localMiningtimeTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1215,
                              "src": "1726:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1775,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1774,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1742,
                              "src": "1749:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1726:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1776,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1758,
                              "src": "1758:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaBlock_$1326_memory_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaBlock memory"
                              }
                            },
                            "id": 1777,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "miningTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1317,
                            "src": "1758:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1726:47:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1719:54:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1771,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4402,
                        4403
                      ],
                      "referencedDeclaration": 4402,
                      "src": "1711:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1711:63:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1781,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:63:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1782,
                      "name": "newWeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1764,
                      "src": "1988:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1783,
                        "name": "weightTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1203,
                        "src": "2000:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1785,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1784,
                        "name": "ideaID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1753,
                        "src": "2014:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2000:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1988:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1829,
                    "nodeType": "Block",
                    "src": "2501:488:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1810,
                              "name": "localMiningtimeTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1215,
                              "src": "2582:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1812,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1811,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1742,
                              "src": "2605:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2582:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1813,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4401,
                            "src": "2613:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2582:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1815,
                        "nodeType": "ExpressionStatement",
                        "src": "2582:34:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1816,
                              "name": "localWeightTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1207,
                              "src": "2721:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1818,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1817,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1742,
                              "src": "2740:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2721:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1819,
                            "name": "newWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1764,
                            "src": "2748:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2721:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1821,
                        "nodeType": "ExpressionStatement",
                        "src": "2721:36:5"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1823,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1742,
                              "src": "2852:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1824,
                                "name": "infoR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1747,
                                "src": "2858:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                                  "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                                }
                              },
                              "id": 1825,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "OwnersAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1330,
                              "src": "2858:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1826,
                              "name": "newWeight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1764,
                              "src": "2879:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1822,
                            "name": "LocalUseWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1272,
                            "src": "2837:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2837:52:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1828,
                        "nodeType": "EmitStatement",
                        "src": "2832:57:5"
                      }
                    ]
                  },
                  "id": 1830,
                  "nodeType": "IfStatement",
                  "src": "1985:1004:5",
                  "trueBody": {
                    "id": 1809,
                    "nodeType": "Block",
                    "src": "2023:472:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1788,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1742,
                              "src": "2106:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1787,
                            "name": "generateGlobalUseBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1731,
                            "src": "2083:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2083:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1790,
                        "nodeType": "ExpressionStatement",
                        "src": "2083:28:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1791,
                              "name": "localMiningtimeTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1215,
                              "src": "2165:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1793,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1792,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1742,
                              "src": "2188:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2165:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1794,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4401,
                            "src": "2196:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2165:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1796,
                        "nodeType": "ExpressionStatement",
                        "src": "2165:34:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1797,
                              "name": "weightTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "2286:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1799,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1798,
                              "name": "ideaID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1753,
                              "src": "2300:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2286:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1800,
                            "name": "newWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1764,
                            "src": "2310:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2286:33:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1802,
                        "nodeType": "ExpressionStatement",
                        "src": "2286:33:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1803,
                              "name": "localWeightTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1207,
                              "src": "2399:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1805,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1804,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1742,
                              "src": "2418:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2399:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2426:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2399:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1808,
                        "nodeType": "ExpressionStatement",
                        "src": "2399:28:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice UseBlockWeight is an internal function that tracks loacal use weightTracker\n@dev this is called by generateUseBlockWeight",
            "id": 1832,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateUseBlockWeight",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1171:2:5"
            },
            "returnParameters": {
              "id": 1733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1181:0:5"
            },
            "scope": 1833,
            "src": "1140:1853:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1834,
        "src": "55:2941:5"
      }
    ],
    "src": "0:2997:5"
  },
  "legacyAST": {
    "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/UseBlockLogic.sol",
    "exportedSymbols": {
      "UseBlockLogic": [
        1833
      ]
    },
    "id": 1834,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1687,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/RepBlockLogic.sol",
        "file": "./RepBlockLogic.sol",
        "id": 1688,
        "nodeType": "ImportDirective",
        "scope": 1834,
        "sourceUnit": 1686,
        "src": "24:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1689,
              "name": "RepBlockLogic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1685,
              "src": "81:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RepBlockLogic_$1685",
                "typeString": "contract RepBlockLogic"
              }
            },
            "id": 1690,
            "nodeType": "InheritanceSpecifier",
            "src": "81:13:5"
          }
        ],
        "contractDependencies": [
          1528,
          1685,
          3753,
          4384
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1833,
        "linearizedBaseContracts": [
          1833,
          1685,
          1528,
          3753,
          4384
        ],
        "name": "UseBlockLogic",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1730,
              "nodeType": "Block",
              "src": "331:665:5",
              "statements": [
                {
                  "assignments": [
                    1696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1696,
                      "name": "infoR",
                      "nodeType": "VariableDeclaration",
                      "scope": 1730,
                      "src": "335:28:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1695,
                        "name": "ReplicationInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1341,
                        "src": "335:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1341_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1700,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1697,
                      "name": "repInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1223,
                      "src": "366:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ReplicationInfo_$1341_storage_$",
                        "typeString": "mapping(address => struct IdeaBlockLogic.ReplicationInfo storage ref)"
                      }
                    },
                    "id": 1699,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1698,
                      "name": "_rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1692,
                      "src": "374:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "366:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReplicationInfo_$1341_storage",
                      "typeString": "struct IdeaBlockLogic.ReplicationInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "335:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "645:16:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 1701,
                      "name": "globalUseBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1187,
                      "src": "645:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1703,
                  "nodeType": "ExpressionStatement",
                  "src": "645:16:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1707,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1696,
                          "src": "726:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1708,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "OwnersAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1330,
                        "src": "726:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1709,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1696,
                          "src": "747:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1710,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "BlockReward",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1328,
                        "src": "747:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1704,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "707:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1161",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proxyNTCMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1115,
                      "src": "707:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "707:58:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1712,
                  "nodeType": "ExpressionStatement",
                  "src": "707:58:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1716,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1696,
                          "src": "846:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1717,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "InventorsAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1338,
                        "src": "846:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1718,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1696,
                          "src": "870:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1719,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "Royalty",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1334,
                        "src": "870:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1713,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "827:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1161",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proxyNTCMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1115,
                      "src": "827:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "827:57:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1721,
                  "nodeType": "ExpressionStatement",
                  "src": "827:57:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1723,
                        "name": "_rep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1692,
                        "src": "951:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1724,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1696,
                          "src": "957:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1725,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "OwnersAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1330,
                        "src": "957:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1726,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1696,
                          "src": "978:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1727,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "IdeaID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1332,
                        "src": "978:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1722,
                      "name": "GlobalUseBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1280,
                      "src": "936:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "936:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1729,
                  "nodeType": "EmitStatement",
                  "src": "931:60:5"
                }
              ]
            },
            "documentation": "@notice generateGlobalUseBlock is an internal function called when the cryptopatent blockchain has determined\n        that a replication has mined a global use block.",
            "id": 1731,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateGlobalUseBlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1692,
                  "name": "_rep",
                  "nodeType": "VariableDeclaration",
                  "scope": 1731,
                  "src": "308:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "308:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "307:14:5"
            },
            "returnParameters": {
              "id": 1694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:5"
            },
            "scope": 1833,
            "src": "276:720:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1831,
              "nodeType": "Block",
              "src": "1181:1812:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1735,
                          "name": "replications",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1219,
                          "src": "1195:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1738,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1736,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4399,
                            "src": "1208:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1208:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1195:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1734,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4402,
                        4403
                      ],
                      "referencedDeclaration": 4402,
                      "src": "1187:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1187:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1740,
                  "nodeType": "ExpressionStatement",
                  "src": "1187:33:5"
                },
                {
                  "assignments": [
                    1742
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1742,
                      "name": "_rep",
                      "nodeType": "VariableDeclaration",
                      "scope": 1831,
                      "src": "1226:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1741,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1226:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1745,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1743,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4399,
                      "src": "1241:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1241:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1226:25:5"
                },
                {
                  "assignments": [
                    1747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1747,
                      "name": "infoR",
                      "nodeType": "VariableDeclaration",
                      "scope": 1831,
                      "src": "1258:28:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1746,
                        "name": "ReplicationInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1341,
                        "src": "1258:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1341_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1751,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1748,
                      "name": "repInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1223,
                      "src": "1289:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ReplicationInfo_$1341_storage_$",
                        "typeString": "mapping(address => struct IdeaBlockLogic.ReplicationInfo storage ref)"
                      }
                    },
                    "id": 1750,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1749,
                      "name": "_rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1742,
                      "src": "1297:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1289:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReplicationInfo_$1341_storage",
                      "typeString": "struct IdeaBlockLogic.ReplicationInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1258:44:5"
                },
                {
                  "assignments": [
                    1753
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1753,
                      "name": "ideaID",
                      "nodeType": "VariableDeclaration",
                      "scope": 1831,
                      "src": "1390:11:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1752,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1390:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1756,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1754,
                      "name": "infoR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1747,
                      "src": "1404:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                      }
                    },
                    "id": 1755,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "IdeaID",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1332,
                    "src": "1404:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1390:26:5"
                },
                {
                  "assignments": [
                    1758
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1758,
                      "name": "info",
                      "nodeType": "VariableDeclaration",
                      "scope": 1831,
                      "src": "1488:21:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdeaBlock_$1326_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.IdeaBlock"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1757,
                        "name": "IdeaBlock",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1326,
                        "src": "1488:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaBlock_$1326_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaBlock"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1762,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1759,
                      "name": "ideaVariables",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1191,
                      "src": "1512:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IdeaBlock_$1326_storage_$",
                        "typeString": "mapping(uint256 => struct IdeaBlockLogic.IdeaBlock storage ref)"
                      }
                    },
                    "id": 1761,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1760,
                      "name": "ideaID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1753,
                      "src": "1526:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1512:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdeaBlock_$1326_storage",
                      "typeString": "struct IdeaBlockLogic.IdeaBlock storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1488:45:5"
                },
                {
                  "assignments": [
                    1764
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1764,
                      "name": "newWeight",
                      "nodeType": "VariableDeclaration",
                      "scope": 1831,
                      "src": "1608:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1763,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1608:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1770,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1765,
                        "name": "localWeightTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "1625:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1767,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1766,
                        "name": "_rep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1742,
                        "src": "1644:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1625:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1652:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1625:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1608:45:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1772,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4401,
                          "src": "1719:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1773,
                              "name": "localMiningtimeTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1215,
                              "src": "1726:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1775,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1774,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1742,
                              "src": "1749:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1726:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1776,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1758,
                              "src": "1758:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaBlock_$1326_memory_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaBlock memory"
                              }
                            },
                            "id": 1777,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "miningTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1317,
                            "src": "1758:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1726:47:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1719:54:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1771,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4402,
                        4403
                      ],
                      "referencedDeclaration": 4402,
                      "src": "1711:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1711:63:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1781,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:63:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1782,
                      "name": "newWeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1764,
                      "src": "1988:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1783,
                        "name": "weightTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1203,
                        "src": "2000:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1785,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1784,
                        "name": "ideaID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1753,
                        "src": "2014:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2000:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1988:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1829,
                    "nodeType": "Block",
                    "src": "2501:488:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1810,
                              "name": "localMiningtimeTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1215,
                              "src": "2582:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1812,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1811,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1742,
                              "src": "2605:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2582:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1813,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4401,
                            "src": "2613:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2582:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1815,
                        "nodeType": "ExpressionStatement",
                        "src": "2582:34:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1816,
                              "name": "localWeightTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1207,
                              "src": "2721:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1818,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1817,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1742,
                              "src": "2740:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2721:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1819,
                            "name": "newWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1764,
                            "src": "2748:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2721:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1821,
                        "nodeType": "ExpressionStatement",
                        "src": "2721:36:5"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1823,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1742,
                              "src": "2852:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1824,
                                "name": "infoR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1747,
                                "src": "2858:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ReplicationInfo_$1341_memory_ptr",
                                  "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                                }
                              },
                              "id": 1825,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "OwnersAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1330,
                              "src": "2858:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1826,
                              "name": "newWeight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1764,
                              "src": "2879:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1822,
                            "name": "LocalUseWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1272,
                            "src": "2837:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2837:52:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1828,
                        "nodeType": "EmitStatement",
                        "src": "2832:57:5"
                      }
                    ]
                  },
                  "id": 1830,
                  "nodeType": "IfStatement",
                  "src": "1985:1004:5",
                  "trueBody": {
                    "id": 1809,
                    "nodeType": "Block",
                    "src": "2023:472:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1788,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1742,
                              "src": "2106:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1787,
                            "name": "generateGlobalUseBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1731,
                            "src": "2083:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2083:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1790,
                        "nodeType": "ExpressionStatement",
                        "src": "2083:28:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1791,
                              "name": "localMiningtimeTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1215,
                              "src": "2165:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1793,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1792,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1742,
                              "src": "2188:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2165:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1794,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4401,
                            "src": "2196:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2165:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1796,
                        "nodeType": "ExpressionStatement",
                        "src": "2165:34:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1797,
                              "name": "weightTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "2286:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1799,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1798,
                              "name": "ideaID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1753,
                              "src": "2300:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2286:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1800,
                            "name": "newWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1764,
                            "src": "2310:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2286:33:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1802,
                        "nodeType": "ExpressionStatement",
                        "src": "2286:33:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1803,
                              "name": "localWeightTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1207,
                              "src": "2399:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1805,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1804,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1742,
                              "src": "2418:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2399:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2426:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2399:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1808,
                        "nodeType": "ExpressionStatement",
                        "src": "2399:28:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice UseBlockWeight is an internal function that tracks loacal use weightTracker\n@dev this is called by generateUseBlockWeight",
            "id": 1832,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateUseBlockWeight",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1171:2:5"
            },
            "returnParameters": {
              "id": 1733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1181:0:5"
            },
            "scope": 1833,
            "src": "1140:1853:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1834,
        "src": "55:2941:5"
      }
    ],
    "src": "0:2997:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-05-01T23:20:39.267Z",
  "devdoc": {
    "methods": {
      "generateReplicationBlock(uint256,address,string)": {
        "details": "this requires the replicator has enough Notio to meet the stake amount and burns it from existenceit also adds the replicator as a member of DecentraCorpfinally, this contract calls the Proof of Replication Ownership contract and mints a PoRO token to the msg.sender"
      },
      "generateUseBlockWeight()": {
        "details": "this is called by generateUseBlockWeight"
      },
      "initialize(address)": {
        "details": "The Ownable constructor sets the original `owner` of the contract to the sender account."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "generateReplicationBlock(uint256,address,string)": {
        "notice": "generateReplicationBlock is used to generate a replication block when someone sucessfully replicates an Idea"
      },
      "generateUseBlockWeight()": {
        "notice": "UseBlockWeight is an internal function that tracks loacal use weightTracker"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}