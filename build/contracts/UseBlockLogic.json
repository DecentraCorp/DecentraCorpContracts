{
  "contractName": "UseBlockLogic",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "localMiningtimeTracker",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ideaProposals",
      "outputs": [
        {
          "name": "IdeaIPFS",
          "type": "string"
        },
        {
          "name": "UserId",
          "type": "string"
        },
        {
          "name": "executed",
          "type": "bool"
        },
        {
          "name": "proposalPassed",
          "type": "bool"
        },
        {
          "name": "globalUseBlockAmount",
          "type": "uint256"
        },
        {
          "name": "royalty",
          "type": "uint256"
        },
        {
          "name": "miningTime",
          "type": "uint256"
        },
        {
          "name": "stakeAmount",
          "type": "uint256"
        },
        {
          "name": "inventorAddress",
          "type": "address"
        },
        {
          "name": "inventionAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ideaBlockReward",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalBlockHalfTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "repOwnes",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ideaVariables",
      "outputs": [
        {
          "name": "globalUseBlockAmount",
          "type": "uint256"
        },
        {
          "name": "royalty",
          "type": "uint256"
        },
        {
          "name": "miningTime",
          "type": "uint256"
        },
        {
          "name": "stakeAmount",
          "type": "uint256"
        },
        {
          "name": "inventorAddress",
          "type": "address"
        },
        {
          "name": "inventionAddress",
          "type": "address"
        },
        {
          "name": "IPFShash",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalIdeaCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "IdeaAddToId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "repInfo",
      "outputs": [
        {
          "name": "BlockReward",
          "type": "uint256"
        },
        {
          "name": "OwnersAddress",
          "type": "address"
        },
        {
          "name": "IdeaID",
          "type": "uint256"
        },
        {
          "name": "Royalty",
          "type": "uint256"
        },
        {
          "name": "RepID",
          "type": "uint256"
        },
        {
          "name": "InventorsAddress",
          "type": "address"
        },
        {
          "name": "ReplicationAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalUseBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "weightTracker",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ideaId",
          "type": "uint256"
        },
        {
          "name": "_repAdd",
          "type": "address"
        },
        {
          "name": "_userId",
          "type": "string"
        }
      ],
      "name": "generateReplicationBlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalRepCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "localWeightTracker",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "replications",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DCPoA",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ideaRepCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "Validators",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalIdeaPropCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "IPFS",
          "type": "string"
        }
      ],
      "name": "IdeaProposed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "member",
          "type": "address"
        }
      ],
      "name": "NewMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "IPFS",
          "type": "string"
        }
      ],
      "name": "IdeaApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_voter",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "inSupport",
          "type": "bool"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_repAdd",
          "type": "address"
        }
      ],
      "name": "NewReplication",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "repAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "repWeight",
          "type": "uint256"
        }
      ],
      "name": "LocalUseWeight",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "repAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "ideaId",
          "type": "uint256"
        }
      ],
      "name": "GlobalUseBlock",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "generateUseBlockWeight",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506129c9806100206000396000f3fe608060405260043610610149576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311e658441461014e5780631855efa6146101b35780631ddc883b1461036b57806328a6e47c146103965780632e858cce146103c15780634242779f146104305780634cfa2409146105665780634f214e84146105915780636849e795146105f6578063715018a614610709578063758249741461072057806381cbb6771461074b5780638da5cb5b1461079a5780638f32d59b146107f1578063a416ecd714610820578063b4fdd85d14610837578063be6cbbcf14610929578063c4d66de814610954578063ce87d3ee146109a5578063d436b5e914610a0a578063e026daa114610a73578063f2fde38b14610aca578063f54a012914610b1b578063f691977414610b6a578063f7e1e4f014610bc1575b600080fd5b34801561015a57600080fd5b5061019d6004803603602081101561017157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bec565b6040518082815260200191505060405180910390f35b3480156101bf57600080fd5b506101ec600480360360208110156101d657600080fd5b8101908080359060200190929190505050610c04565b6040518080602001806020018b1515151581526020018a1515151581526020018981526020018881526020018781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183810383528d818151815260200191508051906020019080838360005b838110156102c05780820151818401526020810190506102a5565b50505050905090810190601f1680156102ed5780820380516001836020036101000a031916815260200191505b5083810382528c818151815260200191508051906020019080838360005b8381101561032657808201518184015260208101905061030b565b50505050905090810190601f1680156103535780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390f35b34801561037757600080fd5b50610380610de2565b6040518082815260200191505060405180910390f35b3480156103a257600080fd5b506103ab610de8565b6040518082815260200191505060405180910390f35b3480156103cd57600080fd5b5061041a600480360360408110156103e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610dee565b6040518082815260200191505060405180910390f35b34801561043c57600080fd5b506104696004803603602081101561045357600080fd5b8101908080359060200190929190505050610e13565b604051808881526020018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561052557808201518184015260208101905061050a565b50505050905090810190601f1680156105525780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561057257600080fd5b5061057b610f2d565b6040518082815260200191505060405180910390f35b34801561059d57600080fd5b506105e0600480360360208110156105b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f33565b6040518082815260200191505060405180910390f35b34801561060257600080fd5b506106456004803603602081101561061957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f4b565b604051808881526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200197505050505050505060405180910390f35b34801561071557600080fd5b5061071e610fed565b005b34801561072c57600080fd5b506107356110c1565b6040518082815260200191505060405180910390f35b34801561075757600080fd5b506107846004803603602081101561076e57600080fd5b81019080803590602001909291905050506110c7565b6040518082815260200191505060405180910390f35b3480156107a657600080fd5b506107af6110df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107fd57600080fd5b50610806611109565b604051808215151515815260200191505060405180910390f35b34801561082c57600080fd5b50610835611161565b005b34801561084357600080fd5b506109276004803603606081101561085a57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156108a157600080fd5b8201836020820111156108b357600080fd5b803590602001918460018302840111640100000000831117156108d557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611745565b005b34801561093557600080fd5b5061093e6120bd565b6040518082815260200191505060405180910390f35b34801561096057600080fd5b506109a36004803603602081101561097757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120c3565b005b3480156109b157600080fd5b506109f4600480360360208110156109c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506122b7565b6040518082815260200191505060405180910390f35b348015610a1657600080fd5b50610a5960048036036020811015610a2d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506122cf565b604051808215151515815260200191505060405180910390f35b348015610a7f57600080fd5b50610a886122ef565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ad657600080fd5b50610b1960048036036020811015610aed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612315565b005b348015610b2757600080fd5b50610b5460048036036020811015610b3e57600080fd5b8101908080359060200190929190505050612334565b6040518082815260200191505060405180910390f35b348015610b7657600080fd5b50610b7f61234c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610bcd57600080fd5b50610bd6612372565b6040518082815260200191505060405180910390f35b60746020528060005260406000206000915090505481565b6070602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cb05780601f10610c8557610100808354040283529160200191610cb0565b820191906000526020600020905b815481529060010190602001808311610c9357829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d4e5780601f10610d2357610100808354040283529160200191610d4e565b820191906000526020600020905b815481529060010190602001808311610d3157829003601f168201915b5050505050908060020160009054906101000a900460ff16908060020160019054906101000a900460ff16908060030154908060040154908060050154908060060154908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508a565b606a5481565b60695481565b6077602052816000526040600020602052806000526040600020600091509150505481565b606e6020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806006018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f235780601f10610ef857610100808354040283529160200191610f23565b820191906000526020600020905b815481529060010190602001808311610f0657829003601f168201915b5050505050905087565b60685481565b606f6020528060005260406000206000915090505481565b60766020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905087565b610ff5611109565b151561100057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b606d5481565b60716020528060005260406000206000915090505481565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b607560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156111b957600080fd5b60003390506111c66128b3565b607660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060e06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160400151905061134e612933565b606e600083815260200190815260200160002060e06040519081016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114da5780601f106114af576101008083540402835291602001916114da565b820191906000526020600020905b8154815290600101906020018083116114bd57829003601f168201915b505050505081525050905060006001607260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540190508160400151607460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401421015151561158057600080fd5b607160008481526020019081526020016000205481111561164a576115a485612378565b42607460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508060716000858152602001908152602001600020819055506000607260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061173e565b42607460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080607260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f6ad49266dd90c9bdf996a7d34e9516f55e0d641ac4b0e911baf7f730d683842a8582604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b5050505050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dc8e79fb836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156117f15780820151818401526020810190506117d6565b50505050905090810190601f16801561181e5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561183b57600080fd5b505afa15801561184f573d6000803e3d6000fd5b505050506040513d602081101561186557600080fd5b81019080805190602001909291905050509050611880612933565b606e600086815260200190815260200160002060e06040519081016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a0c5780601f106119e157610100808354040283529160200191611a0c565b820191906000526020600020905b8154815290600101906020018083116119ef57829003601f168201915b5050505050815250509050606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aaa746bb836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611ad257600080fd5b505afa158015611ae6573d6000803e3d6000fd5b505050506040513d6020811015611afc57600080fd5b81019080805190602001909291905050501515611b1857600080fd5b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c812a6018383606001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015611be157600080fd5b505af1158015611bf5573d6000803e3d6000fd5b50505050606c60008154809291906001019190505550600081600001519050600082602001519050600081830390506000846080015190506000606c549050611c3c6128b3565b60e0604051908101604052808581526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018c81526020018681526020018381526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018b73ffffffffffffffffffffffffffffffffffffffff16815250905080607660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506000607360008d815260200190815260200160002054905080806001019150607360008e8152602001908152602001600020819055506001607560008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000607760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e815260200190815260200160002054905080806001019150607760008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008f815260200190815260200160002081905550606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634777e8ea8b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015611fef57600080fd5b505af1158015612003573d6000803e3d6000fd5b5050505042607460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fe949536157131e1de4cd7b981de0040f0fb98337330cdf262d0fed657681c2f08c604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150505050505050505050505050565b606c5481565b600060019054906101000a900460ff16806120e257506120e16127a6565b5b806120f957506000809054906101000a900460ff16155b1515612193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600060016101000a81548160ff0219169083151502179055505050565b60726020528060005260406000206000915090505481565b60756020528060005260406000206000915054906101000a900460ff1681565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61231d611109565b151561232857600080fd5b612331816127b7565b50565b60736020528060005260406000206000915090505481565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606b5481565b6123806128b3565b607660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060e06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600060776000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083604001518152602001908152602001600020548260000151029050606d60008154809291906001019190505550606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636326e4ce8360200151836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561263557600080fd5b505af1158015612649573d6000803e3d6000fd5b50505050606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636326e4ce8360a0015184606001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561271a57600080fd5b505af115801561272e573d6000803e3d6000fd5b505050507fc35af376e21644286c5c8e35541e14cc67a7215c4a724810ed7e49a421c670a9838360400151604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1505050565b600080303b90506000811491505090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156127f357600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60e06040519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60e06040519081016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152509056fea165627a7a7230582029d6794cdee8dfb12b9f9301d388d12e751df5c69c0174fb323abcb3f38159b50029",
  "deployedBytecode": "0x608060405260043610610149576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311e658441461014e5780631855efa6146101b35780631ddc883b1461036b57806328a6e47c146103965780632e858cce146103c15780634242779f146104305780634cfa2409146105665780634f214e84146105915780636849e795146105f6578063715018a614610709578063758249741461072057806381cbb6771461074b5780638da5cb5b1461079a5780638f32d59b146107f1578063a416ecd714610820578063b4fdd85d14610837578063be6cbbcf14610929578063c4d66de814610954578063ce87d3ee146109a5578063d436b5e914610a0a578063e026daa114610a73578063f2fde38b14610aca578063f54a012914610b1b578063f691977414610b6a578063f7e1e4f014610bc1575b600080fd5b34801561015a57600080fd5b5061019d6004803603602081101561017157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bec565b6040518082815260200191505060405180910390f35b3480156101bf57600080fd5b506101ec600480360360208110156101d657600080fd5b8101908080359060200190929190505050610c04565b6040518080602001806020018b1515151581526020018a1515151581526020018981526020018881526020018781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183810383528d818151815260200191508051906020019080838360005b838110156102c05780820151818401526020810190506102a5565b50505050905090810190601f1680156102ed5780820380516001836020036101000a031916815260200191505b5083810382528c818151815260200191508051906020019080838360005b8381101561032657808201518184015260208101905061030b565b50505050905090810190601f1680156103535780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390f35b34801561037757600080fd5b50610380610de2565b6040518082815260200191505060405180910390f35b3480156103a257600080fd5b506103ab610de8565b6040518082815260200191505060405180910390f35b3480156103cd57600080fd5b5061041a600480360360408110156103e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610dee565b6040518082815260200191505060405180910390f35b34801561043c57600080fd5b506104696004803603602081101561045357600080fd5b8101908080359060200190929190505050610e13565b604051808881526020018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561052557808201518184015260208101905061050a565b50505050905090810190601f1680156105525780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561057257600080fd5b5061057b610f2d565b6040518082815260200191505060405180910390f35b34801561059d57600080fd5b506105e0600480360360208110156105b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f33565b6040518082815260200191505060405180910390f35b34801561060257600080fd5b506106456004803603602081101561061957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f4b565b604051808881526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200197505050505050505060405180910390f35b34801561071557600080fd5b5061071e610fed565b005b34801561072c57600080fd5b506107356110c1565b6040518082815260200191505060405180910390f35b34801561075757600080fd5b506107846004803603602081101561076e57600080fd5b81019080803590602001909291905050506110c7565b6040518082815260200191505060405180910390f35b3480156107a657600080fd5b506107af6110df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107fd57600080fd5b50610806611109565b604051808215151515815260200191505060405180910390f35b34801561082c57600080fd5b50610835611161565b005b34801561084357600080fd5b506109276004803603606081101561085a57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156108a157600080fd5b8201836020820111156108b357600080fd5b803590602001918460018302840111640100000000831117156108d557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611745565b005b34801561093557600080fd5b5061093e6120bd565b6040518082815260200191505060405180910390f35b34801561096057600080fd5b506109a36004803603602081101561097757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120c3565b005b3480156109b157600080fd5b506109f4600480360360208110156109c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506122b7565b6040518082815260200191505060405180910390f35b348015610a1657600080fd5b50610a5960048036036020811015610a2d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506122cf565b604051808215151515815260200191505060405180910390f35b348015610a7f57600080fd5b50610a886122ef565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ad657600080fd5b50610b1960048036036020811015610aed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612315565b005b348015610b2757600080fd5b50610b5460048036036020811015610b3e57600080fd5b8101908080359060200190929190505050612334565b6040518082815260200191505060405180910390f35b348015610b7657600080fd5b50610b7f61234c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610bcd57600080fd5b50610bd6612372565b6040518082815260200191505060405180910390f35b60746020528060005260406000206000915090505481565b6070602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cb05780601f10610c8557610100808354040283529160200191610cb0565b820191906000526020600020905b815481529060010190602001808311610c9357829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d4e5780601f10610d2357610100808354040283529160200191610d4e565b820191906000526020600020905b815481529060010190602001808311610d3157829003601f168201915b5050505050908060020160009054906101000a900460ff16908060020160019054906101000a900460ff16908060030154908060040154908060050154908060060154908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508a565b606a5481565b60695481565b6077602052816000526040600020602052806000526040600020600091509150505481565b606e6020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806006018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f235780601f10610ef857610100808354040283529160200191610f23565b820191906000526020600020905b815481529060010190602001808311610f0657829003601f168201915b5050505050905087565b60685481565b606f6020528060005260406000206000915090505481565b60766020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905087565b610ff5611109565b151561100057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b606d5481565b60716020528060005260406000206000915090505481565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b607560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156111b957600080fd5b60003390506111c66128b3565b607660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060e06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160400151905061134e612933565b606e600083815260200190815260200160002060e06040519081016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114da5780601f106114af576101008083540402835291602001916114da565b820191906000526020600020905b8154815290600101906020018083116114bd57829003601f168201915b505050505081525050905060006001607260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540190508160400151607460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401421015151561158057600080fd5b607160008481526020019081526020016000205481111561164a576115a485612378565b42607460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508060716000858152602001908152602001600020819055506000607260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061173e565b42607460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080607260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f6ad49266dd90c9bdf996a7d34e9516f55e0d641ac4b0e911baf7f730d683842a8582604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b5050505050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dc8e79fb836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156117f15780820151818401526020810190506117d6565b50505050905090810190601f16801561181e5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561183b57600080fd5b505afa15801561184f573d6000803e3d6000fd5b505050506040513d602081101561186557600080fd5b81019080805190602001909291905050509050611880612933565b606e600086815260200190815260200160002060e06040519081016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a0c5780601f106119e157610100808354040283529160200191611a0c565b820191906000526020600020905b8154815290600101906020018083116119ef57829003601f168201915b5050505050815250509050606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aaa746bb836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611ad257600080fd5b505afa158015611ae6573d6000803e3d6000fd5b505050506040513d6020811015611afc57600080fd5b81019080805190602001909291905050501515611b1857600080fd5b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c812a6018383606001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015611be157600080fd5b505af1158015611bf5573d6000803e3d6000fd5b50505050606c60008154809291906001019190505550600081600001519050600082602001519050600081830390506000846080015190506000606c549050611c3c6128b3565b60e0604051908101604052808581526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018c81526020018681526020018381526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018b73ffffffffffffffffffffffffffffffffffffffff16815250905080607660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506000607360008d815260200190815260200160002054905080806001019150607360008e8152602001908152602001600020819055506001607560008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000607760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e815260200190815260200160002054905080806001019150607760008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008f815260200190815260200160002081905550606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634777e8ea8b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015611fef57600080fd5b505af1158015612003573d6000803e3d6000fd5b5050505042607460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fe949536157131e1de4cd7b981de0040f0fb98337330cdf262d0fed657681c2f08c604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150505050505050505050505050565b606c5481565b600060019054906101000a900460ff16806120e257506120e16127a6565b5b806120f957506000809054906101000a900460ff16155b1515612193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600060016101000a81548160ff0219169083151502179055505050565b60726020528060005260406000206000915090505481565b60756020528060005260406000206000915054906101000a900460ff1681565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61231d611109565b151561232857600080fd5b612331816127b7565b50565b60736020528060005260406000206000915090505481565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606b5481565b6123806128b3565b607660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060e06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600060776000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083604001518152602001908152602001600020548260000151029050606d60008154809291906001019190505550606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636326e4ce8360200151836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561263557600080fd5b505af1158015612649573d6000803e3d6000fd5b50505050606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636326e4ce8360a0015184606001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561271a57600080fd5b505af115801561272e573d6000803e3d6000fd5b505050507fc35af376e21644286c5c8e35541e14cc67a7215c4a724810ed7e49a421c670a9838360400151604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1505050565b600080303b90506000811491505090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156127f357600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60e06040519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60e06040519081016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152509056fea165627a7a7230582029d6794cdee8dfb12b9f9301d388d12e751df5c69c0174fb323abcb3f38159b50029",
  "sourceMap": "55:3000:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;55:3000:4;;;;;;;",
  "deployedSourceMap": "55:3000:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2816:54:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2816:54:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2816:54:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2354:50;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2354:50:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2354:50:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2354:50:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2354:50:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1900:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1900:27:2;;;;;;;;;;;;;;;;;;;;;;;1865:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1865:31:2;;;;;;;;;;;;;;;;;;;;;;;2976:57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2976:57:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2976:57:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2256:47:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2256:47:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2256:47:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1834:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1834:27:2;;;;;;;;;;;;;;;;;;;;;;;2307:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2307:43:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2307:43:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2922:50;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2922:50:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2922:50:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1438:137:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1438:137:11;;;;;;2094:26:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2094:26:2;;;;;;;;;;;;;;;;;;;;;;;2408:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2408:42:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2408:42:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;750:77:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;750:77:11;;;;;;;;;;;;;;;;;;;;;;;;;;;1070:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1070:90:11;;;;;;;;;;;;;;;;;;;;;;;;;;;1220:1832:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1220:1832:4;;;;;;526:2186:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;526:2186:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;526:2186:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;526:2186:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;526:2186:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;526:2186:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;526:2186:3;;;;;;;;;;;;;;;;;;2064:26:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2064:26:2;;;;;;;;;;;;;;;;;;;;;;;545:142:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;545:142:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;545:142:11;;;;;;;;;;;;;;;;;;;;;;2454:50:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2454:50:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2454:50:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2874:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2874:44:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2874:44:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1513:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1513:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1746:107:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1746:107:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1746:107:11;;;;;;;;;;;;;;;;;;;;;;2769:43:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2769:43:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2769:43:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1542:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1542:33:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1931:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1931:31:2;;;;;;;;;;;;;;;;;;;;;;;2816:54;;;;;;;;;;;;;;;;;:::o;2354:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1900:27::-;;;;:::o;1865:31::-;;;;:::o;2976:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2256:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1834:27::-;;;;:::o;2307:43::-;;;;;;;;;;;;;;;;;:::o;2922:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1438:137:11:-;954:9;:7;:9::i;:::-;946:18;;;;;;;;1536:1;1499:40;;1520:6;;;;;;;;;;;1499:40;;;;;;;;;;;;1566:1;1549:6;;:19;;;;;;;;;;;;;;;;;;1438:137::o;2094:26:2:-;;;;:::o;2408:42::-;;;;;;;;;;;;;;;;;:::o;750:77:11:-;788:7;814:6;;;;;;;;;;;807:13;;750:77;:::o;1070:90::-;1110:4;1147:6;;;;;;;;;;;1133:20;;:10;:20;;;1126:27;;1070:90;:::o;1220:1832:4:-;1275:12;:24;1288:10;1275:24;;;;;;;;;;;;;;;;;;;;;;;;;1267:33;;;;;;;;1306:12;1321:10;1306:25;;1338:28;;:::i;:::-;1369:7;:13;1377:4;1369:13;;;;;;;;;;;;;;;1338:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1470:11;1484:5;:12;;;1470:26;;1568:21;;:::i;:::-;1592:13;:21;1606:6;1592:21;;;;;;;;;;;1568:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:14;1732:1;1705:18;:24;1724:4;1705:24;;;;;;;;;;;;;;;;:28;1688:45;;1838:4;:15;;;1806:22;:28;1829:4;1806:28;;;;;;;;;;;;;;;;:47;1799:3;:54;;1791:63;;;;;;;;2080:13;:21;2094:6;2080:21;;;;;;;;;;;;2068:9;:33;2065:983;;;2163:28;2186:4;2163:22;:28::i;:::-;2276:3;2245:22;:28;2268:4;2245:28;;;;;;;;;;;;;;;:34;;;;2390:9;2366:13;:21;2380:6;2366:21;;;;;;;;;;;:33;;;;2506:1;2479:18;:24;2498:4;2479:24;;;;;;;;;;;;;;;:28;;;;2065:983;;;2693:3;2662:22;:28;2685:4;2662:28;;;;;;;;;;;;;;;:34;;;;2828:9;2801:18;:24;2820:4;2801:24;;;;;;;;;;;;;;;:36;;;;2917:31;2932:4;2938:9;2917:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;2065:983;1220:1832;;;;;:::o;526:2186:3:-;628:14;645:5;;;;;;;;;;;:20;;;666:7;645:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;645:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;645:29:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;645:29:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;645:29:3;;;;;;;;;;;;;;;;628:46;;743:21;;:::i;:::-;767:13;:22;781:7;767:22;;;;;;;;;;;743:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;840:5;;;;;;;;;;;:20;;;861:6;840:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;840:28:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;840:28:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;840:28:3;;;;;;;;;;;;;;;;832:37;;;;;;;;930:5;;;;;;;;;;;:18;;;949:6;957:4;:16;;;930:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;930:44:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;930:44:3;;;;1050:14;;:16;;;;;;;;;;;;;1112:19;1135:4;:25;;;1112:48;;1240:12;1255:4;:12;;;1240:27;;1331:16;1367:7;1350:14;:24;1331:43;;1433:16;1452:4;:20;;;1433:39;;1531:11;1545:14;;1531:28;;1608;;:::i;:::-;1639:259;;;;;;;;;1680:11;1639:259;;;;1721:6;1639:259;;;;;;1747:7;1639:259;;;;1775:7;1639:259;;;;1801:6;1639:259;;;;1840:8;1639:259;;;;;;1883:7;1639:259;;;;;1608:290;;1967:5;1948:7;:16;1956:7;1948:16;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2037:17;2057:14;:23;2072:7;2057:23;;;;;;;;;;;;2037:43;;2176:14;;;;;;2150;:23;2165:7;2150:23;;;;;;;;;;;:40;;;;2278:4;2254:12;:21;2267:7;2254:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;2338:18;2359:8;:16;2368:6;2359:16;;;;;;;;;;;;;;;:25;2376:7;2359:25;;;;;;;;;;;;2338:46;;2505:15;;;;;;2477:8;:16;2486:6;2477:16;;;;;;;;;;;;;;;:25;2494:7;2477:25;;;;;;;;;;;:43;;;;2600:5;;;;;;;;;;;:20;;;2621:6;2600:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2600:28:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2600:28:3;;;;2668:3;2634:22;:31;2657:7;2634:31;;;;;;;;;;;;;;;:37;;;;2682:23;2697:7;2682:23;;;;;;;;;;;;;;;;;;;;;;526:2186;;;;;;;;;;;;;:::o;2064:26:2:-;;;;:::o;545:142:11:-;1024:12:15;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;619:6:11;610;;:15;;;;;;;;;;;;;;;;;;673:6;;;;;;;;;;;640:40;;669:1;640:40;;;;;;;;;;;;1243:15:15;1228:12;;:30;;;;;;;;;;;;;;;;;;545:142:11;;:::o;2454:50:2:-;;;;;;;;;;;;;;;;;:::o;2874:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;1513:25::-;;;;;;;;;;;;;:::o;1746:107:11:-;954:9;:7;:9::i;:::-;946:18;;;;;;;;1818:28;1837:8;1818:18;:28::i;:::-;1746:107;:::o;2769:43:2:-;;;;;;;;;;;;;;;;;:::o;1542:33::-;;;;;;;;;;;;;:::o;1931:31::-;;;;:::o;276:800:4:-;335:28;;:::i;:::-;366:7;:13;374:4;366:13;;;;;;;;;;;;;;;335:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:25;516:8;:29;525:5;:19;;;516:29;;;;;;;;;;;;;;;:43;546:5;:12;;;516:43;;;;;;;;;;;;496:5;:17;;;:63;468:91;;743:14;;:16;;;;;;;;;;;;;805:5;;;;;;;;;;;:18;;;824:5;:19;;;845:20;805:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;805:61:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;805:61:4;;;;928:5;;;;;;;;;;;:18;;;947:5;:22;;;971:5;:13;;;928:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;928:57:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;928:57:4;;;;1037:34;1052:4;1058:5;:12;;;1037:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;276:800;;;:::o;1349:467:15:-;1396:4;1737:10;1782:7;1770:20;1764:26;;1810:1;1804:2;:7;1797:14;;;1349:467;:::o;1997:183:11:-;2090:1;2070:22;;:8;:22;;;;2062:31;;;;;;;;2137:8;2108:38;;2129:6;;;;;;;;;;;2108:38;;;;;;;;;;;;2165:8;2156:6;;:17;;;;;;;;;;;;;;;;;;1997:183;:::o;55:3000:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\nimport './RepBlockLogic.sol';\n\ncontract UseBlockLogic is RepBlockLogic {\n  ///@notice generateGlobalUseBlock is an internal function called when the cryptopatent blockchain has determined\n  ///        that a replication has mined a global use block.\n  function generateGlobalUseBlock(address _rep) internal {\n  ReplicationInfo memory infoR = repInfo[_rep];\n  //pulls a specific replications information in to be used as the variable infoR\n\n    uint poolModedBlockReward = infoR.BlockReward * repOwnes[infoR.OwnersAddress][infoR.IdeaID];\n  // sets poolModedBlockReward equal to the block reward for a specific replications\n  // and multiplies it by how many replications a member owns. this is the pool mining bonus\n    globalUseBlock++;\n  //increases the Global UseBlock count\n    DCPoA.proxyNTCMint(infoR.OwnersAddress, poolModedBlockReward);\n  //mints the replication Owner his modded block reward\n    DCPoA.proxyNTCMint(infoR.InventorsAddress, infoR.Royalty);\n  //mints royalties to the idea inventor\n    emit GlobalUseBlock(_rep, infoR.IdeaID);\n  }\n\n  ///@notice UseBlockWeight is an internal function that tracks loacal use weightTracker\n  ///@dev this is called by generateUseBlockWeight\n  function generateUseBlockWeight() public {\n    require(replications[msg.sender]);\n    address _rep = msg.sender;\n\n    ReplicationInfo memory infoR = repInfo[_rep];\n  //pulls a specific replications information in to be used as the variable infoR\n    uint ideaID = infoR.IdeaID;\n  //sets ideaID as a specific ideaID from the replications struct\n    IdeaBlock memory info = ideaVariables[ideaID];\n  //pulls a specific idea struct int to be used as the variable info\n    uint newWeight = localWeightTracker[_rep] + 1;\n  // increases the weight of a specific replication\n    require(now >= localMiningtimeTracker[_rep] +  info.miningTime);\n  //requires the time the function is called to be later than the combined total of its last call\n  //and the specific ideas mining time resraint\n  //this require fails if the rep is calling to frequently\n    if(newWeight > weightTracker[ideaID]) {\n  //checks if the replication has the heaviest weight\n    generateGlobalUseBlock(_rep);\n  //if it does it generates a global use block\n     localMiningtimeTracker[_rep] = now;\n  //resets the global mining time for a specific idea after a useBlock is mined\n     weightTracker[ideaID] = newWeight;\n  //sets the global block height to the weight of the mining replication\n     localWeightTracker[_rep] = 0;\n  //resets the local weight tracker for the mining replication\n  } else {\n    //if the replications weight is not heavy enough to mine a new block\n      localMiningtimeTracker[_rep] = now;\n    //set its local mining time tracker to the current time so it cant abuse the mining function\n      localWeightTracker[_rep] = newWeight;\n    //setts the local weight tracker for the rep to its new weight\n      emit LocalUseWeight(_rep, newWeight);\n    //emit event signaling that a replication mined a local weight without a global Useblock\n    }\n  }\n\n}\n",
  "sourcePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/UseBlockLogic.sol",
  "ast": {
    "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/UseBlockLogic.sol",
    "exportedSymbols": {
      "UseBlockLogic": [
        1464
      ]
    },
    "id": 1465,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1310,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/RepBlockLogic.sol",
        "file": "./RepBlockLogic.sol",
        "id": 1311,
        "nodeType": "ImportDirective",
        "scope": 1465,
        "sourceUnit": 1309,
        "src": "24:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1312,
              "name": "RepBlockLogic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1308,
              "src": "81:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RepBlockLogic_$1308",
                "typeString": "contract RepBlockLogic"
              }
            },
            "id": 1313,
            "nodeType": "InheritanceSpecifier",
            "src": "81:13:4"
          }
        ],
        "contractDependencies": [
          1152,
          1308,
          3386,
          4017
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1464,
        "linearizedBaseContracts": [
          1464,
          1308,
          1152,
          3386,
          4017
        ],
        "name": "UseBlockLogic",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1363,
              "nodeType": "Block",
              "src": "331:745:4",
              "statements": [
                {
                  "assignments": [
                    1319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1319,
                      "name": "infoR",
                      "nodeType": "VariableDeclaration",
                      "scope": 1363,
                      "src": "335:28:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1318,
                        "name": "ReplicationInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 972,
                        "src": "335:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$972_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1323,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1320,
                      "name": "repInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 865,
                      "src": "366:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ReplicationInfo_$972_storage_$",
                        "typeString": "mapping(address => struct IdeaBlockLogic.ReplicationInfo storage ref)"
                      }
                    },
                    "id": 1322,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1321,
                      "name": "_rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1315,
                      "src": "374:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "366:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReplicationInfo_$972_storage",
                      "typeString": "struct IdeaBlockLogic.ReplicationInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "335:44:4"
                },
                {
                  "assignments": [
                    1325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1325,
                      "name": "poolModedBlockReward",
                      "nodeType": "VariableDeclaration",
                      "scope": 1363,
                      "src": "468:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1324,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "468:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1336,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1326,
                        "name": "infoR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1319,
                        "src": "496:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                        }
                      },
                      "id": 1327,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "BlockReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 959,
                      "src": "496:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1328,
                          "name": "repOwnes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 871,
                          "src": "516:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1331,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1329,
                            "name": "infoR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1319,
                            "src": "525:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                              "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                            }
                          },
                          "id": 1330,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "OwnersAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 961,
                          "src": "525:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "516:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1334,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1332,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1319,
                          "src": "546:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "IdeaID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 963,
                        "src": "546:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "516:43:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "496:63:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "468:91:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "743:16:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 1337,
                      "name": "globalUseBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 829,
                      "src": "743:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1339,
                  "nodeType": "ExpressionStatement",
                  "src": "743:16:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1343,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1319,
                          "src": "824:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1344,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "OwnersAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 961,
                        "src": "824:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1345,
                        "name": "poolModedBlockReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1325,
                        "src": "845:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1340,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 815,
                        "src": "805:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$803",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proxyNTCMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 757,
                      "src": "805:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "805:61:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1347,
                  "nodeType": "ExpressionStatement",
                  "src": "805:61:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1351,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1319,
                          "src": "947:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1352,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "InventorsAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 969,
                        "src": "947:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1353,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1319,
                          "src": "971:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1354,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "Royalty",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 965,
                        "src": "971:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1348,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 815,
                        "src": "928:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$803",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proxyNTCMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 757,
                      "src": "928:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "928:57:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1356,
                  "nodeType": "ExpressionStatement",
                  "src": "928:57:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1358,
                        "name": "_rep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1315,
                        "src": "1052:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1359,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1319,
                          "src": "1058:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1360,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "IdeaID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 963,
                        "src": "1058:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1357,
                      "name": "GlobalUseBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 909,
                      "src": "1037:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1037:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1362,
                  "nodeType": "EmitStatement",
                  "src": "1032:39:4"
                }
              ]
            },
            "documentation": "@notice generateGlobalUseBlock is an internal function called when the cryptopatent blockchain has determined\n        that a replication has mined a global use block.",
            "id": 1364,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateGlobalUseBlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1315,
                  "name": "_rep",
                  "nodeType": "VariableDeclaration",
                  "scope": 1364,
                  "src": "308:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "308:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "307:14:4"
            },
            "returnParameters": {
              "id": 1317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:4"
            },
            "scope": 1464,
            "src": "276:800:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1462,
              "nodeType": "Block",
              "src": "1261:1791:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1368,
                          "name": "replications",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 861,
                          "src": "1275:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1371,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1369,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4032,
                            "src": "1288:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1288:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1275:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1367,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4035,
                        4036
                      ],
                      "referencedDeclaration": 4035,
                      "src": "1267:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1267:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1373,
                  "nodeType": "ExpressionStatement",
                  "src": "1267:33:4"
                },
                {
                  "assignments": [
                    1375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1375,
                      "name": "_rep",
                      "nodeType": "VariableDeclaration",
                      "scope": 1462,
                      "src": "1306:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1374,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1306:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1378,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1376,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4032,
                      "src": "1321:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1321:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1306:25:4"
                },
                {
                  "assignments": [
                    1380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1380,
                      "name": "infoR",
                      "nodeType": "VariableDeclaration",
                      "scope": 1462,
                      "src": "1338:28:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1379,
                        "name": "ReplicationInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 972,
                        "src": "1338:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$972_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1384,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1381,
                      "name": "repInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 865,
                      "src": "1369:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ReplicationInfo_$972_storage_$",
                        "typeString": "mapping(address => struct IdeaBlockLogic.ReplicationInfo storage ref)"
                      }
                    },
                    "id": 1383,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1382,
                      "name": "_rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1375,
                      "src": "1377:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1369:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReplicationInfo_$972_storage",
                      "typeString": "struct IdeaBlockLogic.ReplicationInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1338:44:4"
                },
                {
                  "assignments": [
                    1386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1386,
                      "name": "ideaID",
                      "nodeType": "VariableDeclaration",
                      "scope": 1462,
                      "src": "1470:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1385,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1470:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1389,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1387,
                      "name": "infoR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1380,
                      "src": "1484:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                      }
                    },
                    "id": 1388,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "IdeaID",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 963,
                    "src": "1484:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1470:26:4"
                },
                {
                  "assignments": [
                    1391
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1391,
                      "name": "info",
                      "nodeType": "VariableDeclaration",
                      "scope": 1462,
                      "src": "1568:21:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdeaBlock_$957_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.IdeaBlock"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1390,
                        "name": "IdeaBlock",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 957,
                        "src": "1568:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaBlock_$957_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaBlock"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1395,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1392,
                      "name": "ideaVariables",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "1592:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IdeaBlock_$957_storage_$",
                        "typeString": "mapping(uint256 => struct IdeaBlockLogic.IdeaBlock storage ref)"
                      }
                    },
                    "id": 1394,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1393,
                      "name": "ideaID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1386,
                      "src": "1606:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1592:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdeaBlock_$957_storage",
                      "typeString": "struct IdeaBlockLogic.IdeaBlock storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1568:45:4"
                },
                {
                  "assignments": [
                    1397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1397,
                      "name": "newWeight",
                      "nodeType": "VariableDeclaration",
                      "scope": 1462,
                      "src": "1688:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1396,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1688:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1403,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1398,
                        "name": "localWeightTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 849,
                        "src": "1705:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1400,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1399,
                        "name": "_rep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1375,
                        "src": "1724:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1705:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1732:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1705:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1688:45:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1405,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4034,
                          "src": "1799:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1406,
                              "name": "localMiningtimeTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 857,
                              "src": "1806:22:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1408,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1407,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "1829:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1806:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1409,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1391,
                              "src": "1838:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaBlock_$957_memory_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaBlock memory"
                              }
                            },
                            "id": 1410,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "miningTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 948,
                            "src": "1838:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1806:47:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1799:54:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4035,
                        4036
                      ],
                      "referencedDeclaration": 4035,
                      "src": "1791:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1791:63:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1414,
                  "nodeType": "ExpressionStatement",
                  "src": "1791:63:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1415,
                      "name": "newWeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1397,
                      "src": "2068:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1416,
                        "name": "weightTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "2080:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1418,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1417,
                        "name": "ideaID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1386,
                        "src": "2094:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2080:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2068:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1460,
                    "nodeType": "Block",
                    "src": "2581:467:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1443,
                              "name": "localMiningtimeTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 857,
                              "src": "2662:22:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1445,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1444,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "2685:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2662:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1446,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4034,
                            "src": "2693:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2662:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1448,
                        "nodeType": "ExpressionStatement",
                        "src": "2662:34:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1449,
                              "name": "localWeightTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 849,
                              "src": "2801:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1451,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1450,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "2820:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2801:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1452,
                            "name": "newWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1397,
                            "src": "2828:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2801:36:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1454,
                        "nodeType": "ExpressionStatement",
                        "src": "2801:36:4"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1456,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "2932:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1457,
                              "name": "newWeight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1397,
                              "src": "2938:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1455,
                            "name": "LocalUseWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "2917:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2917:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1459,
                        "nodeType": "EmitStatement",
                        "src": "2912:36:4"
                      }
                    ]
                  },
                  "id": 1461,
                  "nodeType": "IfStatement",
                  "src": "2065:983:4",
                  "trueBody": {
                    "id": 1442,
                    "nodeType": "Block",
                    "src": "2103:472:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1421,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "2186:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1420,
                            "name": "generateGlobalUseBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1364,
                            "src": "2163:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2163:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1423,
                        "nodeType": "ExpressionStatement",
                        "src": "2163:28:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1424,
                              "name": "localMiningtimeTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 857,
                              "src": "2245:22:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1426,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1425,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "2268:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2245:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1427,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4034,
                            "src": "2276:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2245:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1429,
                        "nodeType": "ExpressionStatement",
                        "src": "2245:34:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1430,
                              "name": "weightTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 845,
                              "src": "2366:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1432,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1431,
                              "name": "ideaID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1386,
                              "src": "2380:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2366:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1433,
                            "name": "newWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1397,
                            "src": "2390:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2366:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1435,
                        "nodeType": "ExpressionStatement",
                        "src": "2366:33:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1436,
                              "name": "localWeightTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 849,
                              "src": "2479:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1438,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1437,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "2498:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2479:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2506:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2479:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1441,
                        "nodeType": "ExpressionStatement",
                        "src": "2479:28:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice UseBlockWeight is an internal function that tracks loacal use weightTracker\n@dev this is called by generateUseBlockWeight",
            "id": 1463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateUseBlockWeight",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1251:2:4"
            },
            "returnParameters": {
              "id": 1366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1261:0:4"
            },
            "scope": 1464,
            "src": "1220:1832:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1465,
        "src": "55:3000:4"
      }
    ],
    "src": "0:3056:4"
  },
  "legacyAST": {
    "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/UseBlockLogic.sol",
    "exportedSymbols": {
      "UseBlockLogic": [
        1464
      ]
    },
    "id": 1465,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1310,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/RepBlockLogic.sol",
        "file": "./RepBlockLogic.sol",
        "id": 1311,
        "nodeType": "ImportDirective",
        "scope": 1465,
        "sourceUnit": 1309,
        "src": "24:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1312,
              "name": "RepBlockLogic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1308,
              "src": "81:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RepBlockLogic_$1308",
                "typeString": "contract RepBlockLogic"
              }
            },
            "id": 1313,
            "nodeType": "InheritanceSpecifier",
            "src": "81:13:4"
          }
        ],
        "contractDependencies": [
          1152,
          1308,
          3386,
          4017
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1464,
        "linearizedBaseContracts": [
          1464,
          1308,
          1152,
          3386,
          4017
        ],
        "name": "UseBlockLogic",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1363,
              "nodeType": "Block",
              "src": "331:745:4",
              "statements": [
                {
                  "assignments": [
                    1319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1319,
                      "name": "infoR",
                      "nodeType": "VariableDeclaration",
                      "scope": 1363,
                      "src": "335:28:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1318,
                        "name": "ReplicationInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 972,
                        "src": "335:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$972_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1323,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1320,
                      "name": "repInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 865,
                      "src": "366:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ReplicationInfo_$972_storage_$",
                        "typeString": "mapping(address => struct IdeaBlockLogic.ReplicationInfo storage ref)"
                      }
                    },
                    "id": 1322,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1321,
                      "name": "_rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1315,
                      "src": "374:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "366:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReplicationInfo_$972_storage",
                      "typeString": "struct IdeaBlockLogic.ReplicationInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "335:44:4"
                },
                {
                  "assignments": [
                    1325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1325,
                      "name": "poolModedBlockReward",
                      "nodeType": "VariableDeclaration",
                      "scope": 1363,
                      "src": "468:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1324,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "468:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1336,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1326,
                        "name": "infoR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1319,
                        "src": "496:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                        }
                      },
                      "id": 1327,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "BlockReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 959,
                      "src": "496:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1328,
                          "name": "repOwnes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 871,
                          "src": "516:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1331,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1329,
                            "name": "infoR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1319,
                            "src": "525:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                              "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                            }
                          },
                          "id": 1330,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "OwnersAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 961,
                          "src": "525:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "516:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1334,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1332,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1319,
                          "src": "546:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "IdeaID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 963,
                        "src": "546:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "516:43:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "496:63:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "468:91:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "743:16:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 1337,
                      "name": "globalUseBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 829,
                      "src": "743:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1339,
                  "nodeType": "ExpressionStatement",
                  "src": "743:16:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1343,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1319,
                          "src": "824:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1344,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "OwnersAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 961,
                        "src": "824:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1345,
                        "name": "poolModedBlockReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1325,
                        "src": "845:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1340,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 815,
                        "src": "805:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$803",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proxyNTCMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 757,
                      "src": "805:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "805:61:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1347,
                  "nodeType": "ExpressionStatement",
                  "src": "805:61:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1351,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1319,
                          "src": "947:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1352,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "InventorsAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 969,
                        "src": "947:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1353,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1319,
                          "src": "971:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1354,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "Royalty",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 965,
                        "src": "971:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1348,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 815,
                        "src": "928:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$803",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proxyNTCMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 757,
                      "src": "928:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "928:57:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1356,
                  "nodeType": "ExpressionStatement",
                  "src": "928:57:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1358,
                        "name": "_rep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1315,
                        "src": "1052:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1359,
                          "name": "infoR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1319,
                          "src": "1058:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                            "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                          }
                        },
                        "id": 1360,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "IdeaID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 963,
                        "src": "1058:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1357,
                      "name": "GlobalUseBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 909,
                      "src": "1037:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1037:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1362,
                  "nodeType": "EmitStatement",
                  "src": "1032:39:4"
                }
              ]
            },
            "documentation": "@notice generateGlobalUseBlock is an internal function called when the cryptopatent blockchain has determined\n        that a replication has mined a global use block.",
            "id": 1364,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateGlobalUseBlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1315,
                  "name": "_rep",
                  "nodeType": "VariableDeclaration",
                  "scope": 1364,
                  "src": "308:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "308:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "307:14:4"
            },
            "returnParameters": {
              "id": 1317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:4"
            },
            "scope": 1464,
            "src": "276:800:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1462,
              "nodeType": "Block",
              "src": "1261:1791:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1368,
                          "name": "replications",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 861,
                          "src": "1275:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1371,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1369,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4032,
                            "src": "1288:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1288:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1275:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1367,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4035,
                        4036
                      ],
                      "referencedDeclaration": 4035,
                      "src": "1267:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1267:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1373,
                  "nodeType": "ExpressionStatement",
                  "src": "1267:33:4"
                },
                {
                  "assignments": [
                    1375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1375,
                      "name": "_rep",
                      "nodeType": "VariableDeclaration",
                      "scope": 1462,
                      "src": "1306:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1374,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1306:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1378,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1376,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4032,
                      "src": "1321:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1321:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1306:25:4"
                },
                {
                  "assignments": [
                    1380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1380,
                      "name": "infoR",
                      "nodeType": "VariableDeclaration",
                      "scope": 1462,
                      "src": "1338:28:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1379,
                        "name": "ReplicationInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 972,
                        "src": "1338:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$972_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1384,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1381,
                      "name": "repInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 865,
                      "src": "1369:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ReplicationInfo_$972_storage_$",
                        "typeString": "mapping(address => struct IdeaBlockLogic.ReplicationInfo storage ref)"
                      }
                    },
                    "id": 1383,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1382,
                      "name": "_rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1375,
                      "src": "1377:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1369:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReplicationInfo_$972_storage",
                      "typeString": "struct IdeaBlockLogic.ReplicationInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1338:44:4"
                },
                {
                  "assignments": [
                    1386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1386,
                      "name": "ideaID",
                      "nodeType": "VariableDeclaration",
                      "scope": 1462,
                      "src": "1470:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1385,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1470:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1389,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1387,
                      "name": "infoR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1380,
                      "src": "1484:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$972_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                      }
                    },
                    "id": 1388,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "IdeaID",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 963,
                    "src": "1484:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1470:26:4"
                },
                {
                  "assignments": [
                    1391
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1391,
                      "name": "info",
                      "nodeType": "VariableDeclaration",
                      "scope": 1462,
                      "src": "1568:21:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdeaBlock_$957_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.IdeaBlock"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1390,
                        "name": "IdeaBlock",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 957,
                        "src": "1568:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaBlock_$957_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaBlock"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1395,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1392,
                      "name": "ideaVariables",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "1592:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IdeaBlock_$957_storage_$",
                        "typeString": "mapping(uint256 => struct IdeaBlockLogic.IdeaBlock storage ref)"
                      }
                    },
                    "id": 1394,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1393,
                      "name": "ideaID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1386,
                      "src": "1606:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1592:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdeaBlock_$957_storage",
                      "typeString": "struct IdeaBlockLogic.IdeaBlock storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1568:45:4"
                },
                {
                  "assignments": [
                    1397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1397,
                      "name": "newWeight",
                      "nodeType": "VariableDeclaration",
                      "scope": 1462,
                      "src": "1688:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1396,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1688:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1403,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1398,
                        "name": "localWeightTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 849,
                        "src": "1705:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1400,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1399,
                        "name": "_rep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1375,
                        "src": "1724:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1705:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1732:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1705:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1688:45:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1405,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4034,
                          "src": "1799:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1406,
                              "name": "localMiningtimeTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 857,
                              "src": "1806:22:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1408,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1407,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "1829:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1806:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1409,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1391,
                              "src": "1838:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaBlock_$957_memory_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaBlock memory"
                              }
                            },
                            "id": 1410,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "miningTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 948,
                            "src": "1838:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1806:47:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1799:54:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4035,
                        4036
                      ],
                      "referencedDeclaration": 4035,
                      "src": "1791:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1791:63:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1414,
                  "nodeType": "ExpressionStatement",
                  "src": "1791:63:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1415,
                      "name": "newWeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1397,
                      "src": "2068:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1416,
                        "name": "weightTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "2080:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1418,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1417,
                        "name": "ideaID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1386,
                        "src": "2094:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2080:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2068:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1460,
                    "nodeType": "Block",
                    "src": "2581:467:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1443,
                              "name": "localMiningtimeTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 857,
                              "src": "2662:22:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1445,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1444,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "2685:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2662:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1446,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4034,
                            "src": "2693:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2662:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1448,
                        "nodeType": "ExpressionStatement",
                        "src": "2662:34:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1449,
                              "name": "localWeightTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 849,
                              "src": "2801:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1451,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1450,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "2820:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2801:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1452,
                            "name": "newWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1397,
                            "src": "2828:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2801:36:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1454,
                        "nodeType": "ExpressionStatement",
                        "src": "2801:36:4"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1456,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "2932:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1457,
                              "name": "newWeight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1397,
                              "src": "2938:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1455,
                            "name": "LocalUseWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "2917:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2917:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1459,
                        "nodeType": "EmitStatement",
                        "src": "2912:36:4"
                      }
                    ]
                  },
                  "id": 1461,
                  "nodeType": "IfStatement",
                  "src": "2065:983:4",
                  "trueBody": {
                    "id": 1442,
                    "nodeType": "Block",
                    "src": "2103:472:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1421,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "2186:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1420,
                            "name": "generateGlobalUseBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1364,
                            "src": "2163:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2163:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1423,
                        "nodeType": "ExpressionStatement",
                        "src": "2163:28:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1424,
                              "name": "localMiningtimeTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 857,
                              "src": "2245:22:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1426,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1425,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "2268:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2245:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1427,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4034,
                            "src": "2276:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2245:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1429,
                        "nodeType": "ExpressionStatement",
                        "src": "2245:34:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1430,
                              "name": "weightTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 845,
                              "src": "2366:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1432,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1431,
                              "name": "ideaID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1386,
                              "src": "2380:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2366:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1433,
                            "name": "newWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1397,
                            "src": "2390:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2366:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1435,
                        "nodeType": "ExpressionStatement",
                        "src": "2366:33:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1436,
                              "name": "localWeightTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 849,
                              "src": "2479:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1438,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1437,
                              "name": "_rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "2498:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2479:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2506:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2479:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1441,
                        "nodeType": "ExpressionStatement",
                        "src": "2479:28:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice UseBlockWeight is an internal function that tracks loacal use weightTracker\n@dev this is called by generateUseBlockWeight",
            "id": 1463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateUseBlockWeight",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1251:2:4"
            },
            "returnParameters": {
              "id": 1366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1261:0:4"
            },
            "scope": 1464,
            "src": "1220:1832:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1465,
        "src": "55:3000:4"
      }
    ],
    "src": "0:3056:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-04-18T23:09:43.097Z",
  "devdoc": {
    "methods": {
      "generateReplicationBlock(uint256,address,string)": {
        "details": "this requires the replicator has enough Notio to meet the stake amount and burns it from existenceit also adds the replicator as a member of DecentraCorpfinally, this contract calls the Proof of Replication Ownership contract and mints a PoRO token to the msg.sender"
      },
      "generateUseBlockWeight()": {
        "details": "this is called by generateUseBlockWeight"
      },
      "initialize(address)": {
        "details": "The Ownable constructor sets the original `owner` of the contract to the sender account."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "generateReplicationBlock(uint256,address,string)": {
        "notice": "generateReplicationBlock is used to generate a replication block when someone sucessfully replicates an Idea"
      },
      "generateUseBlockWeight()": {
        "notice": "UseBlockWeight is an internal function that tracks loacal use weightTracker"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}