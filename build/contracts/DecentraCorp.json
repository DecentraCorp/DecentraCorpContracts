{
  "contractName": "DecentraCorp",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newHash",
          "type": "string"
        }
      ],
      "name": "updateProfile",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "name": "Address",
          "type": "address"
        },
        {
          "name": "PropCode",
          "type": "uint256"
        },
        {
          "name": "Amount",
          "type": "uint256"
        },
        {
          "name": "voteHash",
          "type": "string"
        },
        {
          "name": "executed",
          "type": "bool"
        },
        {
          "name": "proposalPassed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "frozen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "memberCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newContract",
          "type": "address"
        }
      ],
      "name": "addApprovedContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "preferedStockPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalCstock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stakePreferedStock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalPstock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_add",
          "type": "address"
        }
      ],
      "name": "increaseMemLev",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_stakeNumber",
          "type": "uint256"
        }
      ],
      "name": "addAdditionalStock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "founder",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDCbalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "purchaseCommonStock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_add",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "proxyNTCMint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_member",
          "type": "address"
        }
      ],
      "name": "_checkIfFrozen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stakeCommonStock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "commonStockPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_stakeNumber",
          "type": "uint256"
        }
      ],
      "name": "payOffStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_add",
          "type": "address"
        }
      ],
      "name": "getLevel",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_mem",
          "type": "address"
        },
        {
          "name": "_userId",
          "type": "string"
        }
      ],
      "name": "_addMember",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferCommonStock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMemberCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "purchasePreferedStock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_commonStockPrice",
          "type": "uint256"
        },
        {
          "name": "_preferedStockPrice",
          "type": "uint256"
        }
      ],
      "name": "setStockPrices",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stakeNumber",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_member",
          "type": "address"
        }
      ],
      "name": "_checkIfMember",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_add",
          "type": "address"
        }
      ],
      "name": "getProfileHash",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_stakeNumber",
          "type": "uint256"
        }
      ],
      "name": "paySomeStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferPreferedStock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_add",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "proxyNTCBurn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "preferedStocksHeldByDC",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_add",
          "type": "address"
        },
        {
          "name": "_userID",
          "type": "string"
        }
      ],
      "name": "setFounder",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_member",
          "type": "address"
        },
        {
          "name": "_commentsHash",
          "type": "string"
        }
      ],
      "name": "postComment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_userId",
          "type": "string"
        }
      ],
      "name": "getAddFromPass",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newMem",
          "type": "address"
        },
        {
          "name": "_facility",
          "type": "address"
        },
        {
          "name": "_hash",
          "type": "string"
        },
        {
          "name": "_userId",
          "type": "string"
        }
      ],
      "name": "buyMembership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_member",
          "type": "address"
        }
      ],
      "name": "getComment",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "commonStocksHeldByDC",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "VoteHash",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "PropCode",
          "type": "uint256"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_voter",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "inSupport",
          "type": "bool"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addToFund",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundingApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_newMem",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newMemFacility",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "profHash",
          "type": "string"
        }
      ],
      "name": "NewMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "updatedAccount",
          "type": "address"
        }
      ],
      "name": "ProfileUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        },
        {
          "name": "_propCode",
          "type": "uint256"
        },
        {
          "name": "_voteHash",
          "type": "string"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ProposalID",
          "type": "uint256"
        },
        {
          "name": "supportsProposal",
          "type": "bool"
        }
      ],
      "name": "vote",
      "outputs": [
        {
          "name": "voteID",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "hash",
          "type": "string"
        }
      ],
      "name": "getPropID",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "hash",
          "type": "string"
        }
      ],
      "name": "getPropCode",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_add",
          "type": "address"
        },
        {
          "name": "_ProposalID",
          "type": "uint256"
        }
      ],
      "name": "checkIfVoted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_newHash\",\"type\":\"string\"}],\"name\":\"updateProfile\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"name\":\"Address\",\"type\":\"address\"},{\"name\":\"PropCode\",\"type\":\"uint256\"},{\"name\":\"Amount\",\"type\":\"uint256\"},{\"name\":\"voteHash\",\"type\":\"string\"},{\"name\":\"executed\",\"type\":\"bool\"},{\"name\":\"proposalPassed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"frozen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"getPropID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"memberCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newContract\",\"type\":\"address\"}],\"name\":\"addApprovedContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preferedStockPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalCstock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakePreferedStock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalPstock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_add\",\"type\":\"address\"},{\"name\":\"_ProposalID\",\"type\":\"uint256\"}],\"name\":\"checkIfVoted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"increaseMemLev\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_stakeNumber\",\"type\":\"uint256\"}],\"name\":\"addAdditionalStock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDCbalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"purchaseCommonStock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_add\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"proxyNTCMint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"_checkIfFrozen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeCommonStock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"getPropCode\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_propCode\",\"type\":\"uint256\"},{\"name\":\"_voteHash\",\"type\":\"string\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"createProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commonStockPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_stakeNumber\",\"type\":\"uint256\"}],\"name\":\"payOffStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"getLevel\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mem\",\"type\":\"address\"},{\"name\":\"_userId\",\"type\":\"string\"}],\"name\":\"_addMember\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferCommonStock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMemberCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"purchasePreferedStock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_commonStockPrice\",\"type\":\"uint256\"},{\"name\":\"_preferedStockPrice\",\"type\":\"uint256\"}],\"name\":\"setStockPrices\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakeNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"_checkIfMember\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"getProfileHash\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_stakeNumber\",\"type\":\"uint256\"}],\"name\":\"paySomeStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferPreferedStock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_add\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"proxyNTCBurn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ProposalID\",\"type\":\"uint256\"},{\"name\":\"supportsProposal\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[{\"name\":\"voteID\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preferedStocksHeldByDC\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_add\",\"type\":\"address\"},{\"name\":\"_userID\",\"type\":\"string\"}],\"name\":\"setFounder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_member\",\"type\":\"address\"},{\"name\":\"_commentsHash\",\"type\":\"string\"}],\"name\":\"postComment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_userId\",\"type\":\"string\"}],\"name\":\"getAddFromPass\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newMem\",\"type\":\"address\"},{\"name\":\"_facility\",\"type\":\"address\"},{\"name\":\"_hash\",\"type\":\"string\"},{\"name\":\"_userId\",\"type\":\"string\"}],\"name\":\"buyMembership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"getComment\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commonStocksHeldByDC\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"VoteHash\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"PropCode\",\"type\":\"uint256\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_voter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"inSupport\",\"type\":\"bool\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addToFund\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundingApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newMem\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newMemFacility\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"profHash\",\"type\":\"string\"}],\"name\":\"NewMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"updatedAccount\",\"type\":\"address\"}],\"name\":\"ProfileUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"_addMember(address,string)\":{\"details\":\"addMember takes in an address _mem, sets its membership to true and increments their rank by one\"},\"addApprovedContract(address)\":{\"details\":\"adds contract to list of approved calling contracts\"},\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"buyMembership(address,address,string,string)\":{\"details\":\"mints the user 1000 NTC if member is one of the first 100\"},\"decimals()\":{\"return\":\"the number of decimals of the token.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowances[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"getMemberCount()\":{\"details\":\"getMemberCount is for front end and internal use\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowances[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"initialize(address)\":{\"details\":\"The Ownable constructor sets the original `owner` of the contract to the sender account.\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"name()\":{\"return\":\"the name of the token.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"symbol()\":{\"return\":\"the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token to a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"_addMember(address,string)\":{\"notice\":\"addMember function is an internal function for adding a member to decentracorp\"},\"buyMembership(address,address,string,string)\":{\"notice\":\"buyMembership function allows for the purchase of a membership for 6 months after official launch.\"},\"createProposal(address,uint256,string,uint256)\":{\"notice\":\"Proposal Codes are used to fire specific code. each number represents a different action*** the following are is a list of prop codes and their actions** 1. Funding Proposal: the address entered is the address receiving funding** 2. MemberShip Account Freeze Proposal: the address entered is the address to be frozen** 3. Membership Termination Proposal: the address entered is the address to be terminated** 4. Add new Approved Contract: the address entered will be approved to mint/burn NotiCoinCoin //more options will be added to allow for contract upgrades in the future\"},\"getMemberCount()\":{\"notice\":\"getMemberCount function returns total membercount\"},\"initialize()\":{\"notice\":\"constructor sets up NotiCoin address through truffle wizardry\"},\"proxyNTCBurn(address,uint256)\":{\"notice\":\"proxyBurn allows an approved address to burn NotiCoin\"},\"proxyNTCMint(address,uint256)\":{\"notice\":\"proxyMint allows an approved address to mint NotiCoin\"},\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/stan36/repos/DecentraCorpContracts/contracts/DecentraCorp/DecentraCorp.sol\":\"DecentraCorp\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/stan36/repos/DecentraCorpContracts/contracts/DecentraCorp/DCBase.sol\":{\"keccak256\":\"0x556754dd157c8675905d05c96fa1c31792e42cecfa1b33a961ac42dbcbb0777e\",\"urls\":[\"bzzr://5b06815165ebf02fe32f247c24cb67e94a2897f690d01a5f30a11c8345025965\"]},\"/home/stan36/repos/DecentraCorpContracts/contracts/DecentraCorp/DCMember.sol\":{\"keccak256\":\"0x181b145f3f73019df924d3befa20fb25a90165a754cafb25fe729084bd180d29\",\"urls\":[\"bzzr://af011a4d4fc82af4912cc5194d461d6a69e0df468660c1a47030e0d87e90495a\"]},\"/home/stan36/repos/DecentraCorpContracts/contracts/DecentraCorp/DecentraCorp.sol\":{\"keccak256\":\"0x5b1e0eeffdfade95b6194af9cd876ccc8cd8e115d99dc1df0d48aae1272cd620\",\"urls\":[\"bzzr://ff53129d72c3ec49dc7348201c7e04af08c79e7b343f400792b8e17d2366151b\"]},\"/home/stan36/repos/DecentraCorpContracts/contracts/DecentraCorp/DecentraStock.sol\":{\"keccak256\":\"0x30c087512a2f84383dc4340ed3bf236ad68ceafcbe6a25db1d7ccff8f4748c9d\",\"urls\":[\"bzzr://77b9a19f285e0c7e8a9855f50eca12503a2063bc918964ddfc4e588c753ee2be\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0d4306da5305cb78f09c70c18ec86dbc66f22fa5ade90edc20e1ab88e16d4d10\",\"urls\":[\"bzzr://47885dccac32ee543284e93f21a5f62c499076b04d01b12ff67aefffbbdcbd34\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xe96d36a781eb7ce39e70936f7da6591356199ca7e46b2bf6ea0c87b2ea84e0ab\",\"urls\":[\"bzzr://caf23f5ace762c5f52ddf315ee9c6489c662061cf12d2e2d693e8e28ff2b27e3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x053235aa252e3f122dbb2a41bede5652e341f7ebf1d641770aa0c627a3653ab5\",\"urls\":[\"bzzr://a5950923bd63dc87ba373fcd16eff30484e08676c5566bcc084d5d7fe56090d3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x64685c606e51dafbf7aebaa6586f8c58dec31ad904b0c3b5db808f77fcc80483\",\"urls\":[\"bzzr://9cc79147234f7d8169ecd9cb7c413cfb7227f104d90d562570ba9b122e159649\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzzr://e45c5a995f57637b2300a376647ee345cc9cb30ee1984735091fcd4b10ff3500\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "52:4806:12:-;;;;;;;;;",
  "deployedSourceMap": "52:4806:12:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;52:4806:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3612:160:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3612:160:11;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3612:160:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3612:160:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3612:160:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3612:160:11;;;;;;;;;;;;;;;:::i;:::-;;197:27:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;197:27:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;197:27:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;986:18:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;723:81:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;723:81:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2847:147:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2847:147:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4472:99:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4472:99:12;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4472:99:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4472:99:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4472:99:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4472:99:12;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;958:23:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2188:137;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2188:137:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;481:182:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;481:182:19;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;481:182:19;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;481:182:19;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;481:182:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;481:182:19;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;481:182:19;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;481:182:19;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;481:182:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;481:182:19;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1037:89:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;126:30:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3457:231:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3457:231:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;273:23:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4242:780;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4242:780:13;;;;;;;;;;;;;;;;;:::i;:::-;;303:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1025:81:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4205:207:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4205:207:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4685:166:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4685:166:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1088:143:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1088:143:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;6296:719:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6296:719:13;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;931:22:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3944:112;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2400:464:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2400:464:13;;;;;;;;;;;;;;;;;:::i;:::-;;2404:171:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2404:171:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2785:166;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2785:166:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3500:738:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3500:738:13;;;;;;;;;;;;;;;;;:::i;:::-;;1338:104:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1338:104:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1570:137:17;;;:::i;:::-;;4577:102:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4577:102:12;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4577:102:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4577:102:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4577:102:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4577:102:12;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1316:559;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1316:559:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1316:559:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1316:559:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1316:559:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1316:559:12;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;91:28:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;333:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5027:808;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5027:808:13;;;;;;;;;;;;;;;;;:::i;:::-;;1488:139:10;;;:::i;:::-;;1372:97:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1372:97:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;444:287;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;444:287:11;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;444:287:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;444:287:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;444:287:11;;;;;;;;;;;;:::i;:::-;;804:77:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2869:295:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2869:295:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1124:92:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;866:85:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;866:85:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;997::11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4934:217:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4934:217:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1934:462:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1934:462:13;;;;;;;;;;;;;;;;;:::i;:::-;;1184:743;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1184:743:13;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;163:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2072:139:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2072:139:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;736:131:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;736:131:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1475:118;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1475:118:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1475:118:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5839:453:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5839:453:13;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3168:328;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3168:328:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;599:142:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;599:142:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;2653:121:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2653:121:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1881:773:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1881:773:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;232:34:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1636:405:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1636:405:10;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1636:405:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1636:405:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1636:405:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1636:405:10;;;;;;;;;;;;;;;:::i;:::-;;1883:163:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1883:163:11;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1883:163:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1883:163:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1883:163:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1883:163:11;;;;;;;;;;;;;;;:::i;:::-;;3780:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3780:147:11;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3780:147:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3780:147:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3780:147:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3780:147:11;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1773:132:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1773:132:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2361:1243:11;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2361:1243:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2361:1243:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2361:1243:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2361:1243:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2361:1243:11;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2361:1243:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2361:1243:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2361:1243:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2361:1243:11;;;;;;;;;;;;;;;:::i;:::-;;1878:107:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1878:107:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;2052:117:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2052:117:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2052:117:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;193:32:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3612:160:11;3712:8;3680:17;:29;3698:10;3680:29;;;;;;;;;;;;;;;:40;;;;;;;;;;;;:::i;:::-;;3737:26;3752:10;3737:26;;;;;;;;;;;;;;;;;;;;;;3612:160;:::o;197:27:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;986:18:10:-;;;;;;;;;;;;;:::o;723:81:19:-;760:13;792:5;785:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;723:81;:::o;2847:147:18:-;2912:4;2928:38;2937:12;:10;:12::i;:::-;2951:7;2960:5;2928:8;:38::i;:::-;2983:4;2976:11;;2847:147;;;;:::o;4472:99:12:-;4531:4;4551:7;4559:4;4551:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4551:13:12;;;;;;;;;;;;;;;;;;;;;;4544:20;;4472:99;;;:::o;958:23:10:-;;;;:::o;2188:137::-;1008:9:17;:7;:9::i;:::-;1000:18;;;;;;2306:4:10;2272:17;:31;2290:12;2272:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2188:137;:::o;481:182:19:-;1024:12:21;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;596:4:19;588:5;:12;;;;;;;;;;;;:::i;:::-;;620:6;610:7;:16;;;;;;;;;;;;:::i;:::-;;648:8;636:9;;:20;;;;;;;;;;;;;;;;;;1268:14:21;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;481:182:19;;;;:::o;1037:89:18:-;1081:7;1107:12;;1100:19;;1037:89;:::o;126:30:13:-;;;;:::o;3457:231:18:-;3536:4;3552:26;3562:4;3568:2;3572:5;3552:9;:26::i;:::-;3588:72;3597:4;3603:12;:10;:12::i;:::-;3617:42;3653:5;3617:11;:17;3629:4;3617:17;;;;;;;;;;;;;;;:31;3635:12;:10;:12::i;:::-;3617:31;;;;;;;;;;;;;;;;:35;;:42;;;;:::i;:::-;3588:8;:72::i;:::-;3677:4;3670:11;;3457:231;;;;;:::o;273:23:13:-;;;;:::o;4242:780::-;4297:24;4324:6;:18;4331:10;4324:18;;;;;;;;;;;;;;;4297:45;;4376:7;4356:1;:16;;;:27;;4348:36;;;;;;4409:29;4430:7;4409:1;:16;;;:20;;:29;;;;:::i;:::-;4390:1;:16;;:48;;;;4468:34;4494:7;4468:1;:21;;;:25;;:34;;;;:::i;:::-;4444:1;:21;;:58;;;;4508:11;;:13;;;;;;;;;;;;;4527:15;4546:25;4569:1;4546:18;;:22;;:25;;;;:::i;:::-;4527:44;;4578:22;4603:12;:25;4616:11;;4603:25;;;;;;;;;;;4578:50;;4651:10;4637:2;:11;;:24;;;;4681:10;4669:2;:9;;;:22;;;;;;;;;;;;;;;;;;4719:7;4699:2;:17;;:27;;;;4760:18;;4734:2;:23;;:44;;;;4801:1;4786:2;:12;;:16;;;;4811:11;4825:14;:12;:14::i;:::-;4811:28;;4861:10;4851:6;:20;4848:168;;4882:32;4896:4;4903:10;4882:5;:32::i;:::-;4924:29;4930:10;4942;4924:5;:29::i;:::-;4848:168;;;4978:29;4984:10;4996;4978:5;:29::i;:::-;4848:168;4242:780;;;;;:::o;303:23::-;;;;:::o;1025:81:19:-;1066:5;1090:9;;;;;;;;;;;1083:16;;1025:81;:::o;4205:207:18:-;4285:4;4301:83;4310:12;:10;:12::i;:::-;4324:7;4333:50;4372:10;4333:11;:25;4345:12;:10;:12::i;:::-;4333:25;;;;;;;;;;;;;;;:34;4359:7;4333:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;4301:8;:83::i;:::-;4401:4;4394:11;;4205:207;;;;:::o;4685:166:12:-;4759:4;4773:18;4794:9;4804:11;4794:22;;;;;;;;;;;;;;;;;;4773:43;;4831:1;:7;;:13;4839:4;4831:13;;;;;;;;;;;;;;;;;;;;;;;;;4824:20;;;4685:166;;;;:::o;1088:143:11:-;1393:4:10;1360:37;;:17;:29;1378:10;1360:29;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;1352:46;;;;;;1191:5:11;1167:29;;:20;1182:4;1167:14;:20::i;:::-;:29;;;1159:38;;;;;;1205:11;:17;1217:4;1205:17;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;;1088:143;:::o;6296:719:13:-;6370:24;6397:6;:18;6404:10;6397:18;;;;;;;;;;;;;;;6370:45;;6421:22;6446:12;:26;6459:12;6446:26;;;;;;;;;;;6421:51;;6502:5;6487:20;;:2;:11;;;;;;;;;;;;:20;;;6479:29;;;;;;6536:2;:9;;;;;;;;;;;;6522:23;;:10;:23;;;6514:32;;;;;;6572:1;6556:2;:12;;;:17;6553:220;;;6608:7;6590:1;:14;;;:25;;6582:34;;;;;;6641:27;6660:7;6641:1;:14;;;:18;;:27;;;;:::i;:::-;6624:1;:14;;:44;;;;6698:32;6722:7;6698:1;:19;;;:23;;:32;;;;:::i;:::-;6676:1;:19;;:54;;;;6759:7;6738:2;:17;;;:28;;;;;;;;;;;6553:220;6798:1;6782:2;:12;;;:17;6779:230;;;6836:7;6816:1;:16;;;:27;;6808:36;;;;;;6871:29;6892:7;6871:1;:16;;;:20;;:29;;;;:::i;:::-;6852:1;:16;;:48;;;;6932:34;6958:7;6932:1;:21;;;:25;;:34;;;;:::i;:::-;6908:1;:21;;:58;;;;6995:7;6974:2;:17;;;:28;;;;;;;;;;;6779:230;6296:719;;;;:::o;931:22:10:-;;;;;;;;;;;;;:::o;3944:112::-;3988:4;4017:24;4035:4;4017:9;:24::i;:::-;4010:31;;3944:112;:::o;2400:464:13:-;2456:18;2477:29;2489:16;;2477:7;:11;;:29;;;;:::i;:::-;2456:50;;2545:13;2520:21;2530:10;2520:9;:21::i;:::-;:38;;2512:47;;;;;;2565:32;2571:10;2583:13;2565:5;:32::i;:::-;2603:35;2617:4;2624:13;2603:5;:35::i;:::-;2671:7;2647:20;;:31;2644:216;;2687:39;2706:10;2718:7;2687:18;:39::i;:::-;2644:216;;;2768:7;2744:20;;:31;;;;;;;;;;;2781:24;2808:6;:18;2815:10;2808:18;;;;;;;;;;;;;;;2781:45;;2852:1;2834;:14;;;:19;;;;;;;;;;;2644:216;;2400:464;;:::o;2404:171:10:-;1393:4;1360:37;;:17;:29;1378:10;1360:29;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;1352:46;;;;;;2524:5;2500:29;;:20;2515:4;2500:14;:20::i;:::-;:29;;;2492:38;;;;;;2543:20;2549:4;2555:7;2543:5;:20::i;:::-;2404:171;;:::o;2785:166::-;2846:4;2895;2868:31;;:14;:23;2883:7;2868:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;2865:75;;;2922:4;2915:11;;;;2865:75;2785:166;;;;:::o;3500:738:13:-;3553:24;3580:6;:18;3587:10;3580:18;;;;;;;;;;;;;;;3553:45;;3630:7;3612:1;:14;;;:25;;3604:34;;;;;;3661:27;3680:7;3661:1;:14;;;:18;;:27;;;;:::i;:::-;3644:1;:14;;:44;;;;3716:32;3740:7;3716:1;:19;;;:23;;:32;;;;:::i;:::-;3694:1;:19;;:54;;;;3754:11;;:13;;;;;;;;;;;;;3773:15;3792:23;3813:1;3792:16;;:20;;:23;;;;:::i;:::-;3773:42;;3824:22;3849:12;:25;3862:11;;3849:25;;;;;;;;;;;3824:50;;3897:10;3883:2;:11;;:24;;;;3927:10;3915:2;:9;;;:22;;;;;;;;;;;;;;;;;;3965:7;3945:2;:17;;:27;;;;4006:16;;3980:2;:23;;:42;;;;4045:1;4030:2;:12;;:16;;;;4055:11;4069:14;:12;:14::i;:::-;4055:28;;4101:10;4091:6;:20;4088:148;;4118:32;4132:4;4139:10;4118:5;:32::i;:::-;4156:29;4162:10;4174;4156:5;:29::i;:::-;4088:148;;;4202:29;4208:10;4220;4202:5;:29::i;:::-;4088:148;3500:738;;;;;:::o;1338:104:18:-;1393:7;1419:9;:16;1429:5;1419:16;;;;;;;;;;;;;;;;1412:23;;1338:104;;;:::o;1570:137:17:-;1008:9;:7;:9::i;:::-;1000:18;;;;;;1668:1;1631:40;;1652:6;;;;;;;;;;;1631:40;;;;;;;;;;;;1698:1;1681:6;;:19;;;;;;;;;;;;;;;;;;1570:137::o;4577:102:12:-;4638:4;4658:8;4667:4;4658:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4658:14:12;;;;;;;;;;;;;;;;;;;;;;4651:21;;4577:102;;;:::o;1316:559::-;1433:15;1451:9;:18;;;;;;;;;;;:::i;:::-;1433:36;;1482:18;1503:9;1513:10;1503:21;;;;;;;;;;;;;;;;;;1482:42;;1549:8;1537:1;:9;;;:20;;;;;;;;;;;;;;;;;;1583:9;1570:1;:10;;:22;;;;1618:9;1605:1;:10;;:22;;;;;;;;;;;;:::i;:::-;;1661:10;1640:7;1648:9;1640:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1640:18:12;;;;;;;;;;;;;;;;;;;;;:31;;;;1706:9;1684:8;1693:9;1684:19;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1684:19:12;;;;;;;;;;;;;;;;;;;;;:31;;;;1739:7;1728:1;:8;;:18;;;;1772:5;1759:1;:10;;;:18;;;;;;;;;;;;;;;;;;1809:5;1790:1;:16;;;:24;;;;;;;;;;;;;;;;;;1832:37;1848:9;1859;1832:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1832:37:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1316:559;;;;;;:::o;91:28:13:-;;;;:::o;333:21::-;;;;;;;;;;;;;:::o;5027:808::-;5080:22;5105:12;:26;5118:12;5105:26;;;;;;;;;;;5080:51;;5160:5;5145:20;;:2;:11;;;;;;;;;;;;:20;;;5137:29;;;;;;5172:13;5206:3;5202:1;5188:2;:11;;;:15;:21;;;;;;5172:37;;5215:15;5247:8;5233:2;:11;;;:22;5215:40;;5283:2;:9;;;;;;;;;;;;5269:23;;:10;:23;;;5261:32;;;;;;5332:10;5307:21;5317:10;5307:9;:21::i;:::-;:35;;5299:44;;;;;;5349:29;5355:10;5367;5349:5;:29::i;:::-;5384:32;5398:4;5405:10;5384:5;:32::i;:::-;5425:24;5452:6;:18;5459:10;5452:18;;;;;;;;;;;;;;;5425:45;;5498:1;5482:2;:12;;;:17;5479:168;;;5527:37;5546:2;:17;;;5527:1;:14;;;:18;;:37;;;;:::i;:::-;5510:1;:14;;:54;;;;5596:42;5620:2;:17;;;5596:1;:19;;;:23;;:42;;;;:::i;:::-;5574:1;:19;;:64;;;;5479:168;5674:1;5658:2;:12;;;:17;5655:176;;;5705:39;5726:2;:17;;;5705:1;:16;;;:20;;:39;;;;:::i;:::-;5686:1;:16;;:58;;;;5778:44;5804:2;:17;;;5778:1;:21;;;:25;;:44;;;;:::i;:::-;5754:1;:21;;:68;;;;5655:176;5027:808;;;;;:::o;1488:139:10:-;1024:12:21;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1536:30:10;1555:10;1536:18;:30::i;:::-;1573:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1618:2;1573:24;:48::i;:::-;1268:14:21;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;1488:139:10;:::o;1372:97:11:-;1424:4;1445:11;:17;1457:4;1445:17;;;;;;;;;;;;;;;;1438:24;;1372:97;;;:::o;444:287::-;1393:4:10;1360:37;;:17;:29;1378:10;1360:29;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;1352:46;;;;;;568:5:11;544:29;;:20;559:4;544:14;:20::i;:::-;:29;;;536:38;;;;;;598:4;582:7;:13;590:4;582:13;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;610:11;:17;622:4;610:17;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;;665:1;651:11;;:15;637:11;:29;;;;722:4;674:7;:45;709:7;;692:25;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;692:25:11;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;692:25:11;;;682:36;;;;;;674:45;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;444:287;;;:::o;804:77:17:-;842:7;868:6;;;;;;;;;;;861:13;;804:77;:::o;2869:295:13:-;2940:24;2967:6;:18;2974:10;2967:18;;;;;;;;;;;;;;;2940:45;;3019:7;3001:1;:14;;;:25;;2993:34;;;;;;3052:27;3071:7;3052:1;:14;;;:18;;:27;;;;:::i;:::-;3035:1;:14;;:44;;;;3088:24;3115:6;:11;3122:3;3115:11;;;;;;;;;;;;;;;3088:38;;3152:7;3134:1;:14;;;:25;;;;;;;;;;;2869:295;;;;:::o;1124:92:17:-;1164:4;1203:6;;;;;;;;;;;1187:22;;:12;:10;:12::i;:::-;:22;;;1180:29;;1124:92;:::o;866:85:19:-;905:13;937:7;930:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;866:85;:::o;997::11:-;1043:4;1064:11;;1057:18;;997:85;:::o;4934:217:18:-;5019:4;5035:88;5044:12;:10;:12::i;:::-;5058:7;5067:55;5106:15;5067:11;:25;5079:12;:10;:12::i;:::-;5067:25;;;;;;;;;;;;;;;:34;5093:7;5067:34;;;;;;;;;;;;;;;;:38;;:55;;;;:::i;:::-;5035:8;:88::i;:::-;5140:4;5133:11;;4934:217;;;;:::o;1934:462:13:-;1992:18;2013:31;2025:18;;2013:7;:11;;:31;;;;:::i;:::-;1992:52;;2083:13;2058:21;2068:10;2058:9;:21::i;:::-;:38;;2050:47;;;;;;2103:32;2109:10;2121:13;2103:5;:32::i;:::-;2141:35;2155:4;2162:13;2141:5;:35::i;:::-;2211:7;2185:22;;:33;2182:91;;2227:39;2246:10;2258:7;2227:18;:39::i;:::-;2182:91;2304:7;2278:22;;:33;;;;;;;;;;;2317:24;2344:6;:18;2351:10;2344:18;;;;;;;;;;;;;;;2317:45;;2390:1;2370;:16;;;:21;;;;;;;;;;;1934:462;;;:::o;1184:743::-;788:6;;;;;;;;;;;774:20;;:10;:20;;;766:29;;;;;;1317:17;1298:16;:36;;;;1361:19;1340:18;:40;;;;1394:6;1403:1;1394:10;;1389:530;1411:11;;1406:1;:16;1389:530;;1441:22;1466:12;:15;1479:1;1466:15;;;;;;;;;;;1441:40;;1511:5;1496:20;;:2;:11;;;;;;;;;;;;:20;;;1493:414;;;1552:1;1536:2;:12;;;:17;1533:200;;;1589:16;;1574:2;:11;;;:31;1571:148;;1639:4;1625:2;:11;;;:18;;;;;;;;;;;;;;;;;;1685:2;:17;;;1661:20;;:41;;;;;;;;;;;1571:148;1533:200;1764:18;;1749:2;:11;;;:33;1746:146;;1814:4;1800:2;:11;;;:18;;;;;;;;;;;;;;;;;;1860:2;:17;;;1834:22;;:43;;;;;;;;;;;1746:146;1493:414;1389:530;1424:3;;;;;1389:530;;;;1184:743;;:::o;163:23::-;;;;:::o;2072:139:18:-;2133:4;2149:34;2159:12;:10;:12::i;:::-;2173:2;2177:5;2149:9;:34::i;:::-;2200:4;2193:11;;2072:139;;;;:::o;736:131:11:-;797:4;832;812:24;;:7;:16;820:7;812:16;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;809:54;;;852:4;845:11;;;;809:54;736:131;;;;:::o;1475:118::-;1533:13;1563:17;:23;1581:4;1563:23;;;;;;;;;;;;;;;1556:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1475:118;;;:::o;5839:453:13:-;5907:22;5932:12;:26;5945:12;5932:26;;;;;;;;;;;5907:51;;5986:5;5971:20;;:2;:11;;;;;;;;;;;;:20;;;5963:29;;;;;;6018:2;:9;;;;;;;;;;;;6004:23;;:10;:23;;;5996:32;;;;;;6065:7;6040:21;6050:10;6040:9;:21::i;:::-;:32;;6032:41;;;;;;6091:2;:11;;;6080:7;:22;6077:210;;6109:25;6121:12;6109:11;:25::i;:::-;6077:210;;;6149:26;6155:10;6167:7;6149:5;:26::i;:::-;6179:29;6193:4;6200:7;6179:5;:29::i;:::-;6213:16;6246:7;6232:2;:11;;;:21;6213:40;;6272:11;6258:2;:11;;:25;;;;6077:210;;5839:453;;;:::o;3168:328::-;3241:24;3268:6;:18;3275:10;3268:18;;;;;;;;;;;;;;;3241:45;;3322:7;3302:1;:16;;;:27;;3294:36;;;;;;3357:29;3378:7;3357:1;:16;;;:20;;:29;;;;:::i;:::-;3338:1;:16;;:48;;;;3395:24;3422:6;:11;3429:3;3422:11;;;;;;;;;;;;;;;3395:38;;3462:29;3483:7;3462:1;:16;;;:20;;:29;;;;:::i;:::-;3441:1;:16;;:50;;;;3168:328;;;;:::o;599:142:17:-;1024:12:21;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;673:6:17;664;;:15;;;;;;;;;;;;;;;;;;727:6;;;;;;;;;;;694:40;;723:1;694:40;;;;;;;;;;;;1268:14:21;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;599:142:17;;:::o;2653:121:10:-;1393:4;1360:37;;:17;:29;1378:10;1360:29;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;1352:46;;;;;;2742:20;2748:4;2754:7;2742:5;:20::i;:::-;2653:121;;:::o;1881:773:12:-;2000:11;2032:18;2053:9;2063:11;2053:22;;;;;;;;;;;;;;;;;;2032:43;;2118:4;2095:27;;:1;:7;;:19;2103:10;2095:19;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;;2087:36;;;;;;2166:4;2143:27;;:7;:19;2151:10;2143:19;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;2135:36;;;;;;2192:1;:7;;:16;;;;;;;;;;;:::i;:::-;2183:25;;2238:54;;;;;;;;2255:16;2238:54;;;;;;2280:10;2238:54;;;;;2220:1;:7;;2228:6;2220:15;;;;;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2326:4;2304:1;:7;;:19;2312:10;2304:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;2347:35;2353:10;2365:16;2347:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2394:10;2407:5;2394:18;;2442:1;2427:11;;:16;2424:125;;2465:31;2476:6;2484:11;;2465:10;:31::i;:::-;2457:39;;2424:125;;;2533:4;2525:12;;2424:125;2563:5;2560:61;;;2584:24;2596:11;2584;:24::i;:::-;2560:61;2639:6;2632:13;;;;1881:773;;;;:::o;232:34:13:-;;;;:::o;1636:405:10:-;1008:9:17;:7;:9::i;:::-;1000:18;;;;;;1768:4:10;1720:7;:45;1755:7;1738:25;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1738:25:10;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1738:25:10;;;1728:36;;;;;;1720:45;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;1798:4;1782:7;:13;1790:4;1782:13;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;1840:1;1826:11;;:15;1812:11;:29;;;;1872:3;1851:11;:17;1863:4;1851:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;1885:74;;;;;;;;;;;;;;;;;:17;:23;1903:4;1885:23;;;;;;;;;;;;;;;:74;;;;;;;;;;;;:::i;:::-;;1979:4;1969:7;;:14;;;;;;;;;;;;;;;;;;1994:38;2000:4;2006:25;1994:5;:38::i;:::-;1636:405;;:::o;1883:163:11:-;1966:25;1976:10;1988:2;1966:9;:25::i;:::-;2026:13;1999:15;:24;2015:7;1999:24;;;;;;;;;;;;;;;:40;;;;;;;;;;;;:::i;:::-;;1883:163;;:::o;3780:147::-;3847:7;3873;:45;3908:7;3891:25;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3891:25:11;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3891:25:11;;;3881:36;;;;;;3873:45;;;;;;;;;;;;;;;;;;;;;3866:52;;3780:147;;;:::o;1773:132:18:-;1845:7;1871:11;:18;1883:5;1871:18;;;;;;;;;;;;;;;:27;1890:7;1871:27;;;;;;;;;;;;;;;;1864:34;;1773:132;;;;:::o;2361:1243:11:-;2556:5;2529:32;;:23;2544:7;2529:14;:23::i;:::-;:32;;;2521:41;;;;;;2590:3;2576:11;;:17;2573:403;;;2626:4;2607:7;:16;2615:7;2607:16;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;2642:11;:20;2654:7;2642:20;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;2704:1;2690:11;;:15;2676:11;:29;;;;2746:5;2717:17;:26;2735:7;2717:26;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:::i;:::-;;2811:7;2763;:45;2798:7;2781:25;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2781:25:11;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2781:25:11;;;2771:36;;;;;;2763:45;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;2830:41;2836:10;2848:22;2830:5;:41::i;:::-;2883:31;2900:10;2912:1;2883:16;:31::i;:::-;2929:36;2939:7;2948:9;2959:5;2929:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2929:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2573:403;2987:35;2993:10;3005:16;;2987:5;:35::i;:::-;3034:38;3048:4;3055:16;;3034:5;:38::i;:::-;3104:4;3085:7;:16;3093:7;3085:16;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;3120:11;:20;3132:7;3120:20;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;3182:1;3168:11;;:15;3154:11;:29;;;;3224:5;3195:17;:26;3213:7;3195:26;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:::i;:::-;;3289:7;3241;:45;3276:7;3259:25;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3259:25:11;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3259:25:11;;;3249:36;;;;;;3241:45;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;3336:1;3312:20;;:25;3309:236;;3355:31;3372:10;3384:1;3355:16;:31::i;:::-;3309:236;;;3442:1;3418:20;;:25;;;;;;;;;;;3456:24;3483:6;:18;3490:10;3483:18;;;;;;;;;;;;;;;3456:45;;3532:1;3514;:14;;;:19;;;;;;;;;;;3309:236;;3559:36;3569:7;3578:9;3589:5;3559:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3559:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2361:1243;;;;:::o;1878:107:17:-;1008:9;:7;:9::i;:::-;1000:18;;;;;;1950:28;1969:8;1950:18;:28::i;:::-;1878:107;:::o;2052:117:11:-;2109:13;2138:15;:24;2154:7;2138:24;;;;;;;;;;;;;;;2131:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2052:117;;;:::o;193:32:13:-;;;;:::o;791:88:15:-;836:7;862:10;855:17;;791:88;:::o;6986:251:18:-;7097:1;7078:21;;:7;:21;;;;7070:30;;;;;;7135:1;7118:19;;:5;:19;;;;7110:28;;;;;;7179:5;7149:11;:18;7161:5;7149:18;;;;;;;;;;;;;;;:27;7168:7;7149:27;;;;;;;;;;;;;;;:35;;;;7215:7;7199:31;;7208:5;7199:31;;;7224:5;7199:31;;;;;;;;;;;;;;;;;;6986:251;;;:::o;1409:467:21:-;1456:4;1797:10;1842:7;1830:20;1824:26;;1870:1;1864:2;:7;1857:14;;;1409:467;:::o;5370:256:18:-;5471:1;5457:16;;:2;:16;;;;5449:25;;;;;;5503:26;5523:5;5503:9;:15;5513:4;5503:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5485:9;:15;5495:4;5485:15;;;;;;;;;;;;;;;:44;;;;5555:24;5573:5;5555:9;:13;5565:2;5555:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5539:9;:13;5549:2;5539:13;;;;;;;;;;;;;;;:40;;;;5609:2;5594:25;;5603:4;5594:25;;;5613:5;5594:25;;;;;;;;;;;;;;;;;;5370:256;;;:::o;1211:145:16:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o;1439:::-;1497:7;1516:9;1532:1;1528;:5;1516:17;;1556:1;1551;:6;;1543:15;;;;;;1576:1;1569:8;;;1439:145;;;;:::o;782:296::-;840:7;937:1;933;:5;925:14;;;;;;949:9;965:1;961;:5;;;;;;949:17;;1070:1;1063:8;;;782:296;;;;:::o;6458:263:18:-;6551:1;6532:21;;:7;:21;;;;6524:30;;;;;;6580:23;6597:5;6580:12;;:16;;:23;;;;:::i;:::-;6565:12;:38;;;;6634:29;6657:5;6634:9;:18;6644:7;6634:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6613:9;:18;6623:7;6613:18;;;;;;;;;;;;;;;:50;;;;6704:1;6678:36;;6687:7;6678:36;;;6708:5;6678:36;;;;;;;;;;;;;;;;;;6458:263;;:::o;5969:::-;6062:1;6043:21;;:7;:21;;;;6035:30;;;;;;6091:23;6108:5;6091:12;;:16;;:23;;;;:::i;:::-;6076:12;:38;;;;6145:29;6168:5;6145:9;:18;6155:7;6145:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6124:9;:18;6134:7;6124:18;;;;;;;;;;;;;;;:50;;;;6210:7;6189:36;;6206:1;6189:36;;;6219:5;6189:36;;;;;;;;;;;;;;;;;;5969:263;;:::o;231:421:16:-;289:7;534:1;529;:6;525:45;;;558:1;551:8;;;;525:45;580:9;596:1;592;:5;580:17;;624:1;619;615;:5;;;;;;:10;607:19;;;;;;644:1;637:8;;;231:421;;;;;:::o;996:182:13:-;1075:24;1102:6;:19;1109:11;1102:19;;;;;;;;;;;;;;;1075:46;;1147:7;1127:1;:16;;;:27;;;;;;;;;;;1160:11;;:13;;;;;;;;;;;;;996:182;;;:::o;3560:370:10:-;3634:4;3664:19;3686:33;3694:10;3706:8;3716:1;3686:7;:33::i;:::-;3664:55;;3765:2;3747:14;:20;3744:164;;3805:4;3798:11;;;;;3744:164;3877:5;3870:12;;;3560:370;;;;;:::o;2928:1534:12:-;2992:18;3013:9;3023:11;3013:22;;;;;;;;;;;;;;;;;;2992:43;;3126:1;:10;;;;;;;;;;;;3125:11;3117:20;;;;;;3153:11;3167:1;3153:15;;3184:8;3195:1;3184:12;;3212:8;3223:1;3212:12;;3244:6;3253:1;3244:10;;3239:336;3261:1;:7;;:14;;;;3256:1;:19;3239:336;;;3298:14;3315:1;:7;;3323:1;3315:10;;;;;;;;;;;;;;;3298:27;;3341:15;3359:1;3341:19;;3386:10;3376:20;;;;3416:1;:11;;;;;;;;;;;;3412:142;;;3454:10;3447:17;;;;3412:142;;;3518:10;3511:17;;;;3412:142;3239:336;;3277:3;;;;;3239:336;;;;3607:3;3601;:9;3597:850;;;3716:4;3703:1;:10;;;:17;;;;;;;;;;;;;;;;;;3762:4;3743:1;:16;;;:23;;;;;;;;;;;;;;;;;;3806:1;3792;:10;;;:15;3789:163;;;3834:29;3843:1;:9;;;;;;;;;;;;3854:1;:8;;;3834;:29::i;:::-;;3892:36;3908:1;:9;;;;;;;;;;;;3919:1;:8;;;3892:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;3789:163;3991:1;3977;:10;;;:15;3974:101;;;4047:4;4019:14;:25;4034:1;:9;;;;;;;;;;;;4019:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;3974:101;4114:1;4100;:10;;;:15;4097:95;;;4142:26;4158:1;:9;;;;;;;;;;;;4142:15;:26::i;:::-;4097:95;4231:1;4217;:10;;;:15;4214:99;;;4259:30;4279:1;:9;;;;;;;;;;;;4259:19;:30::i;:::-;4214:99;3597:850;;;4422:5;4403:1;:16;;;:24;;;;;;;;;;;;;;;;;;3597:850;2928:1534;;;;;:::o;7627:189:18:-;7698:22;7704:7;7713:6;7698:5;:22::i;:::-;7730:79;7739:7;7748:12;:10;:12::i;:::-;7762:46;7801:6;7762:11;:20;7774:7;7762:20;;;;;;;;;;;;;;;:34;7783:12;:10;:12::i;:::-;7762:34;;;;;;;;;;;;;;;;:38;;:46;;;;:::i;:::-;7730:8;:79::i;:::-;7627:189;;:::o;811:181:13:-;889:24;916:6;:19;923:11;916:19;;;;;;;;;;;;;;;889:46;;960:7;942:1;:14;;;:25;;;;;;;;;;;974:11;;:13;;;;;;;;;;;;;811:181;;;:::o;2129:183:17:-;2222:1;2202:22;;:8;:22;;;;2194:31;;;;;;2269:8;2240:38;;2261:6;;;;;;;;;;;2240:38;;;;;;;;;;;;2297:8;2288:6;;:17;;;;;;;;;;;;;;;;;;2129:183;:::o;3123:423:10:-;3212:13;3308:15;3356:1;3346:9;:11;3339:2;:19;3327:9;:31;3308:50;;3429:14;3482:2;3477:1;3462:11;3449:10;:24;;;;;;3448:30;3447:37;;;;;;3429:55;;3515:9;3506:19;;;;3123:423;;;;;:::o;1599:278:11:-;1658:12;1673:18;1683:7;1673:9;:18::i;:::-;1658:33;;1700:27;1710:7;1719;1700:9;:27::i;:::-;1755:5;1736:7;:16;1744:7;1736:16;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1792:1;1769:11;:20;1781:7;1769:20;;;;;;;;;;;;;;;:24;;;;1828:4;1802:14;:23;1817:7;1802:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1869:1;1855:11;;:15;1841:11;:29;;;;1599:278;;:::o;52:4806:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport './DCMember.sol';\n\n contract DecentraCorp is DCMember{\n   using SafeMath for uint256;\n\n   mapping(string => uint) getHash;\n   mapping(string => uint) propCode;\n\n\n   Proposal[] public proposals;\n\n   event ProposalCreated(string VoteHash, uint PropCode);\n   event Voted(address _voter, bool inSupport);\n   event FundingApproved(address addToFund, uint amount);\n\n\n\n\n\n   struct  Proposal {\n        address Address;\n        uint PropCode;\n        uint Amount;\n        string voteHash;\n        bool executed;\n        bool proposalPassed;\n        Vote[] votes;\n        mapping (address => bool) voted;\n    }\n\n\n    struct Vote {\n            bool inSupport;\n            address voter;\n    }\n\n\n\n\n/**\n**@notice Proposal Codes are used to fire specific code. each number represents a different action\n*** the following are is a list of prop codes and their actions\n** 1. Funding Proposal: the address entered is the address receiving funding\n** 2. MemberShip Account Freeze Proposal: the address entered is the address to be frozen\n** 3. Membership Termination Proposal: the address entered is the address to be terminated\n** 4. Add new Approved Contract: the address entered will be approved to mint/burn NotiCoinCoin\n//more options will be added to allow for contract upgrades in the future\n*/\n   function createProposal(address _address, uint _propCode, string memory _voteHash, uint _amount) public {\n           uint ProposalID = proposals.length++;\n           Proposal storage p = proposals[ProposalID];\n           p.Address = _address;\n           p.PropCode = _propCode;\n           p.voteHash = _voteHash;\n           getHash[_voteHash] = ProposalID;\n           propCode[_voteHash] = _propCode;\n           p.Amount = _amount;\n           p.executed = false;\n           p.proposalPassed = false;\n           emit ProposalCreated(_voteHash, _propCode);\n   }\n\n\n   function vote(\n          uint _ProposalID,\n          bool supportsProposal\n      )\n          public\n          returns (uint voteID)\n      {\n\n          Proposal storage p = proposals[_ProposalID];\n          require(p.voted[msg.sender] != true);\n          require(members[msg.sender] == true);\n          voteID = p.votes.length++;\n          p.votes[voteID] = Vote({inSupport: supportsProposal, voter: msg.sender});\n          p.voted[msg.sender] = true;\n          emit Voted(msg.sender, supportsProposal);\n          bool tally = false;\n          if(memberCount >= 3){\n           tally = set_Quorum(voteID, memberCount);\n         }else{\n           tally = true;\n         }\n          if(tally) {\n            executeVote(_ProposalID);\n          }\n          return voteID;\n      }\n\n\n      ///@notice ideaBlockVote counts the votes and executes and Idea Proposal, adding an idea to the cryptopatent Blockchain\n      ///@dev seperate but similiar structures will need to be implemented in the future to stream line voting on different subjects(beta)\n      function executeVote(uint _ProposalID) internal {\n              Proposal storage p = proposals[_ProposalID];\n                   // sets p equal to the specific proposalNumber\n              require(!p.executed);\n              uint quorum = 0;\n              uint yea = 0;\n              uint nay = 0;\n\n\n\n          for (uint i = 0; i <  p.votes.length; ++i) {\n              Vote storage v = p.votes[i];\n              uint voteWeight = 1;\n              quorum += voteWeight;\n              if (v.inSupport) {\n                yea += voteWeight;\n                   } else {\n                 nay += voteWeight;\n                       }\n                   }\n\n\n                   if (yea > nay ) {\n                       // Proposal passed; execute the transaction\n                     p.executed = true;\n                     p.proposalPassed = true;\n                     if(p.PropCode == 1) {\n                       transfer(p.Address, p.Amount);\n                      emit FundingApproved(p.Address, p.Amount);\n                     }\n                     if(p.PropCode == 2) {\n                       frozenAccounts[p.Address] = true;\n                     }\n                     if(p.PropCode == 3) {\n                       terminateMember(p.Address);\n                     }\n                     if(p.PropCode == 4) {\n                       addApprovedContract(p.Address);\n                     }\n                 } else {\n                       // Proposal failed\n                     p.proposalPassed = false;\n                 }\n\n            }\n\n\n\n\n\n    function getPropID(string memory hash) public view returns(uint){\n      return getHash[hash];\n    }\n\n    function getPropCode(string memory hash) public view returns(uint){\n      return propCode[hash];\n    }\n\n    function checkIfVoted(address _add, uint _ProposalID) public view returns(bool) {\n      Proposal storage p = proposals[_ProposalID];\n      return p.voted[_add];\n    }\n\n\n\n\n }\n",
  "sourcePath": "/home/stan36/repos/DecentraCorpContracts/contracts/DecentraCorp/DecentraCorp.sol",
  "ast": {
    "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/DecentraCorp/DecentraCorp.sol",
    "exportedSymbols": {
      "DecentraCorp": [
        3936
      ]
    },
    "id": 3937,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3503,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/DecentraCorp/DCMember.sol",
        "file": "./DCMember.sol",
        "id": 3504,
        "nodeType": "ImportDirective",
        "scope": 3937,
        "sourceUnit": 3502,
        "src": "25:24:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3505,
              "name": "DCMember",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3501,
              "src": "77:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DCMember_$3501",
                "typeString": "contract DCMember"
              }
            },
            "id": 3506,
            "nodeType": "InheritanceSpecifier",
            "src": "77:8:12"
          }
        ],
        "contractDependencies": [
          3078,
          3501,
          4897,
          5076,
          5326,
          5719,
          5786,
          5855,
          5918
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3936,
        "linearizedBaseContracts": [
          3936,
          3501,
          4897,
          3078,
          5786,
          5719,
          5855,
          5326,
          5076,
          5918
        ],
        "name": "DecentraCorp",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3509,
            "libraryName": {
              "contractScope": null,
              "id": 3507,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5204,
              "src": "96:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5204",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "90:27:12",
            "typeName": {
              "id": 3508,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "109:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3513,
            "name": "getHash",
            "nodeType": "VariableDeclaration",
            "scope": 3936,
            "src": "122:31:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 3512,
              "keyType": {
                "id": 3510,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "130:6:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "122:23:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueType": {
                "id": 3511,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "140:4:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3517,
            "name": "propCode",
            "nodeType": "VariableDeclaration",
            "scope": 3936,
            "src": "158:32:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 3516,
              "keyType": {
                "id": 3514,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "166:6:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "158:23:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueType": {
                "id": 3515,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "176:4:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3520,
            "name": "proposals",
            "nodeType": "VariableDeclaration",
            "scope": 3936,
            "src": "197:27:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Proposal_$3558_storage_$dyn_storage",
              "typeString": "struct DecentraCorp.Proposal[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 3518,
                "name": "Proposal",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 3558,
                "src": "197:8:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                  "typeString": "struct DecentraCorp.Proposal"
                }
              },
              "id": 3519,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "197:10:12",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Proposal_$3558_storage_$dyn_storage_ptr",
                "typeString": "struct DecentraCorp.Proposal[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3526,
            "name": "ProposalCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3522,
                  "indexed": false,
                  "name": "VoteHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3526,
                  "src": "252:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3521,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "252:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3524,
                  "indexed": false,
                  "name": "PropCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 3526,
                  "src": "269:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3523,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "251:32:12"
            },
            "src": "230:54:12"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3532,
            "name": "Voted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3528,
                  "indexed": false,
                  "name": "_voter",
                  "nodeType": "VariableDeclaration",
                  "scope": 3532,
                  "src": "300:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "300:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3530,
                  "indexed": false,
                  "name": "inSupport",
                  "nodeType": "VariableDeclaration",
                  "scope": 3532,
                  "src": "316:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3529,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "299:32:12"
            },
            "src": "288:44:12"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3538,
            "name": "FundingApproved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3534,
                  "indexed": false,
                  "name": "addToFund",
                  "nodeType": "VariableDeclaration",
                  "scope": 3538,
                  "src": "358:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "358:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3536,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3538,
                  "src": "377:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3535,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "377:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "357:32:12"
            },
            "src": "336:54:12"
          },
          {
            "canonicalName": "DecentraCorp.Proposal",
            "id": 3558,
            "members": [
              {
                "constant": false,
                "id": 3540,
                "name": "Address",
                "nodeType": "VariableDeclaration",
                "scope": 3558,
                "src": "426:15:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3539,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "426:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3542,
                "name": "PropCode",
                "nodeType": "VariableDeclaration",
                "scope": 3558,
                "src": "451:13:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3541,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "451:4:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3544,
                "name": "Amount",
                "nodeType": "VariableDeclaration",
                "scope": 3558,
                "src": "474:11:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3543,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "474:4:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3546,
                "name": "voteHash",
                "nodeType": "VariableDeclaration",
                "scope": 3558,
                "src": "495:15:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 3545,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "495:6:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3548,
                "name": "executed",
                "nodeType": "VariableDeclaration",
                "scope": 3558,
                "src": "520:13:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3547,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "520:4:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3550,
                "name": "proposalPassed",
                "nodeType": "VariableDeclaration",
                "scope": 3558,
                "src": "543:19:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3549,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "543:4:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3553,
                "name": "votes",
                "nodeType": "VariableDeclaration",
                "scope": 3558,
                "src": "572:12:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Vote_$3563_storage_$dyn_storage_ptr",
                  "typeString": "struct DecentraCorp.Vote[]"
                },
                "typeName": {
                  "baseType": {
                    "contractScope": null,
                    "id": 3551,
                    "name": "Vote",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3563,
                    "src": "572:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vote_$3563_storage_ptr",
                      "typeString": "struct DecentraCorp.Vote"
                    }
                  },
                  "id": 3552,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "572:6:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Vote_$3563_storage_$dyn_storage_ptr",
                    "typeString": "struct DecentraCorp.Vote[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3557,
                "name": "voted",
                "nodeType": "VariableDeclaration",
                "scope": 3558,
                "src": "594:31:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 3556,
                  "keyType": {
                    "id": 3554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "594:25:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 3555,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "614:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nodeType": "StructDefinition",
            "scope": 3936,
            "src": "399:233:12",
            "visibility": "public"
          },
          {
            "canonicalName": "DecentraCorp.Vote",
            "id": 3563,
            "members": [
              {
                "constant": false,
                "id": 3560,
                "name": "inSupport",
                "nodeType": "VariableDeclaration",
                "scope": 3563,
                "src": "665:14:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3559,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "665:4:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3562,
                "name": "voter",
                "nodeType": "VariableDeclaration",
                "scope": 3563,
                "src": "693:13:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3561,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "693:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Vote",
            "nodeType": "StructDefinition",
            "scope": 3936,
            "src": "639:74:12",
            "visibility": "public"
          },
          {
            "body": {
              "id": 3639,
              "nodeType": "Block",
              "src": "1420:455:12",
              "statements": [
                {
                  "assignments": [
                    3575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3575,
                      "name": "ProposalID",
                      "nodeType": "VariableDeclaration",
                      "scope": 3639,
                      "src": "1433:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3574,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1433:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3579,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 3578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1451:18:12",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3576,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3520,
                        "src": "1451:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Proposal_$3558_storage_$dyn_storage",
                          "typeString": "struct DecentraCorp.Proposal storage ref[] storage ref"
                        }
                      },
                      "id": 3577,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1451:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1433:36:12"
                },
                {
                  "assignments": [
                    3581
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3581,
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 3639,
                      "src": "1482:18:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                        "typeString": "struct DecentraCorp.Proposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3580,
                        "name": "Proposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3558,
                        "src": "1482:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3585,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3582,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3520,
                      "src": "1503:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Proposal_$3558_storage_$dyn_storage",
                        "typeString": "struct DecentraCorp.Proposal storage ref[] storage ref"
                      }
                    },
                    "id": 3584,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3583,
                      "name": "ProposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3575,
                      "src": "1513:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1503:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$3558_storage",
                      "typeString": "struct DecentraCorp.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1482:42:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3586,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3581,
                        "src": "1537:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal storage pointer"
                        }
                      },
                      "id": 3588,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "Address",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3540,
                      "src": "1537:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3589,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3565,
                      "src": "1549:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1537:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3591,
                  "nodeType": "ExpressionStatement",
                  "src": "1537:20:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3592,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3581,
                        "src": "1570:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal storage pointer"
                        }
                      },
                      "id": 3594,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "PropCode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3542,
                      "src": "1570:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3595,
                      "name": "_propCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3567,
                      "src": "1583:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1570:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3597,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:22:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3598,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3581,
                        "src": "1605:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal storage pointer"
                        }
                      },
                      "id": 3600,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voteHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3546,
                      "src": "1605:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3601,
                      "name": "_voteHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3569,
                      "src": "1618:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1605:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3603,
                  "nodeType": "ExpressionStatement",
                  "src": "1605:22:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3604,
                        "name": "getHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3513,
                        "src": "1640:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 3606,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3605,
                        "name": "_voteHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3569,
                        "src": "1648:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1640:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3607,
                      "name": "ProposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3575,
                      "src": "1661:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1640:31:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3609,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:31:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3610,
                        "name": "propCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3517,
                        "src": "1684:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 3612,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3611,
                        "name": "_voteHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3569,
                        "src": "1693:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1684:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3613,
                      "name": "_propCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3567,
                      "src": "1706:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1684:31:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3615,
                  "nodeType": "ExpressionStatement",
                  "src": "1684:31:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3616,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3581,
                        "src": "1728:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal storage pointer"
                        }
                      },
                      "id": 3618,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "Amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3544,
                      "src": "1728:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3619,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3571,
                      "src": "1739:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1728:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3621,
                  "nodeType": "ExpressionStatement",
                  "src": "1728:18:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3622,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3581,
                        "src": "1759:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal storage pointer"
                        }
                      },
                      "id": 3624,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "executed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3548,
                      "src": "1759:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 3625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1772:5:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1759:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3627,
                  "nodeType": "ExpressionStatement",
                  "src": "1759:18:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3628,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3581,
                        "src": "1790:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal storage pointer"
                        }
                      },
                      "id": 3630,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposalPassed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3550,
                      "src": "1790:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 3631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1809:5:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1790:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3633,
                  "nodeType": "ExpressionStatement",
                  "src": "1790:24:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3635,
                        "name": "_voteHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3569,
                        "src": "1848:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3636,
                        "name": "_propCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3567,
                        "src": "1859:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3634,
                      "name": "ProposalCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3526,
                      "src": "1832:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 3637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1832:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3638,
                  "nodeType": "EmitStatement",
                  "src": "1827:42:12"
                }
              ]
            },
            "documentation": "**@notice Proposal Codes are used to fire specific code. each number represents a different action*** the following are is a list of prop codes and their actions** 1. Funding Proposal: the address entered is the address receiving funding** 2. MemberShip Account Freeze Proposal: the address entered is the address to be frozen** 3. Membership Termination Proposal: the address entered is the address to be terminated** 4. Add new Approved Contract: the address entered will be approved to mint/burn NotiCoinCoin\n//more options will be added to allow for contract upgrades in the future",
            "id": 3640,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3565,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 3640,
                  "src": "1340:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1340:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3567,
                  "name": "_propCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 3640,
                  "src": "1358:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3566,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1358:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3569,
                  "name": "_voteHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3640,
                  "src": "1374:23:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3568,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3571,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3640,
                  "src": "1399:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3570,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1339:73:12"
            },
            "returnParameters": {
              "id": 3573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:0:12"
            },
            "scope": 3936,
            "src": "1316:559:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3738,
              "nodeType": "Block",
              "src": "2019:635:12",
              "statements": [
                {
                  "assignments": [
                    3650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3650,
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 3738,
                      "src": "2032:18:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                        "typeString": "struct DecentraCorp.Proposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3649,
                        "name": "Proposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3558,
                        "src": "2032:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3654,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3651,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3520,
                      "src": "2053:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Proposal_$3558_storage_$dyn_storage",
                        "typeString": "struct DecentraCorp.Proposal storage ref[] storage ref"
                      }
                    },
                    "id": 3653,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3652,
                      "name": "_ProposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3642,
                      "src": "2063:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2053:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$3558_storage",
                      "typeString": "struct DecentraCorp.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2032:43:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3656,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3650,
                              "src": "2095:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                "typeString": "struct DecentraCorp.Proposal storage pointer"
                              }
                            },
                            "id": 3657,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "voted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3557,
                            "src": "2095:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3660,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3658,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5933,
                              "src": "2103:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2103:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2095:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 3661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2118:4:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2095:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3655,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5936,
                        5937
                      ],
                      "referencedDeclaration": 5936,
                      "src": "2087:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2087:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3664,
                  "nodeType": "ExpressionStatement",
                  "src": "2087:36:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3666,
                            "name": "members",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2834,
                            "src": "2143:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3669,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3667,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5933,
                              "src": "2151:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2151:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2143:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 3670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2166:4:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2143:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3665,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5936,
                        5937
                      ],
                      "referencedDeclaration": 5936,
                      "src": "2135:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2135:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3673,
                  "nodeType": "ExpressionStatement",
                  "src": "2135:36:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3674,
                      "name": "voteID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3647,
                      "src": "2183:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2192:16:12",
                      "subExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3675,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3650,
                            "src": "2192:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                              "typeString": "struct DecentraCorp.Proposal storage pointer"
                            }
                          },
                          "id": 3676,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "votes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3553,
                          "src": "2192:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Vote_$3563_storage_$dyn_storage",
                            "typeString": "struct DecentraCorp.Vote storage ref[] storage ref"
                          }
                        },
                        "id": 3677,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2192:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2183:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3680,
                  "nodeType": "ExpressionStatement",
                  "src": "2183:25:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3681,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3650,
                          "src": "2220:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                            "typeString": "struct DecentraCorp.Proposal storage pointer"
                          }
                        },
                        "id": 3684,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3553,
                        "src": "2220:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vote_$3563_storage_$dyn_storage",
                          "typeString": "struct DecentraCorp.Vote storage ref[] storage ref"
                        }
                      },
                      "id": 3685,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3683,
                        "name": "voteID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3647,
                        "src": "2228:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2220:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vote_$3563_storage",
                        "typeString": "struct DecentraCorp.Vote storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3687,
                          "name": "supportsProposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3644,
                          "src": "2255:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3688,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5933,
                            "src": "2280:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2280:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 3686,
                        "name": "Vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3563,
                        "src": "2238:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Vote_$3563_storage_ptr_$",
                          "typeString": "type(struct DecentraCorp.Vote storage pointer)"
                        }
                      },
                      "id": 3690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "inSupport",
                        "voter"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2238:54:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vote_$3563_memory",
                        "typeString": "struct DecentraCorp.Vote memory"
                      }
                    },
                    "src": "2220:72:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vote_$3563_storage",
                      "typeString": "struct DecentraCorp.Vote storage ref"
                    }
                  },
                  "id": 3692,
                  "nodeType": "ExpressionStatement",
                  "src": "2220:72:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3693,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3650,
                          "src": "2304:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                            "typeString": "struct DecentraCorp.Proposal storage pointer"
                          }
                        },
                        "id": 3697,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "voted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3557,
                        "src": "2304:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3698,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3695,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5933,
                          "src": "2312:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2312:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2304:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2326:4:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2304:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3701,
                  "nodeType": "ExpressionStatement",
                  "src": "2304:26:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3703,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5933,
                          "src": "2353:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2353:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3705,
                        "name": "supportsProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3644,
                        "src": "2365:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3702,
                      "name": "Voted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3532,
                      "src": "2347:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 3706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2347:35:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3707,
                  "nodeType": "EmitStatement",
                  "src": "2342:40:12"
                },
                {
                  "assignments": [
                    3709
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3709,
                      "name": "tally",
                      "nodeType": "VariableDeclaration",
                      "scope": 3738,
                      "src": "2394:10:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3708,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2394:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3711,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 3710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2407:5:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2394:18:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3712,
                      "name": "memberCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2812,
                      "src": "2427:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 3713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2442:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "2427:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3727,
                    "nodeType": "Block",
                    "src": "2512:37:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3723,
                            "name": "tally",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3709,
                            "src": "2525:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 3724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2533:4:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2525:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3726,
                        "nodeType": "ExpressionStatement",
                        "src": "2525:12:12"
                      }
                    ]
                  },
                  "id": 3728,
                  "nodeType": "IfStatement",
                  "src": "2424:125:12",
                  "trueBody": {
                    "id": 3722,
                    "nodeType": "Block",
                    "src": "2444:64:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3715,
                            "name": "tally",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3709,
                            "src": "2457:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3717,
                                "name": "voteID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3647,
                                "src": "2476:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 3718,
                                "name": "memberCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2812,
                                "src": "2484:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3716,
                              "name": "set_Quorum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3065,
                              "src": "2465:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (uint256,uint256) pure returns (bool)"
                              }
                            },
                            "id": 3719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2465:31:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2457:39:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3721,
                        "nodeType": "ExpressionStatement",
                        "src": "2457:39:12"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 3729,
                    "name": "tally",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3709,
                    "src": "2563:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3735,
                  "nodeType": "IfStatement",
                  "src": "2560:61:12",
                  "trueBody": {
                    "id": 3734,
                    "nodeType": "Block",
                    "src": "2570:51:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3731,
                              "name": "_ProposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3642,
                              "src": "2596:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3730,
                            "name": "executeVote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3890,
                            "src": "2584:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 3732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2584:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3733,
                        "nodeType": "ExpressionStatement",
                        "src": "2584:24:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3736,
                    "name": "voteID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3647,
                    "src": "2639:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3648,
                  "id": 3737,
                  "nodeType": "Return",
                  "src": "2632:13:12"
                }
              ]
            },
            "documentation": null,
            "id": 3739,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3642,
                  "name": "_ProposalID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3739,
                  "src": "1906:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3641,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1906:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3644,
                  "name": "supportsProposal",
                  "nodeType": "VariableDeclaration",
                  "scope": 3739,
                  "src": "1934:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3643,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1934:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1894:69:12"
            },
            "returnParameters": {
              "id": 3648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3647,
                  "name": "voteID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3739,
                  "src": "2000:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3646,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2000:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1999:13:12"
            },
            "scope": 3936,
            "src": "1881:773:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3889,
              "nodeType": "Block",
              "src": "2976:1486:12",
              "statements": [
                {
                  "assignments": [
                    3745
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3745,
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 3889,
                      "src": "2992:18:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                        "typeString": "struct DecentraCorp.Proposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3744,
                        "name": "Proposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3558,
                        "src": "2992:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3749,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3746,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3520,
                      "src": "3013:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Proposal_$3558_storage_$dyn_storage",
                        "typeString": "struct DecentraCorp.Proposal storage ref[] storage ref"
                      }
                    },
                    "id": 3748,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3747,
                      "name": "_ProposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3741,
                      "src": "3023:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3013:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$3558_storage",
                      "typeString": "struct DecentraCorp.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2992:43:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3125:11:12",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3751,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3745,
                            "src": "3126:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                              "typeString": "struct DecentraCorp.Proposal storage pointer"
                            }
                          },
                          "id": 3752,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3548,
                          "src": "3126:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3750,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5936,
                        5937
                      ],
                      "referencedDeclaration": 5936,
                      "src": "3117:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3117:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3755,
                  "nodeType": "ExpressionStatement",
                  "src": "3117:20:12"
                },
                {
                  "assignments": [
                    3757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3757,
                      "name": "quorum",
                      "nodeType": "VariableDeclaration",
                      "scope": 3889,
                      "src": "3153:11:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3756,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3153:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3759,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 3758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3167:1:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3153:15:12"
                },
                {
                  "assignments": [
                    3761
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3761,
                      "name": "yea",
                      "nodeType": "VariableDeclaration",
                      "scope": 3889,
                      "src": "3184:8:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3760,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3184:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3763,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 3762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3195:1:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3184:12:12"
                },
                {
                  "assignments": [
                    3765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3765,
                      "name": "nay",
                      "nodeType": "VariableDeclaration",
                      "scope": 3889,
                      "src": "3212:8:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3764,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3212:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3767,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 3766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3223:1:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3212:12:12"
                },
                {
                  "body": {
                    "id": 3808,
                    "nodeType": "Block",
                    "src": "3282:293:12",
                    "statements": [
                      {
                        "assignments": [
                          3781
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3781,
                            "name": "v",
                            "nodeType": "VariableDeclaration",
                            "scope": 3808,
                            "src": "3298:14:12",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vote_$3563_storage_ptr",
                              "typeString": "struct DecentraCorp.Vote"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 3780,
                              "name": "Vote",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 3563,
                              "src": "3298:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vote_$3563_storage_ptr",
                                "typeString": "struct DecentraCorp.Vote"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 3786,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3782,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3745,
                              "src": "3315:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                "typeString": "struct DecentraCorp.Proposal storage pointer"
                              }
                            },
                            "id": 3783,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "votes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3553,
                            "src": "3315:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Vote_$3563_storage_$dyn_storage",
                              "typeString": "struct DecentraCorp.Vote storage ref[] storage ref"
                            }
                          },
                          "id": 3785,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3784,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3769,
                            "src": "3323:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3315:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vote_$3563_storage",
                            "typeString": "struct DecentraCorp.Vote storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3298:27:12"
                      },
                      {
                        "assignments": [
                          3788
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3788,
                            "name": "voteWeight",
                            "nodeType": "VariableDeclaration",
                            "scope": 3808,
                            "src": "3341:15:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3787,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3341:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 3790,
                        "initialValue": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 3789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3359:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3341:19:12"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3791,
                            "name": "quorum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3757,
                            "src": "3376:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3792,
                            "name": "voteWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3788,
                            "src": "3386:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3376:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3794,
                        "nodeType": "ExpressionStatement",
                        "src": "3376:20:12"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3795,
                            "name": "v",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3781,
                            "src": "3416:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vote_$3563_storage_ptr",
                              "typeString": "struct DecentraCorp.Vote storage pointer"
                            }
                          },
                          "id": 3796,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "inSupport",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3560,
                          "src": "3416:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3806,
                          "nodeType": "Block",
                          "src": "3492:62:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 3802,
                                  "name": "nay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3765,
                                  "src": "3511:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 3803,
                                  "name": "voteWeight",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3788,
                                  "src": "3518:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3511:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3805,
                              "nodeType": "ExpressionStatement",
                              "src": "3511:17:12"
                            }
                          ]
                        },
                        "id": 3807,
                        "nodeType": "IfStatement",
                        "src": "3412:142:12",
                        "trueBody": {
                          "id": 3801,
                          "nodeType": "Block",
                          "src": "3429:57:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3799,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 3797,
                                  "name": "yea",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3761,
                                  "src": "3447:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 3798,
                                  "name": "voteWeight",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3788,
                                  "src": "3454:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3447:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3800,
                              "nodeType": "ExpressionStatement",
                              "src": "3447:17:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3772,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3769,
                      "src": "3256:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3773,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3745,
                          "src": "3261:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                            "typeString": "struct DecentraCorp.Proposal storage pointer"
                          }
                        },
                        "id": 3774,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3553,
                        "src": "3261:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vote_$3563_storage_$dyn_storage",
                          "typeString": "struct DecentraCorp.Vote storage ref[] storage ref"
                        }
                      },
                      "id": 3775,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3261:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3256:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3809,
                  "initializationExpression": {
                    "assignments": [
                      3769
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3769,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 3809,
                        "src": "3244:6:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3768,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3244:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 3771,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3253:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3244:10:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 3778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "3277:3:12",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 3777,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3769,
                        "src": "3279:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3779,
                    "nodeType": "ExpressionStatement",
                    "src": "3277:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "3239:336:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3810,
                      "name": "yea",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3761,
                      "src": "3601:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3811,
                      "name": "nay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3765,
                      "src": "3607:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3601:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3887,
                    "nodeType": "Block",
                    "src": "4338:109:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3881,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3745,
                              "src": "4403:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                "typeString": "struct DecentraCorp.Proposal storage pointer"
                              }
                            },
                            "id": 3883,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "proposalPassed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3550,
                            "src": "4403:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 3884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4422:5:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "4403:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3886,
                        "nodeType": "ExpressionStatement",
                        "src": "4403:24:12"
                      }
                    ]
                  },
                  "id": 3888,
                  "nodeType": "IfStatement",
                  "src": "3597:850:12",
                  "trueBody": {
                    "id": 3880,
                    "nodeType": "Block",
                    "src": "3613:719:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3813,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3745,
                              "src": "3703:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                "typeString": "struct DecentraCorp.Proposal storage pointer"
                              }
                            },
                            "id": 3815,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "executed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3548,
                            "src": "3703:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 3816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3716:4:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3703:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3818,
                        "nodeType": "ExpressionStatement",
                        "src": "3703:17:12"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3819,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3745,
                              "src": "3743:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                "typeString": "struct DecentraCorp.Proposal storage pointer"
                              }
                            },
                            "id": 3821,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "proposalPassed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3550,
                            "src": "3743:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 3822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3762:4:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3743:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3824,
                        "nodeType": "ExpressionStatement",
                        "src": "3743:23:12"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3825,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3745,
                              "src": "3792:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                "typeString": "struct DecentraCorp.Proposal storage pointer"
                              }
                            },
                            "id": 3826,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "PropCode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3542,
                            "src": "3792:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 3827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3806:1:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3792:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 3844,
                        "nodeType": "IfStatement",
                        "src": "3789:163:12",
                        "trueBody": {
                          "id": 3843,
                          "nodeType": "Block",
                          "src": "3809:143:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3830,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3745,
                                      "src": "3843:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                        "typeString": "struct DecentraCorp.Proposal storage pointer"
                                      }
                                    },
                                    "id": 3831,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "Address",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3540,
                                    "src": "3843:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3832,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3745,
                                      "src": "3854:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                        "typeString": "struct DecentraCorp.Proposal storage pointer"
                                      }
                                    },
                                    "id": 3833,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "Amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3544,
                                    "src": "3854:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3829,
                                  "name": "transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5408,
                                  "src": "3834:8:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) returns (bool)"
                                  }
                                },
                                "id": 3834,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3834:29:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3835,
                              "nodeType": "ExpressionStatement",
                              "src": "3834:29:12"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3837,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3745,
                                      "src": "3908:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                        "typeString": "struct DecentraCorp.Proposal storage pointer"
                                      }
                                    },
                                    "id": 3838,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "Address",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3540,
                                    "src": "3908:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3839,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3745,
                                      "src": "3919:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                        "typeString": "struct DecentraCorp.Proposal storage pointer"
                                      }
                                    },
                                    "id": 3840,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "Amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3544,
                                    "src": "3919:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3836,
                                  "name": "FundingApproved",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3538,
                                  "src": "3892:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 3841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3892:36:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3842,
                              "nodeType": "EmitStatement",
                              "src": "3887:41:12"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3845,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3745,
                              "src": "3977:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                "typeString": "struct DecentraCorp.Proposal storage pointer"
                              }
                            },
                            "id": 3846,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "PropCode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3542,
                            "src": "3977:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 3847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3991:1:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "3977:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 3857,
                        "nodeType": "IfStatement",
                        "src": "3974:101:12",
                        "trueBody": {
                          "id": 3856,
                          "nodeType": "Block",
                          "src": "3994:81:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 3849,
                                    "name": "frozenAccounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2822,
                                    "src": "4019:14:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 3852,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3850,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3745,
                                      "src": "4034:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                        "typeString": "struct DecentraCorp.Proposal storage pointer"
                                      }
                                    },
                                    "id": 3851,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "Address",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3540,
                                    "src": "4034:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4019:25:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 3853,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4047:4:12",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "4019:32:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3855,
                              "nodeType": "ExpressionStatement",
                              "src": "4019:32:12"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3858,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3745,
                              "src": "4100:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                "typeString": "struct DecentraCorp.Proposal storage pointer"
                              }
                            },
                            "id": 3859,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "PropCode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3542,
                            "src": "4100:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "33",
                            "id": 3860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4114:1:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "4100:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 3868,
                        "nodeType": "IfStatement",
                        "src": "4097:95:12",
                        "trueBody": {
                          "id": 3867,
                          "nodeType": "Block",
                          "src": "4117:75:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3863,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3745,
                                      "src": "4158:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                        "typeString": "struct DecentraCorp.Proposal storage pointer"
                                      }
                                    },
                                    "id": 3864,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "Address",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3540,
                                    "src": "4158:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3862,
                                  "name": "terminateMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3274,
                                  "src": "4142:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 3865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4142:26:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3866,
                              "nodeType": "ExpressionStatement",
                              "src": "4142:26:12"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3869,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3745,
                              "src": "4217:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                "typeString": "struct DecentraCorp.Proposal storage pointer"
                              }
                            },
                            "id": 3870,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "PropCode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3542,
                            "src": "4217:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "34",
                            "id": 3871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4231:1:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "4217:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 3879,
                        "nodeType": "IfStatement",
                        "src": "4214:99:12",
                        "trueBody": {
                          "id": 3878,
                          "nodeType": "Block",
                          "src": "4234:79:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3874,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3745,
                                      "src": "4279:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                        "typeString": "struct DecentraCorp.Proposal storage pointer"
                                      }
                                    },
                                    "id": 3875,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "Address",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3540,
                                    "src": "4279:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3873,
                                  "name": "addApprovedContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2944,
                                  "src": "4259:19:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 3876,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4259:30:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3877,
                              "nodeType": "ExpressionStatement",
                              "src": "4259:30:12"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice ideaBlockVote counts the votes and executes and Idea Proposal, adding an idea to the cryptopatent Blockchain\n@dev seperate but similiar structures will need to be implemented in the future to stream line voting on different subjects(beta)",
            "id": 3890,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeVote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3741,
                  "name": "_ProposalID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3890,
                  "src": "2949:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3740,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2949:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2948:18:12"
            },
            "returnParameters": {
              "id": 3743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2976:0:12"
            },
            "scope": 3936,
            "src": "2928:1534:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3901,
              "nodeType": "Block",
              "src": "4536:35:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3897,
                      "name": "getHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3513,
                      "src": "4551:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 3899,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3898,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3892,
                      "src": "4559:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4551:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3896,
                  "id": 3900,
                  "nodeType": "Return",
                  "src": "4544:20:12"
                }
              ]
            },
            "documentation": null,
            "id": 3902,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPropID",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3892,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3902,
                  "src": "4491:18:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3891,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4491:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4490:20:12"
            },
            "returnParameters": {
              "id": 3896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3895,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3902,
                  "src": "4531:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3894,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4531:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4530:6:12"
            },
            "scope": 3936,
            "src": "4472:99:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3913,
              "nodeType": "Block",
              "src": "4643:36:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3909,
                      "name": "propCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3517,
                      "src": "4658:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 3911,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3910,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3904,
                      "src": "4667:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4658:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3908,
                  "id": 3912,
                  "nodeType": "Return",
                  "src": "4651:21:12"
                }
              ]
            },
            "documentation": null,
            "id": 3914,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPropCode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3904,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3914,
                  "src": "4598:18:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3903,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4598:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4597:20:12"
            },
            "returnParameters": {
              "id": 3908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3907,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3914,
                  "src": "4638:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3906,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4638:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4637:6:12"
            },
            "scope": 3936,
            "src": "4577:102:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3934,
              "nodeType": "Block",
              "src": "4765:86:12",
              "statements": [
                {
                  "assignments": [
                    3924
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3924,
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 3934,
                      "src": "4773:18:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                        "typeString": "struct DecentraCorp.Proposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3923,
                        "name": "Proposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3558,
                        "src": "4773:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3928,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3925,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3520,
                      "src": "4794:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Proposal_$3558_storage_$dyn_storage",
                        "typeString": "struct DecentraCorp.Proposal storage ref[] storage ref"
                      }
                    },
                    "id": 3927,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3926,
                      "name": "_ProposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3918,
                      "src": "4804:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4794:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$3558_storage",
                      "typeString": "struct DecentraCorp.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4773:43:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3929,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3924,
                        "src": "4831:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal storage pointer"
                        }
                      },
                      "id": 3930,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "voted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3557,
                      "src": "4831:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 3932,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3931,
                      "name": "_add",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3916,
                      "src": "4839:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4831:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3922,
                  "id": 3933,
                  "nodeType": "Return",
                  "src": "4824:20:12"
                }
              ]
            },
            "documentation": null,
            "id": 3935,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkIfVoted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3916,
                  "name": "_add",
                  "nodeType": "VariableDeclaration",
                  "scope": 3935,
                  "src": "4707:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3915,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4707:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3918,
                  "name": "_ProposalID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3935,
                  "src": "4721:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3917,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4721:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4706:32:12"
            },
            "returnParameters": {
              "id": 3922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3921,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3935,
                  "src": "4759:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3920,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4759:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4758:6:12"
            },
            "scope": 3936,
            "src": "4685:166:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3937,
        "src": "52:4806:12"
      }
    ],
    "src": "0:4859:12"
  },
  "legacyAST": {
    "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/DecentraCorp/DecentraCorp.sol",
    "exportedSymbols": {
      "DecentraCorp": [
        3936
      ]
    },
    "id": 3937,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3503,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/DecentraCorp/DCMember.sol",
        "file": "./DCMember.sol",
        "id": 3504,
        "nodeType": "ImportDirective",
        "scope": 3937,
        "sourceUnit": 3502,
        "src": "25:24:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3505,
              "name": "DCMember",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3501,
              "src": "77:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DCMember_$3501",
                "typeString": "contract DCMember"
              }
            },
            "id": 3506,
            "nodeType": "InheritanceSpecifier",
            "src": "77:8:12"
          }
        ],
        "contractDependencies": [
          3078,
          3501,
          4897,
          5076,
          5326,
          5719,
          5786,
          5855,
          5918
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3936,
        "linearizedBaseContracts": [
          3936,
          3501,
          4897,
          3078,
          5786,
          5719,
          5855,
          5326,
          5076,
          5918
        ],
        "name": "DecentraCorp",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3509,
            "libraryName": {
              "contractScope": null,
              "id": 3507,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5204,
              "src": "96:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5204",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "90:27:12",
            "typeName": {
              "id": 3508,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "109:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3513,
            "name": "getHash",
            "nodeType": "VariableDeclaration",
            "scope": 3936,
            "src": "122:31:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 3512,
              "keyType": {
                "id": 3510,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "130:6:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "122:23:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueType": {
                "id": 3511,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "140:4:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3517,
            "name": "propCode",
            "nodeType": "VariableDeclaration",
            "scope": 3936,
            "src": "158:32:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 3516,
              "keyType": {
                "id": 3514,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "166:6:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "158:23:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueType": {
                "id": 3515,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "176:4:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3520,
            "name": "proposals",
            "nodeType": "VariableDeclaration",
            "scope": 3936,
            "src": "197:27:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Proposal_$3558_storage_$dyn_storage",
              "typeString": "struct DecentraCorp.Proposal[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 3518,
                "name": "Proposal",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 3558,
                "src": "197:8:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                  "typeString": "struct DecentraCorp.Proposal"
                }
              },
              "id": 3519,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "197:10:12",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Proposal_$3558_storage_$dyn_storage_ptr",
                "typeString": "struct DecentraCorp.Proposal[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3526,
            "name": "ProposalCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3522,
                  "indexed": false,
                  "name": "VoteHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3526,
                  "src": "252:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3521,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "252:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3524,
                  "indexed": false,
                  "name": "PropCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 3526,
                  "src": "269:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3523,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "251:32:12"
            },
            "src": "230:54:12"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3532,
            "name": "Voted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3528,
                  "indexed": false,
                  "name": "_voter",
                  "nodeType": "VariableDeclaration",
                  "scope": 3532,
                  "src": "300:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "300:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3530,
                  "indexed": false,
                  "name": "inSupport",
                  "nodeType": "VariableDeclaration",
                  "scope": 3532,
                  "src": "316:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3529,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "299:32:12"
            },
            "src": "288:44:12"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3538,
            "name": "FundingApproved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3534,
                  "indexed": false,
                  "name": "addToFund",
                  "nodeType": "VariableDeclaration",
                  "scope": 3538,
                  "src": "358:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "358:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3536,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3538,
                  "src": "377:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3535,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "377:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "357:32:12"
            },
            "src": "336:54:12"
          },
          {
            "canonicalName": "DecentraCorp.Proposal",
            "id": 3558,
            "members": [
              {
                "constant": false,
                "id": 3540,
                "name": "Address",
                "nodeType": "VariableDeclaration",
                "scope": 3558,
                "src": "426:15:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3539,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "426:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3542,
                "name": "PropCode",
                "nodeType": "VariableDeclaration",
                "scope": 3558,
                "src": "451:13:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3541,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "451:4:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3544,
                "name": "Amount",
                "nodeType": "VariableDeclaration",
                "scope": 3558,
                "src": "474:11:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3543,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "474:4:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3546,
                "name": "voteHash",
                "nodeType": "VariableDeclaration",
                "scope": 3558,
                "src": "495:15:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 3545,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "495:6:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3548,
                "name": "executed",
                "nodeType": "VariableDeclaration",
                "scope": 3558,
                "src": "520:13:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3547,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "520:4:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3550,
                "name": "proposalPassed",
                "nodeType": "VariableDeclaration",
                "scope": 3558,
                "src": "543:19:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3549,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "543:4:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3553,
                "name": "votes",
                "nodeType": "VariableDeclaration",
                "scope": 3558,
                "src": "572:12:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Vote_$3563_storage_$dyn_storage_ptr",
                  "typeString": "struct DecentraCorp.Vote[]"
                },
                "typeName": {
                  "baseType": {
                    "contractScope": null,
                    "id": 3551,
                    "name": "Vote",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3563,
                    "src": "572:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vote_$3563_storage_ptr",
                      "typeString": "struct DecentraCorp.Vote"
                    }
                  },
                  "id": 3552,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "572:6:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Vote_$3563_storage_$dyn_storage_ptr",
                    "typeString": "struct DecentraCorp.Vote[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3557,
                "name": "voted",
                "nodeType": "VariableDeclaration",
                "scope": 3558,
                "src": "594:31:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 3556,
                  "keyType": {
                    "id": 3554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "594:25:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 3555,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "614:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nodeType": "StructDefinition",
            "scope": 3936,
            "src": "399:233:12",
            "visibility": "public"
          },
          {
            "canonicalName": "DecentraCorp.Vote",
            "id": 3563,
            "members": [
              {
                "constant": false,
                "id": 3560,
                "name": "inSupport",
                "nodeType": "VariableDeclaration",
                "scope": 3563,
                "src": "665:14:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3559,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "665:4:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3562,
                "name": "voter",
                "nodeType": "VariableDeclaration",
                "scope": 3563,
                "src": "693:13:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3561,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "693:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Vote",
            "nodeType": "StructDefinition",
            "scope": 3936,
            "src": "639:74:12",
            "visibility": "public"
          },
          {
            "body": {
              "id": 3639,
              "nodeType": "Block",
              "src": "1420:455:12",
              "statements": [
                {
                  "assignments": [
                    3575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3575,
                      "name": "ProposalID",
                      "nodeType": "VariableDeclaration",
                      "scope": 3639,
                      "src": "1433:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3574,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1433:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3579,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 3578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1451:18:12",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3576,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3520,
                        "src": "1451:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Proposal_$3558_storage_$dyn_storage",
                          "typeString": "struct DecentraCorp.Proposal storage ref[] storage ref"
                        }
                      },
                      "id": 3577,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1451:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1433:36:12"
                },
                {
                  "assignments": [
                    3581
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3581,
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 3639,
                      "src": "1482:18:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                        "typeString": "struct DecentraCorp.Proposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3580,
                        "name": "Proposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3558,
                        "src": "1482:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3585,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3582,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3520,
                      "src": "1503:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Proposal_$3558_storage_$dyn_storage",
                        "typeString": "struct DecentraCorp.Proposal storage ref[] storage ref"
                      }
                    },
                    "id": 3584,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3583,
                      "name": "ProposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3575,
                      "src": "1513:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1503:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$3558_storage",
                      "typeString": "struct DecentraCorp.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1482:42:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3586,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3581,
                        "src": "1537:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal storage pointer"
                        }
                      },
                      "id": 3588,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "Address",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3540,
                      "src": "1537:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3589,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3565,
                      "src": "1549:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1537:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3591,
                  "nodeType": "ExpressionStatement",
                  "src": "1537:20:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3592,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3581,
                        "src": "1570:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal storage pointer"
                        }
                      },
                      "id": 3594,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "PropCode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3542,
                      "src": "1570:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3595,
                      "name": "_propCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3567,
                      "src": "1583:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1570:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3597,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:22:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3598,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3581,
                        "src": "1605:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal storage pointer"
                        }
                      },
                      "id": 3600,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voteHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3546,
                      "src": "1605:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3601,
                      "name": "_voteHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3569,
                      "src": "1618:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1605:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3603,
                  "nodeType": "ExpressionStatement",
                  "src": "1605:22:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3604,
                        "name": "getHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3513,
                        "src": "1640:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 3606,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3605,
                        "name": "_voteHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3569,
                        "src": "1648:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1640:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3607,
                      "name": "ProposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3575,
                      "src": "1661:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1640:31:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3609,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:31:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3610,
                        "name": "propCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3517,
                        "src": "1684:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 3612,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3611,
                        "name": "_voteHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3569,
                        "src": "1693:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1684:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3613,
                      "name": "_propCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3567,
                      "src": "1706:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1684:31:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3615,
                  "nodeType": "ExpressionStatement",
                  "src": "1684:31:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3616,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3581,
                        "src": "1728:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal storage pointer"
                        }
                      },
                      "id": 3618,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "Amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3544,
                      "src": "1728:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3619,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3571,
                      "src": "1739:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1728:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3621,
                  "nodeType": "ExpressionStatement",
                  "src": "1728:18:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3622,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3581,
                        "src": "1759:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal storage pointer"
                        }
                      },
                      "id": 3624,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "executed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3548,
                      "src": "1759:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 3625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1772:5:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1759:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3627,
                  "nodeType": "ExpressionStatement",
                  "src": "1759:18:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3628,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3581,
                        "src": "1790:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal storage pointer"
                        }
                      },
                      "id": 3630,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposalPassed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3550,
                      "src": "1790:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 3631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1809:5:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1790:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3633,
                  "nodeType": "ExpressionStatement",
                  "src": "1790:24:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3635,
                        "name": "_voteHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3569,
                        "src": "1848:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3636,
                        "name": "_propCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3567,
                        "src": "1859:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3634,
                      "name": "ProposalCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3526,
                      "src": "1832:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 3637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1832:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3638,
                  "nodeType": "EmitStatement",
                  "src": "1827:42:12"
                }
              ]
            },
            "documentation": "**@notice Proposal Codes are used to fire specific code. each number represents a different action*** the following are is a list of prop codes and their actions** 1. Funding Proposal: the address entered is the address receiving funding** 2. MemberShip Account Freeze Proposal: the address entered is the address to be frozen** 3. Membership Termination Proposal: the address entered is the address to be terminated** 4. Add new Approved Contract: the address entered will be approved to mint/burn NotiCoinCoin\n//more options will be added to allow for contract upgrades in the future",
            "id": 3640,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3565,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 3640,
                  "src": "1340:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1340:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3567,
                  "name": "_propCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 3640,
                  "src": "1358:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3566,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1358:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3569,
                  "name": "_voteHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3640,
                  "src": "1374:23:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3568,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3571,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3640,
                  "src": "1399:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3570,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1339:73:12"
            },
            "returnParameters": {
              "id": 3573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:0:12"
            },
            "scope": 3936,
            "src": "1316:559:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3738,
              "nodeType": "Block",
              "src": "2019:635:12",
              "statements": [
                {
                  "assignments": [
                    3650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3650,
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 3738,
                      "src": "2032:18:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                        "typeString": "struct DecentraCorp.Proposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3649,
                        "name": "Proposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3558,
                        "src": "2032:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3654,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3651,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3520,
                      "src": "2053:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Proposal_$3558_storage_$dyn_storage",
                        "typeString": "struct DecentraCorp.Proposal storage ref[] storage ref"
                      }
                    },
                    "id": 3653,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3652,
                      "name": "_ProposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3642,
                      "src": "2063:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2053:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$3558_storage",
                      "typeString": "struct DecentraCorp.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2032:43:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3656,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3650,
                              "src": "2095:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                "typeString": "struct DecentraCorp.Proposal storage pointer"
                              }
                            },
                            "id": 3657,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "voted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3557,
                            "src": "2095:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3660,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3658,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5933,
                              "src": "2103:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2103:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2095:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 3661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2118:4:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2095:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3655,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5936,
                        5937
                      ],
                      "referencedDeclaration": 5936,
                      "src": "2087:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2087:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3664,
                  "nodeType": "ExpressionStatement",
                  "src": "2087:36:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3666,
                            "name": "members",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2834,
                            "src": "2143:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3669,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3667,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5933,
                              "src": "2151:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2151:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2143:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 3670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2166:4:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2143:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3665,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5936,
                        5937
                      ],
                      "referencedDeclaration": 5936,
                      "src": "2135:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2135:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3673,
                  "nodeType": "ExpressionStatement",
                  "src": "2135:36:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3674,
                      "name": "voteID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3647,
                      "src": "2183:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2192:16:12",
                      "subExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3675,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3650,
                            "src": "2192:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                              "typeString": "struct DecentraCorp.Proposal storage pointer"
                            }
                          },
                          "id": 3676,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "votes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3553,
                          "src": "2192:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Vote_$3563_storage_$dyn_storage",
                            "typeString": "struct DecentraCorp.Vote storage ref[] storage ref"
                          }
                        },
                        "id": 3677,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2192:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2183:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3680,
                  "nodeType": "ExpressionStatement",
                  "src": "2183:25:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3681,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3650,
                          "src": "2220:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                            "typeString": "struct DecentraCorp.Proposal storage pointer"
                          }
                        },
                        "id": 3684,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3553,
                        "src": "2220:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vote_$3563_storage_$dyn_storage",
                          "typeString": "struct DecentraCorp.Vote storage ref[] storage ref"
                        }
                      },
                      "id": 3685,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3683,
                        "name": "voteID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3647,
                        "src": "2228:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2220:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vote_$3563_storage",
                        "typeString": "struct DecentraCorp.Vote storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3687,
                          "name": "supportsProposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3644,
                          "src": "2255:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3688,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5933,
                            "src": "2280:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2280:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 3686,
                        "name": "Vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3563,
                        "src": "2238:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Vote_$3563_storage_ptr_$",
                          "typeString": "type(struct DecentraCorp.Vote storage pointer)"
                        }
                      },
                      "id": 3690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "inSupport",
                        "voter"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2238:54:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vote_$3563_memory",
                        "typeString": "struct DecentraCorp.Vote memory"
                      }
                    },
                    "src": "2220:72:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vote_$3563_storage",
                      "typeString": "struct DecentraCorp.Vote storage ref"
                    }
                  },
                  "id": 3692,
                  "nodeType": "ExpressionStatement",
                  "src": "2220:72:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3693,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3650,
                          "src": "2304:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                            "typeString": "struct DecentraCorp.Proposal storage pointer"
                          }
                        },
                        "id": 3697,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "voted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3557,
                        "src": "2304:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3698,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3695,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5933,
                          "src": "2312:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2312:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2304:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2326:4:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2304:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3701,
                  "nodeType": "ExpressionStatement",
                  "src": "2304:26:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3703,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5933,
                          "src": "2353:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2353:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3705,
                        "name": "supportsProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3644,
                        "src": "2365:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3702,
                      "name": "Voted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3532,
                      "src": "2347:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 3706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2347:35:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3707,
                  "nodeType": "EmitStatement",
                  "src": "2342:40:12"
                },
                {
                  "assignments": [
                    3709
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3709,
                      "name": "tally",
                      "nodeType": "VariableDeclaration",
                      "scope": 3738,
                      "src": "2394:10:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3708,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2394:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3711,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 3710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2407:5:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2394:18:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3712,
                      "name": "memberCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2812,
                      "src": "2427:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 3713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2442:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "2427:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3727,
                    "nodeType": "Block",
                    "src": "2512:37:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3723,
                            "name": "tally",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3709,
                            "src": "2525:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 3724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2533:4:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2525:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3726,
                        "nodeType": "ExpressionStatement",
                        "src": "2525:12:12"
                      }
                    ]
                  },
                  "id": 3728,
                  "nodeType": "IfStatement",
                  "src": "2424:125:12",
                  "trueBody": {
                    "id": 3722,
                    "nodeType": "Block",
                    "src": "2444:64:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3715,
                            "name": "tally",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3709,
                            "src": "2457:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3717,
                                "name": "voteID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3647,
                                "src": "2476:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 3718,
                                "name": "memberCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2812,
                                "src": "2484:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3716,
                              "name": "set_Quorum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3065,
                              "src": "2465:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (uint256,uint256) pure returns (bool)"
                              }
                            },
                            "id": 3719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2465:31:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2457:39:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3721,
                        "nodeType": "ExpressionStatement",
                        "src": "2457:39:12"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 3729,
                    "name": "tally",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3709,
                    "src": "2563:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3735,
                  "nodeType": "IfStatement",
                  "src": "2560:61:12",
                  "trueBody": {
                    "id": 3734,
                    "nodeType": "Block",
                    "src": "2570:51:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3731,
                              "name": "_ProposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3642,
                              "src": "2596:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3730,
                            "name": "executeVote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3890,
                            "src": "2584:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 3732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2584:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3733,
                        "nodeType": "ExpressionStatement",
                        "src": "2584:24:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3736,
                    "name": "voteID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3647,
                    "src": "2639:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3648,
                  "id": 3737,
                  "nodeType": "Return",
                  "src": "2632:13:12"
                }
              ]
            },
            "documentation": null,
            "id": 3739,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3642,
                  "name": "_ProposalID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3739,
                  "src": "1906:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3641,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1906:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3644,
                  "name": "supportsProposal",
                  "nodeType": "VariableDeclaration",
                  "scope": 3739,
                  "src": "1934:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3643,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1934:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1894:69:12"
            },
            "returnParameters": {
              "id": 3648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3647,
                  "name": "voteID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3739,
                  "src": "2000:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3646,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2000:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1999:13:12"
            },
            "scope": 3936,
            "src": "1881:773:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3889,
              "nodeType": "Block",
              "src": "2976:1486:12",
              "statements": [
                {
                  "assignments": [
                    3745
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3745,
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 3889,
                      "src": "2992:18:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                        "typeString": "struct DecentraCorp.Proposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3744,
                        "name": "Proposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3558,
                        "src": "2992:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3749,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3746,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3520,
                      "src": "3013:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Proposal_$3558_storage_$dyn_storage",
                        "typeString": "struct DecentraCorp.Proposal storage ref[] storage ref"
                      }
                    },
                    "id": 3748,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3747,
                      "name": "_ProposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3741,
                      "src": "3023:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3013:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$3558_storage",
                      "typeString": "struct DecentraCorp.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2992:43:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3125:11:12",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3751,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3745,
                            "src": "3126:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                              "typeString": "struct DecentraCorp.Proposal storage pointer"
                            }
                          },
                          "id": 3752,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3548,
                          "src": "3126:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3750,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5936,
                        5937
                      ],
                      "referencedDeclaration": 5936,
                      "src": "3117:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3117:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3755,
                  "nodeType": "ExpressionStatement",
                  "src": "3117:20:12"
                },
                {
                  "assignments": [
                    3757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3757,
                      "name": "quorum",
                      "nodeType": "VariableDeclaration",
                      "scope": 3889,
                      "src": "3153:11:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3756,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3153:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3759,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 3758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3167:1:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3153:15:12"
                },
                {
                  "assignments": [
                    3761
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3761,
                      "name": "yea",
                      "nodeType": "VariableDeclaration",
                      "scope": 3889,
                      "src": "3184:8:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3760,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3184:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3763,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 3762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3195:1:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3184:12:12"
                },
                {
                  "assignments": [
                    3765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3765,
                      "name": "nay",
                      "nodeType": "VariableDeclaration",
                      "scope": 3889,
                      "src": "3212:8:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3764,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3212:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3767,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 3766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3223:1:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3212:12:12"
                },
                {
                  "body": {
                    "id": 3808,
                    "nodeType": "Block",
                    "src": "3282:293:12",
                    "statements": [
                      {
                        "assignments": [
                          3781
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3781,
                            "name": "v",
                            "nodeType": "VariableDeclaration",
                            "scope": 3808,
                            "src": "3298:14:12",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vote_$3563_storage_ptr",
                              "typeString": "struct DecentraCorp.Vote"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 3780,
                              "name": "Vote",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 3563,
                              "src": "3298:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vote_$3563_storage_ptr",
                                "typeString": "struct DecentraCorp.Vote"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 3786,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3782,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3745,
                              "src": "3315:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                "typeString": "struct DecentraCorp.Proposal storage pointer"
                              }
                            },
                            "id": 3783,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "votes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3553,
                            "src": "3315:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Vote_$3563_storage_$dyn_storage",
                              "typeString": "struct DecentraCorp.Vote storage ref[] storage ref"
                            }
                          },
                          "id": 3785,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3784,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3769,
                            "src": "3323:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3315:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vote_$3563_storage",
                            "typeString": "struct DecentraCorp.Vote storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3298:27:12"
                      },
                      {
                        "assignments": [
                          3788
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3788,
                            "name": "voteWeight",
                            "nodeType": "VariableDeclaration",
                            "scope": 3808,
                            "src": "3341:15:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3787,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3341:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 3790,
                        "initialValue": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 3789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3359:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3341:19:12"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3791,
                            "name": "quorum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3757,
                            "src": "3376:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3792,
                            "name": "voteWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3788,
                            "src": "3386:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3376:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3794,
                        "nodeType": "ExpressionStatement",
                        "src": "3376:20:12"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3795,
                            "name": "v",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3781,
                            "src": "3416:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vote_$3563_storage_ptr",
                              "typeString": "struct DecentraCorp.Vote storage pointer"
                            }
                          },
                          "id": 3796,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "inSupport",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3560,
                          "src": "3416:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3806,
                          "nodeType": "Block",
                          "src": "3492:62:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 3802,
                                  "name": "nay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3765,
                                  "src": "3511:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 3803,
                                  "name": "voteWeight",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3788,
                                  "src": "3518:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3511:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3805,
                              "nodeType": "ExpressionStatement",
                              "src": "3511:17:12"
                            }
                          ]
                        },
                        "id": 3807,
                        "nodeType": "IfStatement",
                        "src": "3412:142:12",
                        "trueBody": {
                          "id": 3801,
                          "nodeType": "Block",
                          "src": "3429:57:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3799,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 3797,
                                  "name": "yea",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3761,
                                  "src": "3447:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 3798,
                                  "name": "voteWeight",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3788,
                                  "src": "3454:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3447:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3800,
                              "nodeType": "ExpressionStatement",
                              "src": "3447:17:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3772,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3769,
                      "src": "3256:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3773,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3745,
                          "src": "3261:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                            "typeString": "struct DecentraCorp.Proposal storage pointer"
                          }
                        },
                        "id": 3774,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3553,
                        "src": "3261:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vote_$3563_storage_$dyn_storage",
                          "typeString": "struct DecentraCorp.Vote storage ref[] storage ref"
                        }
                      },
                      "id": 3775,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3261:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3256:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3809,
                  "initializationExpression": {
                    "assignments": [
                      3769
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3769,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 3809,
                        "src": "3244:6:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3768,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3244:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 3771,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3253:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3244:10:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 3778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "3277:3:12",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 3777,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3769,
                        "src": "3279:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3779,
                    "nodeType": "ExpressionStatement",
                    "src": "3277:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "3239:336:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3810,
                      "name": "yea",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3761,
                      "src": "3601:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3811,
                      "name": "nay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3765,
                      "src": "3607:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3601:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3887,
                    "nodeType": "Block",
                    "src": "4338:109:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3881,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3745,
                              "src": "4403:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                "typeString": "struct DecentraCorp.Proposal storage pointer"
                              }
                            },
                            "id": 3883,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "proposalPassed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3550,
                            "src": "4403:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 3884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4422:5:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "4403:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3886,
                        "nodeType": "ExpressionStatement",
                        "src": "4403:24:12"
                      }
                    ]
                  },
                  "id": 3888,
                  "nodeType": "IfStatement",
                  "src": "3597:850:12",
                  "trueBody": {
                    "id": 3880,
                    "nodeType": "Block",
                    "src": "3613:719:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3813,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3745,
                              "src": "3703:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                "typeString": "struct DecentraCorp.Proposal storage pointer"
                              }
                            },
                            "id": 3815,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "executed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3548,
                            "src": "3703:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 3816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3716:4:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3703:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3818,
                        "nodeType": "ExpressionStatement",
                        "src": "3703:17:12"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3819,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3745,
                              "src": "3743:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                "typeString": "struct DecentraCorp.Proposal storage pointer"
                              }
                            },
                            "id": 3821,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "proposalPassed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3550,
                            "src": "3743:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 3822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3762:4:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3743:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3824,
                        "nodeType": "ExpressionStatement",
                        "src": "3743:23:12"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3825,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3745,
                              "src": "3792:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                "typeString": "struct DecentraCorp.Proposal storage pointer"
                              }
                            },
                            "id": 3826,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "PropCode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3542,
                            "src": "3792:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 3827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3806:1:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3792:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 3844,
                        "nodeType": "IfStatement",
                        "src": "3789:163:12",
                        "trueBody": {
                          "id": 3843,
                          "nodeType": "Block",
                          "src": "3809:143:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3830,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3745,
                                      "src": "3843:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                        "typeString": "struct DecentraCorp.Proposal storage pointer"
                                      }
                                    },
                                    "id": 3831,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "Address",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3540,
                                    "src": "3843:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3832,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3745,
                                      "src": "3854:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                        "typeString": "struct DecentraCorp.Proposal storage pointer"
                                      }
                                    },
                                    "id": 3833,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "Amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3544,
                                    "src": "3854:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3829,
                                  "name": "transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5408,
                                  "src": "3834:8:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) returns (bool)"
                                  }
                                },
                                "id": 3834,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3834:29:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3835,
                              "nodeType": "ExpressionStatement",
                              "src": "3834:29:12"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3837,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3745,
                                      "src": "3908:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                        "typeString": "struct DecentraCorp.Proposal storage pointer"
                                      }
                                    },
                                    "id": 3838,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "Address",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3540,
                                    "src": "3908:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3839,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3745,
                                      "src": "3919:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                        "typeString": "struct DecentraCorp.Proposal storage pointer"
                                      }
                                    },
                                    "id": 3840,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "Amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3544,
                                    "src": "3919:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3836,
                                  "name": "FundingApproved",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3538,
                                  "src": "3892:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 3841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3892:36:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3842,
                              "nodeType": "EmitStatement",
                              "src": "3887:41:12"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3845,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3745,
                              "src": "3977:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                "typeString": "struct DecentraCorp.Proposal storage pointer"
                              }
                            },
                            "id": 3846,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "PropCode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3542,
                            "src": "3977:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 3847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3991:1:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "3977:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 3857,
                        "nodeType": "IfStatement",
                        "src": "3974:101:12",
                        "trueBody": {
                          "id": 3856,
                          "nodeType": "Block",
                          "src": "3994:81:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 3849,
                                    "name": "frozenAccounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2822,
                                    "src": "4019:14:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 3852,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3850,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3745,
                                      "src": "4034:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                        "typeString": "struct DecentraCorp.Proposal storage pointer"
                                      }
                                    },
                                    "id": 3851,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "Address",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3540,
                                    "src": "4034:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4019:25:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 3853,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4047:4:12",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "4019:32:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3855,
                              "nodeType": "ExpressionStatement",
                              "src": "4019:32:12"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3858,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3745,
                              "src": "4100:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                "typeString": "struct DecentraCorp.Proposal storage pointer"
                              }
                            },
                            "id": 3859,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "PropCode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3542,
                            "src": "4100:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "33",
                            "id": 3860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4114:1:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "4100:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 3868,
                        "nodeType": "IfStatement",
                        "src": "4097:95:12",
                        "trueBody": {
                          "id": 3867,
                          "nodeType": "Block",
                          "src": "4117:75:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3863,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3745,
                                      "src": "4158:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                        "typeString": "struct DecentraCorp.Proposal storage pointer"
                                      }
                                    },
                                    "id": 3864,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "Address",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3540,
                                    "src": "4158:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3862,
                                  "name": "terminateMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3274,
                                  "src": "4142:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 3865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4142:26:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3866,
                              "nodeType": "ExpressionStatement",
                              "src": "4142:26:12"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3869,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3745,
                              "src": "4217:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                "typeString": "struct DecentraCorp.Proposal storage pointer"
                              }
                            },
                            "id": 3870,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "PropCode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3542,
                            "src": "4217:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "34",
                            "id": 3871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4231:1:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "4217:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 3879,
                        "nodeType": "IfStatement",
                        "src": "4214:99:12",
                        "trueBody": {
                          "id": 3878,
                          "nodeType": "Block",
                          "src": "4234:79:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3874,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3745,
                                      "src": "4279:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                                        "typeString": "struct DecentraCorp.Proposal storage pointer"
                                      }
                                    },
                                    "id": 3875,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "Address",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3540,
                                    "src": "4279:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3873,
                                  "name": "addApprovedContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2944,
                                  "src": "4259:19:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 3876,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4259:30:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3877,
                              "nodeType": "ExpressionStatement",
                              "src": "4259:30:12"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice ideaBlockVote counts the votes and executes and Idea Proposal, adding an idea to the cryptopatent Blockchain\n@dev seperate but similiar structures will need to be implemented in the future to stream line voting on different subjects(beta)",
            "id": 3890,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeVote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3741,
                  "name": "_ProposalID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3890,
                  "src": "2949:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3740,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2949:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2948:18:12"
            },
            "returnParameters": {
              "id": 3743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2976:0:12"
            },
            "scope": 3936,
            "src": "2928:1534:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3901,
              "nodeType": "Block",
              "src": "4536:35:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3897,
                      "name": "getHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3513,
                      "src": "4551:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 3899,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3898,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3892,
                      "src": "4559:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4551:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3896,
                  "id": 3900,
                  "nodeType": "Return",
                  "src": "4544:20:12"
                }
              ]
            },
            "documentation": null,
            "id": 3902,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPropID",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3892,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3902,
                  "src": "4491:18:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3891,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4491:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4490:20:12"
            },
            "returnParameters": {
              "id": 3896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3895,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3902,
                  "src": "4531:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3894,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4531:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4530:6:12"
            },
            "scope": 3936,
            "src": "4472:99:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3913,
              "nodeType": "Block",
              "src": "4643:36:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3909,
                      "name": "propCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3517,
                      "src": "4658:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 3911,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3910,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3904,
                      "src": "4667:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4658:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3908,
                  "id": 3912,
                  "nodeType": "Return",
                  "src": "4651:21:12"
                }
              ]
            },
            "documentation": null,
            "id": 3914,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPropCode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3904,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3914,
                  "src": "4598:18:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3903,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4598:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4597:20:12"
            },
            "returnParameters": {
              "id": 3908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3907,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3914,
                  "src": "4638:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3906,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4638:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4637:6:12"
            },
            "scope": 3936,
            "src": "4577:102:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3934,
              "nodeType": "Block",
              "src": "4765:86:12",
              "statements": [
                {
                  "assignments": [
                    3924
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3924,
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 3934,
                      "src": "4773:18:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                        "typeString": "struct DecentraCorp.Proposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3923,
                        "name": "Proposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3558,
                        "src": "4773:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3928,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3925,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3520,
                      "src": "4794:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Proposal_$3558_storage_$dyn_storage",
                        "typeString": "struct DecentraCorp.Proposal storage ref[] storage ref"
                      }
                    },
                    "id": 3927,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3926,
                      "name": "_ProposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3918,
                      "src": "4804:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4794:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$3558_storage",
                      "typeString": "struct DecentraCorp.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4773:43:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3929,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3924,
                        "src": "4831:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$3558_storage_ptr",
                          "typeString": "struct DecentraCorp.Proposal storage pointer"
                        }
                      },
                      "id": 3930,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "voted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3557,
                      "src": "4831:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 3932,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3931,
                      "name": "_add",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3916,
                      "src": "4839:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4831:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3922,
                  "id": 3933,
                  "nodeType": "Return",
                  "src": "4824:20:12"
                }
              ]
            },
            "documentation": null,
            "id": 3935,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkIfVoted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3916,
                  "name": "_add",
                  "nodeType": "VariableDeclaration",
                  "scope": 3935,
                  "src": "4707:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3915,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4707:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3918,
                  "name": "_ProposalID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3935,
                  "src": "4721:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3917,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4721:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4706:32:12"
            },
            "returnParameters": {
              "id": 3922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3921,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3935,
                  "src": "4759:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3920,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4759:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4758:6:12"
            },
            "scope": 3936,
            "src": "4685:166:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3937,
        "src": "52:4806:12"
      }
    ],
    "src": "0:4859:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "3636": {
      "links": {},
      "events": {},
      "address": "0xda11aBEe5A9000FdF8a67CE5b4C421aA10EE5e1B",
      "updated_at": 1567789640865
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-09-13T20:26:25.320Z",
  "devdoc": {
    "methods": {
      "_addMember(address,string)": {
        "details": "addMember takes in an address _mem, sets its membership to true and increments their rank by one"
      },
      "addApprovedContract(address)": {
        "details": "adds contract to list of approved calling contracts"
      },
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "A uint256 representing the amount owned by the passed address."
      },
      "buyMembership(address,address,string,string)": {
        "details": "mints the user 1000 NTC if member is one of the first 100"
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowances[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "getMemberCount()": {
        "details": "getMemberCount is for front end and internal use"
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowances[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "initialize(address)": {
        "details": "The Ownable constructor sets the original `owner` of the contract to the sender account."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "name()": {
        "return": "the name of the token."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token to a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "_addMember(address,string)": {
        "notice": "addMember function is an internal function for adding a member to decentracorp"
      },
      "buyMembership(address,address,string,string)": {
        "notice": "buyMembership function allows for the purchase of a membership for 6 months after official launch."
      },
      "createProposal(address,uint256,string,uint256)": {
        "notice": "Proposal Codes are used to fire specific code. each number represents a different action*** the following are is a list of prop codes and their actions** 1. Funding Proposal: the address entered is the address receiving funding** 2. MemberShip Account Freeze Proposal: the address entered is the address to be frozen** 3. Membership Termination Proposal: the address entered is the address to be terminated** 4. Add new Approved Contract: the address entered will be approved to mint/burn NotiCoinCoin //more options will be added to allow for contract upgrades in the future"
      },
      "getMemberCount()": {
        "notice": "getMemberCount function returns total membercount"
      },
      "initialize()": {
        "notice": "constructor sets up NotiCoin address through truffle wizardry"
      },
      "proxyNTCBurn(address,uint256)": {
        "notice": "proxyBurn allows an approved address to burn NotiCoin"
      },
      "proxyNTCMint(address,uint256)": {
        "notice": "proxyMint allows an approved address to mint NotiCoin"
      },
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}