{
  "contractName": "RepBlockLogic",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "numerator",
          "type": "uint256"
        },
        {
          "name": "denominator",
          "type": "uint256"
        },
        {
          "name": "precision",
          "type": "uint256"
        }
      ],
      "name": "percent",
      "outputs": [
        {
          "name": "quotient",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "hash",
          "type": "string"
        }
      ],
      "name": "getPropID",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "localMiningtimeTracker",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ideaProposalID",
          "type": "uint256"
        },
        {
          "name": "supportsProposal",
          "type": "bool"
        }
      ],
      "name": "ideaVote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ideaProposals",
      "outputs": [
        {
          "name": "IdeaIPFS",
          "type": "string"
        },
        {
          "name": "IdeaBlock",
          "type": "bool"
        },
        {
          "name": "executed",
          "type": "bool"
        },
        {
          "name": "globalUseBlockAmount",
          "type": "uint256"
        },
        {
          "name": "royalty",
          "type": "uint256"
        },
        {
          "name": "miningTime",
          "type": "uint256"
        },
        {
          "name": "stakeAmount",
          "type": "uint256"
        },
        {
          "name": "levelRequirement",
          "type": "uint256"
        },
        {
          "name": "inventorAddress",
          "type": "address"
        },
        {
          "name": "inventionAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_mem",
          "type": "address"
        }
      ],
      "name": "getOwnedIB",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ideaBlockReward",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "numOfvotes",
          "type": "uint256"
        },
        {
          "name": "numOfmem",
          "type": "uint256"
        }
      ],
      "name": "setVoteNumberQuorum",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalBlockHalfTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "repOwnes",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_add",
          "type": "address"
        },
        {
          "name": "_ideaProposalID",
          "type": "uint256"
        }
      ],
      "name": "checkIfVotedIdea",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "IdeaAddToId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ideaIPFS",
          "type": "string"
        },
        {
          "name": "_globalUseBlockAmount",
          "type": "uint256"
        },
        {
          "name": "_miningTime",
          "type": "uint256"
        },
        {
          "name": "_royalty",
          "type": "uint256"
        },
        {
          "name": "_stakeAmount",
          "type": "uint256"
        },
        {
          "name": "_levelRequirement",
          "type": "uint256"
        },
        {
          "name": "_inventor",
          "type": "address"
        },
        {
          "name": "_invention",
          "type": "address"
        }
      ],
      "name": "proposeIdea",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "repInfo",
      "outputs": [
        {
          "name": "BlockReward",
          "type": "uint256"
        },
        {
          "name": "IdeaID",
          "type": "uint256"
        },
        {
          "name": "Royalty",
          "type": "uint256"
        },
        {
          "name": "InventorsAddress",
          "type": "address"
        },
        {
          "name": "ReplicationAddress",
          "type": "address"
        },
        {
          "name": "ReplicationMember",
          "type": "address"
        },
        {
          "name": "OwnersAddress",
          "type": "address"
        },
        {
          "name": "DeviceLockHash",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalUseBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "weightTracker",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        },
        {
          "name": "_ideaProposalID",
          "type": "uint256"
        }
      ],
      "name": "transferIdeaBlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "localWeightTracker",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "numOfvotes",
          "type": "uint256"
        },
        {
          "name": "numOfmem",
          "type": "uint256"
        }
      ],
      "name": "setVoteQuorum",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "replications",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DCPoA",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ideaUpgradeProposals",
      "outputs": [
        {
          "name": "uIdeaIPFS",
          "type": "string"
        },
        {
          "name": "uexecuted",
          "type": "bool"
        },
        {
          "name": "uglobalUseBlockAmount",
          "type": "uint256"
        },
        {
          "name": "uroyalty",
          "type": "uint256"
        },
        {
          "name": "uminingTime",
          "type": "uint256"
        },
        {
          "name": "ustakeAmount",
          "type": "uint256"
        },
        {
          "name": "ulevelRequirement",
          "type": "uint256"
        },
        {
          "name": "uinventorAddress",
          "type": "address"
        },
        {
          "name": "uinventionAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ideaRepCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "Validators",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalIdeaPropCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "IPFS",
          "type": "string"
        }
      ],
      "name": "IdeaProposed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "member",
          "type": "address"
        }
      ],
      "name": "NewMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "IPFS",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "Inventor",
          "type": "address"
        }
      ],
      "name": "IdeaApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_voter",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "inSupport",
          "type": "bool"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_repAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "repOwner",
          "type": "address"
        }
      ],
      "name": "NewReplication",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "repAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "reOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "repWeight",
          "type": "uint256"
        }
      ],
      "name": "LocalUseWeight",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "repAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "reOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "ideaId",
          "type": "uint256"
        }
      ],
      "name": "GlobalUseBlock",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ideaId",
          "type": "uint256"
        },
        {
          "name": "_repAdd",
          "type": "address"
        },
        {
          "name": "_repOwner",
          "type": "address"
        },
        {
          "name": "_userId",
          "type": "string"
        },
        {
          "name": "_DLhash",
          "type": "string"
        }
      ],
      "name": "generateReplicationBlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"numerator\",\"type\":\"uint256\"},{\"name\":\"denominator\",\"type\":\"uint256\"},{\"name\":\"precision\",\"type\":\"uint256\"}],\"name\":\"percent\",\"outputs\":[{\"name\":\"quotient\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"getPropID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"localMiningtimeTracker\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ideaProposalID\",\"type\":\"uint256\"},{\"name\":\"supportsProposal\",\"type\":\"bool\"}],\"name\":\"ideaVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ideaProposals\",\"outputs\":[{\"name\":\"IdeaIPFS\",\"type\":\"string\"},{\"name\":\"IdeaBlock\",\"type\":\"bool\"},{\"name\":\"executed\",\"type\":\"bool\"},{\"name\":\"globalUseBlockAmount\",\"type\":\"uint256\"},{\"name\":\"royalty\",\"type\":\"uint256\"},{\"name\":\"miningTime\",\"type\":\"uint256\"},{\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"name\":\"levelRequirement\",\"type\":\"uint256\"},{\"name\":\"inventorAddress\",\"type\":\"address\"},{\"name\":\"inventionAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_mem\",\"type\":\"address\"}],\"name\":\"getOwnedIB\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ideaBlockReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"numOfvotes\",\"type\":\"uint256\"},{\"name\":\"numOfmem\",\"type\":\"uint256\"}],\"name\":\"setVoteNumberQuorum\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"globalBlockHalfTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"repOwnes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_add\",\"type\":\"address\"},{\"name\":\"_ideaProposalID\",\"type\":\"uint256\"}],\"name\":\"checkIfVotedIdea\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"IdeaAddToId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ideaIPFS\",\"type\":\"string\"},{\"name\":\"_globalUseBlockAmount\",\"type\":\"uint256\"},{\"name\":\"_miningTime\",\"type\":\"uint256\"},{\"name\":\"_royalty\",\"type\":\"uint256\"},{\"name\":\"_stakeAmount\",\"type\":\"uint256\"},{\"name\":\"_levelRequirement\",\"type\":\"uint256\"},{\"name\":\"_inventor\",\"type\":\"address\"},{\"name\":\"_invention\",\"type\":\"address\"}],\"name\":\"proposeIdea\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"repInfo\",\"outputs\":[{\"name\":\"BlockReward\",\"type\":\"uint256\"},{\"name\":\"IdeaID\",\"type\":\"uint256\"},{\"name\":\"Royalty\",\"type\":\"uint256\"},{\"name\":\"InventorsAddress\",\"type\":\"address\"},{\"name\":\"ReplicationAddress\",\"type\":\"address\"},{\"name\":\"ReplicationMember\",\"type\":\"address\"},{\"name\":\"OwnersAddress\",\"type\":\"address\"},{\"name\":\"DeviceLockHash\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"globalUseBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"weightTracker\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"},{\"name\":\"_ideaProposalID\",\"type\":\"uint256\"}],\"name\":\"transferIdeaBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ideaId\",\"type\":\"uint256\"},{\"name\":\"_repAdd\",\"type\":\"address\"},{\"name\":\"_repOwner\",\"type\":\"address\"},{\"name\":\"_userId\",\"type\":\"string\"},{\"name\":\"_DLhash\",\"type\":\"string\"}],\"name\":\"generateReplicationBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"localWeightTracker\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"numOfvotes\",\"type\":\"uint256\"},{\"name\":\"numOfmem\",\"type\":\"uint256\"}],\"name\":\"setVoteQuorum\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"replications\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DCPoA\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ideaUpgradeProposals\",\"outputs\":[{\"name\":\"uIdeaIPFS\",\"type\":\"string\"},{\"name\":\"uexecuted\",\"type\":\"bool\"},{\"name\":\"uglobalUseBlockAmount\",\"type\":\"uint256\"},{\"name\":\"uroyalty\",\"type\":\"uint256\"},{\"name\":\"uminingTime\",\"type\":\"uint256\"},{\"name\":\"ustakeAmount\",\"type\":\"uint256\"},{\"name\":\"ulevelRequirement\",\"type\":\"uint256\"},{\"name\":\"uinventorAddress\",\"type\":\"address\"},{\"name\":\"uinventionAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ideaRepCounter\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Validators\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"globalIdeaPropCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"IPFS\",\"type\":\"string\"}],\"name\":\"IdeaProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"member\",\"type\":\"address\"}],\"name\":\"NewMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"IPFS\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"Inventor\",\"type\":\"address\"}],\"name\":\"IdeaApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_voter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"inSupport\",\"type\":\"bool\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_repAdd\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"repOwner\",\"type\":\"address\"}],\"name\":\"NewReplication\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"repAdd\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"reOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"repWeight\",\"type\":\"uint256\"}],\"name\":\"LocalUseWeight\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"repAdd\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"reOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ideaId\",\"type\":\"uint256\"}],\"name\":\"GlobalUseBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"generateReplicationBlock(uint256,address,address,string,string)\":{\"details\":\"this requires the replicator has enough Notio to meet the stake amount and burns it from existenceit also adds the replicator as a member of DecentraCorpfinally, this contract calls the Proof of Replication Ownership contract and mints a PoRO token to the msg.sender\"},\"getPropID(string)\":{\"details\":\"getPropID is made for easier front end interaction\"},\"initialize(address)\":{\"details\":\"The Ownable constructor sets the original `owner` of the contract to the sender account.\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"percent(uint256,uint256,uint256)\":{\"details\":\"quorum is set to 60%\"},\"proposeIdea(string,uint256,uint256,uint256,uint256,uint256,address,address)\":{\"details\":\"the struct for this is set in interface.solidityidea proposals are put up for community approval\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"generateReplicationBlock(uint256,address,address,string,string)\":{\"notice\":\"generateReplicationBlock is used to generate a replication block when someone sucessfully replicates an Idea\"},\"getPropID(string)\":{\"notice\":\"getPropID function allows one to rerieve a proposal ID by its ipfs hash\"},\"ideaVote(uint256,bool)\":{\"notice\":\"vote is a member only function which allows DecentraCorp members to vote on proposalPassed\"},\"percent(uint256,uint256,uint256)\":{\"notice\":\"set_Quorum is an internal function used by proposal vote counts to see if the community approves\"},\"proposeIdea(string,uint256,uint256,uint256,uint256,uint256,address,address)\":{\"notice\":\"proposeIdea is used to allow ANYONE to petition the community for idea approval\"},\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/RepBlockLogic.sol\":\"RepBlockLogic\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/IdeaBlockLogic.sol\":{\"keccak256\":\"0xfa47cbc1e4b7ac50dc236795cd6efbc654ab9daef7cbea60f77fa76e41107085\",\"urls\":[\"bzzr://3c3bae021e27d298f40fe1ea2cd4cecce53d7917c6b8462803f4f69718254373\"]},\"/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/RepBlockLogic.sol\":{\"keccak256\":\"0xa4041a7f4be49406bc01dd4588172aa26e17480b21403ace1177c328ddeffaa8\",\"urls\":[\"bzzr://f9f96b35fcb86172f889eea7c42725d8f9ede8e5ae49c1490117e97cea736092\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0d4306da5305cb78f09c70c18ec86dbc66f22fa5ade90edc20e1ab88e16d4d10\",\"urls\":[\"bzzr://47885dccac32ee543284e93f21a5f62c499076b04d01b12ff67aefffbbdcbd34\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xe96d36a781eb7ce39e70936f7da6591356199ca7e46b2bf6ea0c87b2ea84e0ab\",\"urls\":[\"bzzr://caf23f5ace762c5f52ddf315ee9c6489c662061cf12d2e2d693e8e28ff2b27e3\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzzr://e45c5a995f57637b2300a376647ee345cc9cb30ee1984735091fcd4b10ff3500\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e45760003560e01c8063758249741161010f578063cec58644116100a2578063f2fde38b11610071578063f2fde38b14610f84578063f54a012914610fc8578063f69197741461100a578063f7e1e4f014611054576101e4565b8063cec5864414610d53578063d436b5e914610da3578063e026daa114610dff578063ee01309614610e49576101e4565b80638f32d59b116100de5780638f32d59b14610af9578063aa59fea414610b1b578063c4d66de814610cb7578063ce87d3ee14610cfb576101e4565b80637582497414610a0157806381cbb67714610a1f5780638da5cb5b14610a615780638da9c0b614610aab576101e4565b80632240d03b116101875780634f214e84116101565780634f214e84146106d3578063649298b41461072b5780636849e79514610859578063715018a6146109f7576101e4565b80632240d03b1461059d57806328a6e47c146105ed5780632e858cce1461060b5780634e6a36301461066d576101e4565b806314111141116101c357806314111141146103665780631855efa6146103a05780631ad8a201146104e65780631ddc883b1461057f576101e4565b80622c1a9e146101e957806310734e431461023f57806311e658441461030e575b600080fd5b610229600480360360608110156101ff57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050611072565b6040518082815260200191505060405180910390f35b6102f86004803603602081101561025557600080fd5b810190808035906020019064010000000081111561027257600080fd5b82018360208201111561028457600080fd5b803590602001918460018302840111640100000000831117156102a657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506110a7565b6040518082815260200191505060405180910390f35b6103506004803603602081101561032457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061111a565b6040518082815260200191505060405180910390f35b61039e6004803603604081101561037c57600080fd5b8101908080359060200190929190803515159060200190929190505050611132565b005b6103cc600480360360208110156103b657600080fd5b81019080803590602001909291905050506115d7565b60405180806020018b1515151581526020018a1515151581526020018981526020018881526020018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182810382528c818151815260200191508051906020019080838360005b838110156104a2578082015181840152602081019050610487565b50505050905090810190601f1680156104cf5780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b610528600480360360208110156104fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061171d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561056b578082015181840152602081019050610550565b505050509050019250505060405180910390f35b6105876117b4565b6040518082815260200191505060405180910390f35b6105d3600480360360408110156105b357600080fd5b8101908080359060200190929190803590602001909291905050506117ba565b604051808215151515815260200191505060405180910390f35b6105f56117e9565b6040518082815260200191505060405180910390f35b6106576004803603604081101561062157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117ef565b6040518082815260200191505060405180910390f35b6106b96004803603604081101561068357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611814565b604051808215151515815260200191505060405180910390f35b610715600480360360208110156106e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611884565b6040518082815260200191505060405180910390f35b610857600480360361010081101561074257600080fd5b810190808035906020019064010000000081111561075f57600080fd5b82018360208201111561077157600080fd5b8035906020019184600183028401116401000000008311171561079357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061189c565b005b61089b6004803603602081101561086f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611af6565b604051808981526020018881526020018781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156109b557808201518184015260208101905061099a565b50505050905090810190601f1680156109e25780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b6109ff611c56565b005b610a09611d28565b6040518082815260200191505060405180910390f35b610a4b60048036036020811015610a3557600080fd5b8101908080359060200190929190505050611d2e565b6040518082815260200191505060405180910390f35b610a69611d46565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610af760048036036040811015610ac157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611d70565b005b610b01611e2b565b604051808215151515815260200191505060405180910390f35b610cb5600480360360a0811015610b3157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610b9857600080fd5b820183602082011115610baa57600080fd5b80359060200191846001830284011164010000000083111715610bcc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610c2f57600080fd5b820183602082011115610c4157600080fd5b80359060200191846001830284011164010000000083111715610c6357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611e8a565b005b610cf960048036036020811015610ccd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127ab565b005b610d3d60048036036020811015610d1157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612969565b6040518082815260200191505060405180910390f35b610d8960048036036040811015610d6957600080fd5b810190808035906020019092919080359060200190929190505050612981565b604051808215151515815260200191505060405180910390f35b610de560048036036020811015610db957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506129b0565b604051808215151515815260200191505060405180910390f35b610e076129d0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610e7560048036036020811015610e5f57600080fd5b81019080803590602001909291905050506129f6565b60405180806020018a1515151581526020018981526020018881526020018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182810382528b818151815260200191508051906020019080838360005b83811015610f41578082015181840152602081019050610f26565b50505050905090810190601f168015610f6e5780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b610fc660048036036020811015610f9a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b29565b005b610ff460048036036020811015610fde57600080fd5b8101908080359060200190929190505050612b46565b6040518082815260200191505060405180910390f35b611012612b5e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61105c612b84565b6040518082815260200191505060405180910390f35b60008060018301600a0a850290506000600a600586848161108f57fe5b04018161109857fe5b04905080925050509392505050565b60006076826040518082805190602001908083835b602083106110df57805182526020820191506020810190506020830392506110bc565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020549050919050565b60726020528060005260406000206000915090505481565b60011515606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aaa746bb336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156111d557600080fd5b505afa1580156111e9573d6000803e3d6000fd5b505050506040513d60208110156111ff57600080fd5b810190808051906020019092919050505015151461121c57600080fd5b6000606d600084815260200190815260200160002090506001151581600a0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141561129357600080fd5b600115158160010160019054906101000a900460ff16151514156112b657600080fd5b60008160090180548091906001016112ce919061329c565b9050604051806040016040528084151581526020013373ffffffffffffffffffffffffffffffffffffffff1681525082600901828154811061130c57fe5b9060005260206000200160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600182600a0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634777e8ea336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561147b57600080fd5b505af115801561148f573d6000803e3d6000fd5b505050507f8eb81cb806dbb3d8a2f94981614331a55dfd90e06a42fdc362ca3ca96981d92f3384604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663997072f76040518163ffffffff1660e01b815260040160206040518083038186803b15801561156c57600080fd5b505afa158015611580573d6000803e3d6000fd5b505050506040513d602081101561159657600080fd5b8101908080519060200190929190505050905060006115bc846009018054905083612981565b905080156115cf576115ce8683612b8a565b5b505050505050565b606d602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116835780601f1061165857610100808354040283529160200191611683565b820191906000526020600020905b81548152906001019060200180831161166657829003601f168201915b5050505050908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16908060020154908060030154908060040154908060050154908060060154908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508a565b6060607760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156117a857602002820191906000526020600020905b815481526020019060010190808311611794575b50505050509050919050565b60695481565b6000806117c984846002611072565b9050603c81106117dd5760019150506117e3565b60009150505b92915050565b60685481565b6075602052816000526040600020602052806000526040600020600091509150505481565b600080606d6000848152602001908152602001600020905080600a0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b606c6020528060005260406000206000915090505481565b606a60008154809291906001019190505550606a546076896040518082805190602001908083835b602083106118e757805182526020820191506020810190506020830392506118c4565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902081905550600060648689028161192c57fe5b0490506000606d6000606a5481526020019081526020016000209050898160000190805190602001906119609291906132c8565b5060008160010160006101000a81548160ff02191690831515021790555060008160010160016101000a81548160ff021916908315150217905550888160020181905550818160030181905550858160050181905550848160060181905550878160040181905550838160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f544a88757adcb29711e2e12a617fb44221880d5013615cf2dbbdb37f5d5059738a6040518080602001828103825283818151815260200191508051906020019080838360005b83811015611ab0578082015181840152602081019050611a95565b50505050905090810190601f168015611add5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150505050505050505050565b60746020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806007018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c4c5780601f10611c2157610100808354040283529160200191611c4c565b820191906000526020600020905b815481529060010190602001808311611c2f57829003601f168201915b5050505050905088565b611c5e611e2b565b611c6757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b606b5481565b606f6020528060005260406000206000915090505481565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606d600083815260200190815260200160002090508060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611de357600080fd5b828160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e6e61314b565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dc8e79fb846040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611f1a578082015181840152602081019050611eff565b50505050905090810190601f168015611f475780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015611f6457600080fd5b505afa158015611f78573d6000803e3d6000fd5b505050506040513d6020811015611f8e57600080fd5b810190808051906020019092919050505090506000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663817c8966836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561204257600080fd5b505afa158015612056573d6000803e3d6000fd5b505050506040513d602081101561206c57600080fd5b810190808051906020019092919050505090506000606d60008981526020019081526020016000209050606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aaa746bb846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561213557600080fd5b505afa158015612149573d6000803e3d6000fd5b505050506040513d602081101561215f57600080fd5b810190808051906020019092919050505061217957600080fd5b806006015482101561218a57600080fd5b8060010160009054906101000a900460ff166121a557600080fd5b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c812a6018483600501546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561225257600080fd5b505af1158015612266573d6000803e3d6000fd5b5050505060008160030154826002015403905060008260070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000607460008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508281600001819055508a816001018190555083600301548160020181905550818160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550898160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550858160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550888160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550868160070190805190602001906124289291906132c8565b50600073ffffffffffffffffffffffffffffffffffffffff168160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156124c657858160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b607160008c8152602001908152602001600020600081548092919060010191905055607160008d8152602001908152602001600020819055506001607360008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550607560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c8152602001908152602001600020600081548092919060010191905055607560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d815260200190815260200160002081905550606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634777e8ea876040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156126ab57600080fd5b505af11580156126bf573d6000803e3d6000fd5b5050505042607260008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f5f3846e5f661cdab5e659252fcf86d485b1390b32b8445afbc165881296513338a87604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050505050505050505050565b600060019054906101000a900460ff16806127ca57506127c9613153565b5b806127e157506000809054906101000a900460ff16155b612836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806133c8602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612886576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380156129655760008060016101000a81548160ff0219169083151502179055505b5050565b60706020528060005260406000206000915090505481565b60008061299084846002611072565b9050605081106129a45760019150506129aa565b60009150505b92915050565b60736020528060005260406000206000915054906101000a900460ff1681565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606e602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612aa25780601f10612a7757610100808354040283529160200191612aa2565b820191906000526020600020905b815481529060010190602001808311612a8557829003601f168201915b5050505050908060010160009054906101000a900460ff16908060020154908060030154908060040154908060050154908060060154908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905089565b612b31611e2b565b612b3a57600080fd5b612b4381613164565b50565b60716020528060005260406000206000915090505481565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606a5481565b6000606d60008481526020019081526020016000209050600080905060008090505b8260090180549050811015612c02576000836009018281548110612bcc57fe5b9060005260206000200190508060000160009054906101000a900460ff1615612bf6576001830192505b50806001019050612bac565b506000612c0f82856117ba565b905080156131095760018360010160006101000a81548160ff02191690831515021790555060018360010160016101000a81548160ff02191690831515021790555084606c60008560080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612cc161325e565b50606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634d238c8e8460080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015612d8757600080fd5b505af1158015612d9b573d6000803e3d6000fd5b50505050606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636326e4ce8460070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166069546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015612e6e57600080fd5b505af1158015612e82573d6000803e3d6000fd5b50505050606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634777e8ea8460070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015612f4b57600080fd5b505af1158015612f5f573d6000803e3d6000fd5b50505050607760008460070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208590806001815401808255809150509060018203906000526020600020016000909192909190915055507f8e83e1ec5969ae12ba675f003533b12076070b84710d8e23b9d1aee5b48b02e1836000018460070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156130f55780601f106130ca576101008083540402835291602001916130f5565b820191906000526020600020905b8154815290600101906020018083116130d857829003601f168201915b5050935050505060405180910390a1613144565b60008360010160016101000a81548160ff02191690831515021790555060018360010160006101000a81548160ff0219169083151502179055505b5050505050565b600033905090565b600080303b90506000811491505090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561319e57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006305a48fba6068540142106132935760026069548161327b57fe5b04606981905550426068819055506069549050613299565b60695490505b90565b8154818355818111156132c3578183600052602060002091820191016132c29190613348565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061330957805160ff1916838001178555613337565b82800160010185558215613337579182015b8281111561333657825182559160200191906001019061331b565b5b50905061334491906133a2565b5090565b61339f91905b8082111561339b57600080820160006101000a81549060ff02191690556000820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060010161334e565b5090565b90565b6133c491905b808211156133c05760008160009055506001016133a8565b5090565b9056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a165627a7a723058200e92685ee1e0b8c0000ab47f51c6a9393c761ac7abfc1a428cffd35bd7dcee080029",
  "sourceMap": "58:2428:4:-;;;;;;;;;",
  "deployedSourceMap": "58:2428:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;58:2428:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6259:397:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6259:397:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12042:121;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12042:121:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;12042:121:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12042:121:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;12042:121:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;12042:121:3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2695:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2695:54:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7536:1915;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7536:1915:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2165:50;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2165:50:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2165:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12173:129;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12173:129:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12173:129:3;;;;;;;;;;;;;;;;;1889:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7019:379;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7019:379:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1854:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2855:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2855:57:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11664:226;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11664:226:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2118:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2118:43:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4734:897;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4734:897:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4734:897:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4734:897:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4734:897:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4734:897:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2801:50;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2801:50:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2801:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:137:17;;;:::i;:::-;;1955:26:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2287:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2287:42:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;804:77:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12312:271:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12312:271:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1124:92:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;526:1957:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;526:1957:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;526:1957:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;526:1957:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;526:1957:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;526:1957:4;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;526:1957:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;526:1957:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;526:1957:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;526:1957:4;;;;;;;;;;;;;;;:::i;:::-;;599:142:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;599:142:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;2333:50:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2333:50:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6666:343;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6666:343:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2753:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2753:44:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1613:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2219:64;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2219:64:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2219:64:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1878:107:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1878:107:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;2648:43:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2648:43:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1642:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1920:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6259:397;6346:13;6434:15;6482:1;6472:9;:11;6465:2;:19;6453:9;:31;6434:50;;6547:14;6600:2;6595:1;6580:11;6567:10;:24;;;;;;6566:30;6565:37;;;;;;6547:55;;6629:9;6620:19;;;;6259:397;;;;;:::o;12042:121::-;12101:4;12133:7;12141:4;12133:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;12133:13:3;;;;;;;;;;;;;;;;;;;;;;12126:20;;12042:121;;;:::o;2695:54::-;;;;;;;;;;;;;;;;;:::o;7536:1915::-;7749:4;7713:40;;:5;;;;;;;;;;;:20;;;7734:10;7713:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7713:32:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7713:32:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7713:32:3;;;;;;;;;;;;;;;;:40;;;7705:49;;;;;;7776:22;7801:13;:30;7815:15;7801:30;;;;;;;;;;;7776:55;;7936:4;7913:27;;:1;:7;;:19;7921:10;7913:19;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;;7905:36;;;;;;8067:4;8053:18;;:1;:10;;;;;;;;;;;;:18;;;;8045:27;;;;;;8160:11;8174:1;:7;;:16;;;;;;;;;;;:::i;:::-;8160:30;;8313:54;;;;;;;;8330:16;8313:54;;;;;;8355:10;8313:54;;;;;8295:1;:7;;8303:6;8295:15;;;;;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8513:4;8491:1;:7;;:19;8499:10;8491:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;8606:5;;;;;;;;;;;:20;;;8627:10;8606:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8606:32:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8606:32:3;;;;8724:35;8730:10;8742:16;8724:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8819:14;8836:5;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8836:22:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8836:22:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8836:22:3;;;;;;;;;;;;;;;;8819:39;;8943:10;8956:40;8970:1;:7;;:14;;;;8986:9;8956:13;:40::i;:::-;8943:53;;9233:5;9230:191;;;9276:41;9290:15;9307:9;9276:13;:41::i;:::-;9230:191;7536:1915;;;;;;:::o;2165:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12173:129::-;12227:13;12264:15;:21;12280:4;12264:21;;;;;;;;;;;;;;;12257:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12173:129;;;:::o;1889:27::-;;;;:::o;7019:379::-;7100:4;7126:19;7148:33;7156:10;7168:8;7178:1;7148:7;:33::i;:::-;7126:55;;7225:2;7207:14;:20;7204:168;;7265:4;7258:11;;;;;7204:168;7337:5;7330:12;;;7019:379;;;;;:::o;1854:31::-;;;;:::o;2855:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11664:226::-;11746:4;11774:22;11799:13;:30;11813:15;11799:30;;;;;;;;;;;11774:55;;11858:1;:7;;:13;11866:4;11858:13;;;;;;;;;;;;;;;;;;;;;;;;;11851:20;;;11664:226;;;;:::o;2118:43::-;;;;;;;;;;;;;;;;;:::o;4734:897::-;4978:19;;:21;;;;;;;;;;;;;5033:19;;5012:7;5020:9;5012:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5012:18:3;;;;;;;;;;;;;;;;;;;;;:40;;;;5065:12;5115:3;5104:8;5080:21;:32;:38;;;;;;5065:53;;5131:22;5156:13;:34;5170:19;;5156:34;;;;;;;;;;;5131:59;;5215:9;5202:1;:10;;:22;;;;;;;;;;;;:::i;:::-;;5250:5;5236:1;:11;;;:19;;;;;;;;;;;;;;;;;;5280:5;5267:1;:10;;;:18;;;;;;;;;;;;;;;;;;5322:21;5297:1;:22;;:46;;;;5367:7;5355:1;:9;;:19;;;;5402:12;5386:1;:13;;:28;;;;5447:17;5426:1;:18;;:38;;;;5491:11;5476:1;:12;;:26;;;;5534:9;5514:1;:17;;;:29;;;;;;;;;;;;;;;;;;5576:10;5555:1;:18;;;:31;;;;;;;;;;;;;;;;;;5603:23;5616:9;5603:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5603:23:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4734:897;;;;;;;;;;:::o;2801:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1570:137:17:-;1008:9;:7;:9::i;:::-;1000:18;;;;;;1668:1;1631:40;;1652:6;;;;;;;;;;;1631:40;;;;;;;;;;;;1698:1;1681:6;;:19;;;;;;;;;;;;;;;;;;1570:137::o;1955:26:3:-;;;;:::o;2287:42::-;;;;;;;;;;;;;;;;;:::o;804:77:17:-;842:7;868:6;;;;;;;;;;;861:13;;804:77;:::o;12312:271:3:-;12406:22;12431:13;:30;12445:15;12431:30;;;;;;;;;;;12406:55;;12501:1;:17;;;;;;;;;;;;12487:31;;:10;:31;;;12479:40;;;;;;12557:9;12537:1;:17;;;:29;;;;;;;;;;;;;;;;;;12312:271;;;:::o;1124:92:17:-;1164:4;1203:6;;;;;;;;;;;1187:22;;:12;:10;:12::i;:::-;:22;;;1180:29;;1124:92;:::o;526:1957:4:-;670:14;687:5;;;;;;;;;;;:20;;;708:7;687:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;687:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;687:29:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;687:29:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;687:29:4;;;;;;;;;;;;;;;;670:46;;769:10;782:5;;;;;;;;;;;:14;;;797:6;782:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;782:22:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;782:22:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;782:22:4;;;;;;;;;;;;;;;;769:35;;833:25;861:13;:22;875:7;861:22;;;;;;;;;;;833:50;;934:5;;;;;;;;;;;:20;;;955:6;934:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;934:28:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;934:28:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;934:28:4;;;;;;;;;;;;;;;;926:37;;;;;;1041:4;:21;;;1032:5;:30;;1024:39;;;;;;1169:4;:14;;;;;;;;;;;;1161:23;;;;;;1233:5;;;;;;;;;;;:18;;;1252:6;1260:4;:16;;;1233:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1233:44:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1233:44:4;;;;1353:16;1400:4;:12;;;1372:4;:25;;;:40;1353:59;;1471:16;1490:4;:20;;;;;;;;;;;;1471:39;;1573:25;1601:7;:16;1609:7;1601:16;;;;;;;;;;;;;;;1573:44;;1639:11;1623:1;:13;;:27;;;;1667:7;1656:1;:8;;:18;;;;1692:4;:12;;;1680:1;:9;;:24;;;;1731:8;1710:1;:18;;;:29;;;;;;;;;;;;;;;;;;1768:7;1745:1;:20;;;:30;;;;;;;;;;;;;;;;;;1803:6;1781:1;:19;;;:28;;;;;;;;;;;;;;;;;;1833:9;1815:1;:15;;;:27;;;;;;;;;;;;;;;;;;1867:7;1848:1;:16;;:26;;;;;;;;;;;;:::i;:::-;;1944:42;1925:61;;:1;:15;;;;;;;;;;;;:61;;;1922:101;;;2012:6;1994:1;:15;;;:24;;;;;;;;;;;;;;;;;;1922:101;2055:14;:23;2070:7;2055:23;;;;;;;;;;;;:25;;;;;;;;;;;;2029:14;:23;2044:7;2029:23;;;;;;;;;;;:51;;;;2168:4;2144:12;:21;2157:7;2144:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;2256:8;:16;2265:6;2256:16;;;;;;;;;;;;;;;:25;2273:7;2256:25;;;;;;;;;;;;:27;;;;;;;;;;;;2228:8;:16;2237:6;2228:16;;;;;;;;;;;;;;;:25;2245:7;2228:25;;;;;;;;;;;:55;;;;2363:5;;;;;;;;;;;:20;;;2384:6;2363:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2363:28:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2363:28:4;;;;2431:3;2397:22;:31;2420:7;2397:31;;;;;;;;;;;;;;;:37;;;;2445:31;2460:7;2469:6;2445:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;526:1957;;;;;;;;;;;:::o;599:142:17:-;1024:12:21;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;673:6:17;664;;:15;;;;;;;;;;;;;;;;;;727:6;;;;;;;;;;;694:40;;723:1;694:40;;;;;;;;;;;;1268:14:21;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;599:142:17;;:::o;2333:50:3:-;;;;;;;;;;;;;;;;;:::o;6666:343::-;6741:4;6767:19;6789:33;6797:10;6809:8;6819:1;6789:7;:33::i;:::-;6767:55;;6864:2;6846:14;:20;6843:148;;6900:4;6893:11;;;;;6843:148;6964:5;6957:12;;;6666:343;;;;;:::o;2753:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;1613:25::-;;;;;;;;;;;;;:::o;2219:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1878:107:17:-;1008:9;:7;:9::i;:::-;1000:18;;;;;;1950:28;1969:8;1950:18;:28::i;:::-;1878:107;:::o;2648:43:3:-;;;;;;;;;;;;;;;;;:::o;1642:33::-;;;;;;;;;;;;;:::o;1920:31::-;;;;:::o;9772:1881::-;9864:22;9889:13;:30;9903:15;9889:30;;;;;;;;;;;9864:55;;10019:8;10030:1;10019:12;;10068:6;10077:1;10068:10;;10063:276;10085:1;:7;;:14;;;;10080:1;:19;10063:276;;;10140:14;10157:1;:7;;10165:1;10157:10;;;;;;;;;;;;;;;10140:27;;10206:1;:11;;;;;;;;;;;;10202:101;;;10262:1;10255:8;;;;10202:101;10063:276;10101:3;;;;;10063:276;;;;10361:11;10375:35;10395:3;10400:9;10375:19;:35::i;:::-;10361:49;;10558:6;10554:1067;;;10702:4;10688:1;:11;;;:18;;;;;;;;;;;;;;;;;;10760:4;10747:1;:10;;;:17;;;;;;;;;;;;;;;;;;10839:15;10805:11;:31;10817:1;:18;;;;;;;;;;;;10805:31;;;;;;;;;;;;;;;:49;;;;10895:19;:17;:19::i;:::-;;10955:10;;;;;;;;;;;:23;;;10979:1;:18;;;;;;;;;;;;10955:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10955:43:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10955:43:3;;;;11039:5;;;;;;;;;;;:18;;;11059:1;:17;;;;;;;;;;;;11078:15;;11039:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11039:55:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11039:55:3;;;;11135:5;;;;;;;;;;;:20;;;11156:1;:17;;;;;;;;;;;;11135:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11135:39:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11135:39:3;;;;11215:15;:34;11231:1;:17;;;;;;;;;;;;11215:34;;;;;;;;;;;;;;;11255:15;11215:56;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;11215:56:3;;;;;;;;;;;;;;;;;;;;;;11317:44;11331:1;:10;;11343:1;:17;;;;;;;;;;;;11317:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10554:1067;;;11519:5;11506:1;:10;;;:18;;;;;;;;;;;;;;;;;;11579:4;11565:1;:11;;;:18;;;;;;;;;;;;;;;;;;10554:1067;9772:1881;;;;;:::o;791:88:15:-;836:7;862:10;855:17;;791:88;:::o;1409:467:21:-;1456:4;1797:10;1842:7;1830:20;1824:26;;1870:1;1864:2;:7;1857:14;;;1409:467;:::o;2129:183:17:-;2222:1;2202:22;;:8;:22;;;;2194:31;;;;;;2269:8;2240:38;;2261:6;;;;;;;;;;;2240:38;;;;;;;;;;;;2297:8;2288:6;;:17;;;;;;;;;;;;;;;;;;2129:183;:::o;5828:277:3:-;5874:4;5919:8;5897:19;;:30;5890:3;:37;5887:212;;5975:1;5957:15;;:19;;;;;;5939:15;:37;;;;6008:3;5986:19;:25;;;;6028:15;;6021:22;;;;5887:212;6075:15;;6068:22;;5828:277;;:::o;58:2428:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\nimport  './IdeaBlockLogic.sol';\n\n\ncontract RepBlockLogic is IdeaBlockLogic {\n\n\n  ///@notice generateReplicationBlock is used to generate a replication block when someone sucessfully replicates an Idea\n  ///@dev this requires the replicator has enough Notio to meet the stake amount and burns it from existence\n  ///@dev it also adds the replicator as a member of DecentraCorp\n  ///@dev finally, this contract calls the Proof of Replication Ownership contract and mints a PoRO token to the msg.sender\n  function generateReplicationBlock(uint _ideaId, address _repAdd, address _repOwner, string memory _userId, string memory _DLhash) public  {\n    address member = DCPoA.getAddFromPass(_userId);\n//pulls the members address in from his username\n  uint level = DCPoA.getLevel(member);\n//gets the members level\n  IdeaProposal storage info = ideaProposals[_ideaId];\n//pulls the ideas variables in as info\n  require(DCPoA._checkIfMember(member));\n//requires the address of the member is an active member\n  require(level >= info.levelRequirement);\n//requires the members level be equal to or greater than the level required to stake the idea\n  require(info.IdeaBlock);\n//requires the selected idea is an IdeaBlock\n  DCPoA.proxyNTCBurn(member, info.stakeAmount);\n//burns the stake amount for the specific Idea from the members account\n  uint blockReward = info.globalUseBlockAmount - info.royalty;\n  //subtracts the royalty amount from the block reward\n  address inventor = info.inventorAddress;\n  //sets inventor as the specific inventor for an idea\n\n\n\n\n  ReplicationInfo storage i = repInfo[_repAdd];\n    i.BlockReward = blockReward;\n    i.IdeaID = _ideaId;\n    i.Royalty = info.royalty;\n    i.InventorsAddress = inventor;\n    i.ReplicationAddress = _repAdd;\n    i.ReplicationMember = member;\n    i.OwnersAddress = _repOwner;\n    i.DeviceLockHash = _DLhash;\n\n  //creates replication struct for new rep\n  if(i.OwnersAddress == 0x0000000000000000000000000000000000000000) {\n    i.OwnersAddress = member;\n  }\n\n    ideaRepCounter[_ideaId] = ideaRepCounter[_ideaId]++;\n    //increments the global rep count for a specific idea\n    replications[_repAdd] = true;\n    //stores replications address as a replicator\n    repOwnes[member][_ideaId] = repOwnes[member][_ideaId]++;\n    //increments the amount of replications for an idea a replicator owns\n    DCPoA.increaseMemLev(member);\n    localMiningtimeTracker[_repAdd] = now;\n    emit NewReplication(_repAdd, member);\n    }\n\n}\n",
  "sourcePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/RepBlockLogic.sol",
  "ast": {
    "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/RepBlockLogic.sol",
    "exportedSymbols": {
      "RepBlockLogic": [
        1948
      ]
    },
    "id": 1949,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1758,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/IdeaBlockLogic.sol",
        "file": "./IdeaBlockLogic.sol",
        "id": 1759,
        "nodeType": "ImportDirective",
        "scope": 1949,
        "sourceUnit": 1757,
        "src": "24:31:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1760,
              "name": "IdeaBlockLogic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1756,
              "src": "84:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IdeaBlockLogic_$1756",
                "typeString": "contract IdeaBlockLogic"
              }
            },
            "id": 1761,
            "nodeType": "InheritanceSpecifier",
            "src": "84:14:4"
          }
        ],
        "contractDependencies": [
          1756,
          4839,
          5089,
          5681
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1948,
        "linearizedBaseContracts": [
          1948,
          1756,
          5089,
          4839,
          5681
        ],
        "name": "RepBlockLogic",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1946,
              "nodeType": "Block",
              "src": "664:1819:4",
              "statements": [
                {
                  "assignments": [
                    1775
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1775,
                      "name": "member",
                      "nodeType": "VariableDeclaration",
                      "scope": 1946,
                      "src": "670:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1774,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "670:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1780,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1778,
                        "name": "_userId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1769,
                        "src": "708:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1776,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "687:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAddFromPass",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1019,
                      "src": "687:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 1779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "687:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "670:46:4"
                },
                {
                  "assignments": [
                    1782
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1782,
                      "name": "level",
                      "nodeType": "VariableDeclaration",
                      "scope": 1946,
                      "src": "769:10:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1781,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "769:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1787,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1785,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1775,
                        "src": "797:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1783,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "782:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getLevel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1026,
                      "src": "782:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "782:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "769:35:4"
                },
                {
                  "assignments": [
                    1789
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1789,
                      "name": "info",
                      "nodeType": "VariableDeclaration",
                      "scope": 1946,
                      "src": "833:25:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                        "typeString": "struct IdeaBlockLogic.IdeaProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1788,
                        "name": "IdeaProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1170,
                        "src": "833:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1793,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1790,
                      "name": "ideaProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1057,
                      "src": "861:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IdeaProposal_$1170_storage_$",
                        "typeString": "mapping(uint256 => struct IdeaBlockLogic.IdeaProposal storage ref)"
                      }
                    },
                    "id": 1792,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1791,
                      "name": "_ideaId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1763,
                      "src": "875:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "861:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage",
                      "typeString": "struct IdeaBlockLogic.IdeaProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "833:50:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1797,
                            "name": "member",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1775,
                            "src": "955:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1795,
                            "name": "DCPoA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1039,
                            "src": "934:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                              "typeString": "contract DecentraCorp"
                            }
                          },
                          "id": 1796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_checkIfMember",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 995,
                          "src": "934:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 1798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "934:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1794,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "926:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "926:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1800,
                  "nodeType": "ExpressionStatement",
                  "src": "926:37:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1802,
                          "name": "level",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1782,
                          "src": "1032:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1803,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1789,
                            "src": "1041:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                              "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                            }
                          },
                          "id": 1804,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "levelRequirement",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1158,
                          "src": "1041:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1032:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "1024:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1024:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1807,
                  "nodeType": "ExpressionStatement",
                  "src": "1024:39:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1809,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1789,
                          "src": "1169:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                            "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                          }
                        },
                        "id": 1810,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "IdeaBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1146,
                        "src": "1169:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1808,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "1161:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1161:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1812,
                  "nodeType": "ExpressionStatement",
                  "src": "1161:23:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1816,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1775,
                        "src": "1252:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1817,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1789,
                          "src": "1260:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                            "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                          }
                        },
                        "id": 1818,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakeAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1156,
                        "src": "1260:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1813,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "1233:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proxyNTCBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 981,
                      "src": "1233:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1233:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1820,
                  "nodeType": "ExpressionStatement",
                  "src": "1233:44:4"
                },
                {
                  "assignments": [
                    1822
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1822,
                      "name": "blockReward",
                      "nodeType": "VariableDeclaration",
                      "scope": 1946,
                      "src": "1353:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1821,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1353:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1828,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1823,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1789,
                        "src": "1372:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                        }
                      },
                      "id": 1824,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "globalUseBlockAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1150,
                      "src": "1372:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1825,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1789,
                        "src": "1400:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                        }
                      },
                      "id": 1826,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "royalty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1152,
                      "src": "1400:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1372:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1353:59:4"
                },
                {
                  "assignments": [
                    1830
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1830,
                      "name": "inventor",
                      "nodeType": "VariableDeclaration",
                      "scope": 1946,
                      "src": "1471:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1829,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1471:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1833,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1831,
                      "name": "info",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1789,
                      "src": "1490:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                        "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                      }
                    },
                    "id": 1832,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "inventorAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1160,
                    "src": "1490:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1471:39:4"
                },
                {
                  "assignments": [
                    1835
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1835,
                      "name": "i",
                      "nodeType": "VariableDeclaration",
                      "scope": 1946,
                      "src": "1573:25:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1834,
                        "name": "ReplicationInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1218,
                        "src": "1573:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1839,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1836,
                      "name": "repInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "1601:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ReplicationInfo_$1218_storage_$",
                        "typeString": "mapping(address => struct IdeaBlockLogic.ReplicationInfo storage ref)"
                      }
                    },
                    "id": 1838,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1837,
                      "name": "_repAdd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1765,
                      "src": "1609:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1601:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage",
                      "typeString": "struct IdeaBlockLogic.ReplicationInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1573:44:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1840,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "1623:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                        }
                      },
                      "id": 1842,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "BlockReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1203,
                      "src": "1623:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1843,
                      "name": "blockReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1822,
                      "src": "1639:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1623:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1845,
                  "nodeType": "ExpressionStatement",
                  "src": "1623:27:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1846,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "1656:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                        }
                      },
                      "id": 1848,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IdeaID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1205,
                      "src": "1656:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1849,
                      "name": "_ideaId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1763,
                      "src": "1667:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1656:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1851,
                  "nodeType": "ExpressionStatement",
                  "src": "1656:18:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1852,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "1680:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                        }
                      },
                      "id": 1854,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "Royalty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1207,
                      "src": "1680:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1855,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1789,
                        "src": "1692:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                        }
                      },
                      "id": 1856,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "royalty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1152,
                      "src": "1692:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1680:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1858,
                  "nodeType": "ExpressionStatement",
                  "src": "1680:24:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1859,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "1710:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                        }
                      },
                      "id": 1861,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "InventorsAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1209,
                      "src": "1710:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1862,
                      "name": "inventor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1830,
                      "src": "1731:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1710:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1864,
                  "nodeType": "ExpressionStatement",
                  "src": "1710:29:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1865,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "1745:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                        }
                      },
                      "id": 1867,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ReplicationAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1211,
                      "src": "1745:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1868,
                      "name": "_repAdd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1765,
                      "src": "1768:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1745:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1870,
                  "nodeType": "ExpressionStatement",
                  "src": "1745:30:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1871,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "1781:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                        }
                      },
                      "id": 1873,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ReplicationMember",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1213,
                      "src": "1781:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1874,
                      "name": "member",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1775,
                      "src": "1803:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1781:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1876,
                  "nodeType": "ExpressionStatement",
                  "src": "1781:28:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1877,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "1815:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                        }
                      },
                      "id": 1879,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "OwnersAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1215,
                      "src": "1815:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1880,
                      "name": "_repOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1767,
                      "src": "1833:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1815:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1882,
                  "nodeType": "ExpressionStatement",
                  "src": "1815:27:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1883,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "1848:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                        }
                      },
                      "id": 1885,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "DeviceLockHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1217,
                      "src": "1848:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1886,
                      "name": "_DLhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1771,
                      "src": "1867:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1848:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1888,
                  "nodeType": "ExpressionStatement",
                  "src": "1848:26:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1889,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "1925:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                        }
                      },
                      "id": 1890,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "OwnersAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1215,
                      "src": "1925:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                      "id": 1891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1944:42:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x0000000000000000000000000000000000000000"
                    },
                    "src": "1925:61:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1900,
                  "nodeType": "IfStatement",
                  "src": "1922:101:4",
                  "trueBody": {
                    "id": 1899,
                    "nodeType": "Block",
                    "src": "1988:35:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1893,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1835,
                              "src": "1994:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                              }
                            },
                            "id": 1895,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "OwnersAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1215,
                            "src": "1994:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1896,
                            "name": "member",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1775,
                            "src": "2012:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1994:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1898,
                        "nodeType": "ExpressionStatement",
                        "src": "1994:24:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1901,
                        "name": "ideaRepCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "2029:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1903,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1902,
                        "name": "_ideaId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1763,
                        "src": "2044:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2029:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2055:25:4",
                      "subExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1904,
                          "name": "ideaRepCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1073,
                          "src": "2055:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1906,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1905,
                          "name": "_ideaId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "2070:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "2055:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2029:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1909,
                  "nodeType": "ExpressionStatement",
                  "src": "2029:51:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1910,
                        "name": "replications",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1081,
                        "src": "2144:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1912,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1911,
                        "name": "_repAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1765,
                        "src": "2157:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2144:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2168:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2144:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1915,
                  "nodeType": "ExpressionStatement",
                  "src": "2144:28:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1916,
                          "name": "repOwnes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1091,
                          "src": "2228:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1919,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1917,
                          "name": "member",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1775,
                          "src": "2237:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2228:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1920,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1918,
                        "name": "_ideaId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1763,
                        "src": "2245:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2228:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2256:27:4",
                      "subExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1921,
                            "name": "repOwnes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1091,
                            "src": "2256:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(uint256 => uint256))"
                            }
                          },
                          "id": 1923,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1922,
                            "name": "member",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1775,
                            "src": "2265:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2256:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1925,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1924,
                          "name": "_ideaId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "2273:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "2256:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2228:55:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1928,
                  "nodeType": "ExpressionStatement",
                  "src": "2228:55:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1932,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1775,
                        "src": "2384:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1929,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "2363:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseMemLev",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1000,
                      "src": "2363:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2363:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1934,
                  "nodeType": "ExpressionStatement",
                  "src": "2363:28:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1935,
                        "name": "localMiningtimeTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1077,
                        "src": "2397:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1937,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1936,
                        "name": "_repAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1765,
                        "src": "2420:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2397:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1938,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5698,
                      "src": "2431:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2397:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1940,
                  "nodeType": "ExpressionStatement",
                  "src": "2397:37:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1942,
                        "name": "_repAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1765,
                        "src": "2460:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1943,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1775,
                        "src": "2469:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1941,
                      "name": "NewReplication",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "2445:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2445:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1945,
                  "nodeType": "EmitStatement",
                  "src": "2440:36:4"
                }
              ]
            },
            "documentation": "@notice generateReplicationBlock is used to generate a replication block when someone sucessfully replicates an Idea\n@dev this requires the replicator has enough Notio to meet the stake amount and burns it from existence\n@dev it also adds the replicator as a member of DecentraCorp\n@dev finally, this contract calls the Proof of Replication Ownership contract and mints a PoRO token to the msg.sender",
            "id": 1947,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateReplicationBlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1763,
                  "name": "_ideaId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "560:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1762,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1765,
                  "name": "_repAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "574:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1767,
                  "name": "_repOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "591:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "591:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1769,
                  "name": "_userId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "610:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1768,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1771,
                  "name": "_DLhash",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "633:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1770,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "633:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "559:96:4"
            },
            "returnParameters": {
              "id": 1773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:0:4"
            },
            "scope": 1948,
            "src": "526:1957:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1949,
        "src": "58:2428:4"
      }
    ],
    "src": "0:2487:4"
  },
  "legacyAST": {
    "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/RepBlockLogic.sol",
    "exportedSymbols": {
      "RepBlockLogic": [
        1948
      ]
    },
    "id": 1949,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1758,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/IdeaBlockLogic.sol",
        "file": "./IdeaBlockLogic.sol",
        "id": 1759,
        "nodeType": "ImportDirective",
        "scope": 1949,
        "sourceUnit": 1757,
        "src": "24:31:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1760,
              "name": "IdeaBlockLogic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1756,
              "src": "84:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IdeaBlockLogic_$1756",
                "typeString": "contract IdeaBlockLogic"
              }
            },
            "id": 1761,
            "nodeType": "InheritanceSpecifier",
            "src": "84:14:4"
          }
        ],
        "contractDependencies": [
          1756,
          4839,
          5089,
          5681
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1948,
        "linearizedBaseContracts": [
          1948,
          1756,
          5089,
          4839,
          5681
        ],
        "name": "RepBlockLogic",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1946,
              "nodeType": "Block",
              "src": "664:1819:4",
              "statements": [
                {
                  "assignments": [
                    1775
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1775,
                      "name": "member",
                      "nodeType": "VariableDeclaration",
                      "scope": 1946,
                      "src": "670:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1774,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "670:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1780,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1778,
                        "name": "_userId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1769,
                        "src": "708:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1776,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "687:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAddFromPass",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1019,
                      "src": "687:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 1779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "687:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "670:46:4"
                },
                {
                  "assignments": [
                    1782
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1782,
                      "name": "level",
                      "nodeType": "VariableDeclaration",
                      "scope": 1946,
                      "src": "769:10:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1781,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "769:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1787,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1785,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1775,
                        "src": "797:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1783,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "782:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getLevel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1026,
                      "src": "782:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "782:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "769:35:4"
                },
                {
                  "assignments": [
                    1789
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1789,
                      "name": "info",
                      "nodeType": "VariableDeclaration",
                      "scope": 1946,
                      "src": "833:25:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                        "typeString": "struct IdeaBlockLogic.IdeaProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1788,
                        "name": "IdeaProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1170,
                        "src": "833:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1793,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1790,
                      "name": "ideaProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1057,
                      "src": "861:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IdeaProposal_$1170_storage_$",
                        "typeString": "mapping(uint256 => struct IdeaBlockLogic.IdeaProposal storage ref)"
                      }
                    },
                    "id": 1792,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1791,
                      "name": "_ideaId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1763,
                      "src": "875:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "861:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage",
                      "typeString": "struct IdeaBlockLogic.IdeaProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "833:50:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1797,
                            "name": "member",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1775,
                            "src": "955:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1795,
                            "name": "DCPoA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1039,
                            "src": "934:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                              "typeString": "contract DecentraCorp"
                            }
                          },
                          "id": 1796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_checkIfMember",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 995,
                          "src": "934:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 1798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "934:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1794,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "926:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "926:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1800,
                  "nodeType": "ExpressionStatement",
                  "src": "926:37:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1802,
                          "name": "level",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1782,
                          "src": "1032:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1803,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1789,
                            "src": "1041:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                              "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                            }
                          },
                          "id": 1804,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "levelRequirement",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1158,
                          "src": "1041:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1032:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "1024:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1024:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1807,
                  "nodeType": "ExpressionStatement",
                  "src": "1024:39:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1809,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1789,
                          "src": "1169:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                            "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                          }
                        },
                        "id": 1810,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "IdeaBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1146,
                        "src": "1169:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1808,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "1161:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1161:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1812,
                  "nodeType": "ExpressionStatement",
                  "src": "1161:23:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1816,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1775,
                        "src": "1252:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1817,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1789,
                          "src": "1260:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                            "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                          }
                        },
                        "id": 1818,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakeAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1156,
                        "src": "1260:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1813,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "1233:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proxyNTCBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 981,
                      "src": "1233:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1233:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1820,
                  "nodeType": "ExpressionStatement",
                  "src": "1233:44:4"
                },
                {
                  "assignments": [
                    1822
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1822,
                      "name": "blockReward",
                      "nodeType": "VariableDeclaration",
                      "scope": 1946,
                      "src": "1353:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1821,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1353:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1828,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1823,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1789,
                        "src": "1372:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                        }
                      },
                      "id": 1824,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "globalUseBlockAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1150,
                      "src": "1372:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1825,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1789,
                        "src": "1400:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                        }
                      },
                      "id": 1826,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "royalty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1152,
                      "src": "1400:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1372:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1353:59:4"
                },
                {
                  "assignments": [
                    1830
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1830,
                      "name": "inventor",
                      "nodeType": "VariableDeclaration",
                      "scope": 1946,
                      "src": "1471:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1829,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1471:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1833,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1831,
                      "name": "info",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1789,
                      "src": "1490:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                        "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                      }
                    },
                    "id": 1832,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "inventorAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1160,
                    "src": "1490:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1471:39:4"
                },
                {
                  "assignments": [
                    1835
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1835,
                      "name": "i",
                      "nodeType": "VariableDeclaration",
                      "scope": 1946,
                      "src": "1573:25:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1834,
                        "name": "ReplicationInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1218,
                        "src": "1573:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1839,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1836,
                      "name": "repInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "1601:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ReplicationInfo_$1218_storage_$",
                        "typeString": "mapping(address => struct IdeaBlockLogic.ReplicationInfo storage ref)"
                      }
                    },
                    "id": 1838,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1837,
                      "name": "_repAdd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1765,
                      "src": "1609:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1601:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage",
                      "typeString": "struct IdeaBlockLogic.ReplicationInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1573:44:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1840,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "1623:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                        }
                      },
                      "id": 1842,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "BlockReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1203,
                      "src": "1623:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1843,
                      "name": "blockReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1822,
                      "src": "1639:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1623:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1845,
                  "nodeType": "ExpressionStatement",
                  "src": "1623:27:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1846,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "1656:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                        }
                      },
                      "id": 1848,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IdeaID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1205,
                      "src": "1656:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1849,
                      "name": "_ideaId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1763,
                      "src": "1667:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1656:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1851,
                  "nodeType": "ExpressionStatement",
                  "src": "1656:18:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1852,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "1680:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                        }
                      },
                      "id": 1854,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "Royalty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1207,
                      "src": "1680:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1855,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1789,
                        "src": "1692:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                        }
                      },
                      "id": 1856,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "royalty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1152,
                      "src": "1692:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1680:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1858,
                  "nodeType": "ExpressionStatement",
                  "src": "1680:24:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1859,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "1710:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                        }
                      },
                      "id": 1861,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "InventorsAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1209,
                      "src": "1710:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1862,
                      "name": "inventor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1830,
                      "src": "1731:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1710:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1864,
                  "nodeType": "ExpressionStatement",
                  "src": "1710:29:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1865,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "1745:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                        }
                      },
                      "id": 1867,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ReplicationAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1211,
                      "src": "1745:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1868,
                      "name": "_repAdd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1765,
                      "src": "1768:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1745:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1870,
                  "nodeType": "ExpressionStatement",
                  "src": "1745:30:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1871,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "1781:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                        }
                      },
                      "id": 1873,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ReplicationMember",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1213,
                      "src": "1781:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1874,
                      "name": "member",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1775,
                      "src": "1803:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1781:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1876,
                  "nodeType": "ExpressionStatement",
                  "src": "1781:28:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1877,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "1815:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                        }
                      },
                      "id": 1879,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "OwnersAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1215,
                      "src": "1815:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1880,
                      "name": "_repOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1767,
                      "src": "1833:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1815:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1882,
                  "nodeType": "ExpressionStatement",
                  "src": "1815:27:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1883,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "1848:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                        }
                      },
                      "id": 1885,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "DeviceLockHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1217,
                      "src": "1848:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1886,
                      "name": "_DLhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1771,
                      "src": "1867:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1848:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1888,
                  "nodeType": "ExpressionStatement",
                  "src": "1848:26:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1889,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "1925:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                        }
                      },
                      "id": 1890,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "OwnersAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1215,
                      "src": "1925:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                      "id": 1891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1944:42:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x0000000000000000000000000000000000000000"
                    },
                    "src": "1925:61:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1900,
                  "nodeType": "IfStatement",
                  "src": "1922:101:4",
                  "trueBody": {
                    "id": 1899,
                    "nodeType": "Block",
                    "src": "1988:35:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1893,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1835,
                              "src": "1994:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.ReplicationInfo storage pointer"
                              }
                            },
                            "id": 1895,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "OwnersAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1215,
                            "src": "1994:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1896,
                            "name": "member",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1775,
                            "src": "2012:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1994:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1898,
                        "nodeType": "ExpressionStatement",
                        "src": "1994:24:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1901,
                        "name": "ideaRepCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "2029:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1903,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1902,
                        "name": "_ideaId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1763,
                        "src": "2044:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2029:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2055:25:4",
                      "subExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1904,
                          "name": "ideaRepCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1073,
                          "src": "2055:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1906,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1905,
                          "name": "_ideaId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "2070:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "2055:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2029:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1909,
                  "nodeType": "ExpressionStatement",
                  "src": "2029:51:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1910,
                        "name": "replications",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1081,
                        "src": "2144:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1912,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1911,
                        "name": "_repAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1765,
                        "src": "2157:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2144:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2168:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2144:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1915,
                  "nodeType": "ExpressionStatement",
                  "src": "2144:28:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1916,
                          "name": "repOwnes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1091,
                          "src": "2228:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1919,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1917,
                          "name": "member",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1775,
                          "src": "2237:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2228:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1920,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1918,
                        "name": "_ideaId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1763,
                        "src": "2245:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2228:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2256:27:4",
                      "subExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1921,
                            "name": "repOwnes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1091,
                            "src": "2256:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(uint256 => uint256))"
                            }
                          },
                          "id": 1923,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1922,
                            "name": "member",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1775,
                            "src": "2265:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2256:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1925,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1924,
                          "name": "_ideaId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "2273:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "2256:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2228:55:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1928,
                  "nodeType": "ExpressionStatement",
                  "src": "2228:55:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1932,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1775,
                        "src": "2384:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1929,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "2363:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 1931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseMemLev",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1000,
                      "src": "2363:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2363:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1934,
                  "nodeType": "ExpressionStatement",
                  "src": "2363:28:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1935,
                        "name": "localMiningtimeTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1077,
                        "src": "2397:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1937,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1936,
                        "name": "_repAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1765,
                        "src": "2420:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2397:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1938,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5698,
                      "src": "2431:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2397:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1940,
                  "nodeType": "ExpressionStatement",
                  "src": "2397:37:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1942,
                        "name": "_repAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1765,
                        "src": "2460:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1943,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1775,
                        "src": "2469:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1941,
                      "name": "NewReplication",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "2445:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2445:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1945,
                  "nodeType": "EmitStatement",
                  "src": "2440:36:4"
                }
              ]
            },
            "documentation": "@notice generateReplicationBlock is used to generate a replication block when someone sucessfully replicates an Idea\n@dev this requires the replicator has enough Notio to meet the stake amount and burns it from existence\n@dev it also adds the replicator as a member of DecentraCorp\n@dev finally, this contract calls the Proof of Replication Ownership contract and mints a PoRO token to the msg.sender",
            "id": 1947,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateReplicationBlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1763,
                  "name": "_ideaId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "560:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1762,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1765,
                  "name": "_repAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "574:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1767,
                  "name": "_repOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "591:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "591:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1769,
                  "name": "_userId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "610:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1768,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1771,
                  "name": "_DLhash",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "633:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1770,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "633:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "559:96:4"
            },
            "returnParameters": {
              "id": 1773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:0:4"
            },
            "scope": 1948,
            "src": "526:1957:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1949,
        "src": "58:2428:4"
      }
    ],
    "src": "0:2487:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-09-13T18:41:29.221Z",
  "devdoc": {
    "methods": {
      "generateReplicationBlock(uint256,address,address,string,string)": {
        "details": "this requires the replicator has enough Notio to meet the stake amount and burns it from existenceit also adds the replicator as a member of DecentraCorpfinally, this contract calls the Proof of Replication Ownership contract and mints a PoRO token to the msg.sender"
      },
      "getPropID(string)": {
        "details": "getPropID is made for easier front end interaction"
      },
      "initialize(address)": {
        "details": "The Ownable constructor sets the original `owner` of the contract to the sender account."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "percent(uint256,uint256,uint256)": {
        "details": "quorum is set to 60%"
      },
      "proposeIdea(string,uint256,uint256,uint256,uint256,uint256,address,address)": {
        "details": "the struct for this is set in interface.solidityidea proposals are put up for community approval"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "generateReplicationBlock(uint256,address,address,string,string)": {
        "notice": "generateReplicationBlock is used to generate a replication block when someone sucessfully replicates an Idea"
      },
      "getPropID(string)": {
        "notice": "getPropID function allows one to rerieve a proposal ID by its ipfs hash"
      },
      "ideaVote(uint256,bool)": {
        "notice": "vote is a member only function which allows DecentraCorp members to vote on proposalPassed"
      },
      "percent(uint256,uint256,uint256)": {
        "notice": "set_Quorum is an internal function used by proposal vote counts to see if the community approves"
      },
      "proposeIdea(string,uint256,uint256,uint256,uint256,uint256,address,address)": {
        "notice": "proposeIdea is used to allow ANYONE to petition the community for idea approval"
      },
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}