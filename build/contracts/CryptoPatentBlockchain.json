{
  "contractName": "CryptoPatentBlockchain",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "numerator",
          "type": "uint256"
        },
        {
          "name": "denominator",
          "type": "uint256"
        },
        {
          "name": "precision",
          "type": "uint256"
        }
      ],
      "name": "percent",
      "outputs": [
        {
          "name": "quotient",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "hash",
          "type": "string"
        }
      ],
      "name": "getPropID",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "localMiningtimeTracker",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ideaProposals",
      "outputs": [
        {
          "name": "IdeaIPFS",
          "type": "string"
        },
        {
          "name": "IdeaBlock",
          "type": "bool"
        },
        {
          "name": "executed",
          "type": "bool"
        },
        {
          "name": "globalUseBlockAmount",
          "type": "uint256"
        },
        {
          "name": "royalty",
          "type": "uint256"
        },
        {
          "name": "miningTime",
          "type": "uint256"
        },
        {
          "name": "stakeAmount",
          "type": "uint256"
        },
        {
          "name": "levelRequirement",
          "type": "uint256"
        },
        {
          "name": "inventorAddress",
          "type": "address"
        },
        {
          "name": "inventionAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_mem",
          "type": "address"
        }
      ],
      "name": "getOwnedIB",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ideaBlockReward",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "numOfvotes",
          "type": "uint256"
        },
        {
          "name": "numOfmem",
          "type": "uint256"
        }
      ],
      "name": "setVoteNumberQuorum",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalBlockHalfTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "repOwnes",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_add",
          "type": "address"
        },
        {
          "name": "_ideaProposalID",
          "type": "uint256"
        }
      ],
      "name": "checkIfVotedIdea",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "IdeaAddToId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ideaIPFS",
          "type": "string"
        },
        {
          "name": "_globalUseBlockAmount",
          "type": "uint256"
        },
        {
          "name": "_miningTime",
          "type": "uint256"
        },
        {
          "name": "_royalty",
          "type": "uint256"
        },
        {
          "name": "_stakeAmount",
          "type": "uint256"
        },
        {
          "name": "_levelRequirement",
          "type": "uint256"
        },
        {
          "name": "_inventor",
          "type": "address"
        },
        {
          "name": "_invention",
          "type": "address"
        }
      ],
      "name": "proposeIdea",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "repInfo",
      "outputs": [
        {
          "name": "BlockReward",
          "type": "uint256"
        },
        {
          "name": "IdeaID",
          "type": "uint256"
        },
        {
          "name": "Royalty",
          "type": "uint256"
        },
        {
          "name": "InventorsAddress",
          "type": "address"
        },
        {
          "name": "ReplicationAddress",
          "type": "address"
        },
        {
          "name": "ReplicationMember",
          "type": "address"
        },
        {
          "name": "OwnersAddress",
          "type": "address"
        },
        {
          "name": "DeviceLockHash",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalUseBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "weightTracker",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        },
        {
          "name": "_ideaProposalID",
          "type": "uint256"
        }
      ],
      "name": "transferIdeaBlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ideaId",
          "type": "uint256"
        },
        {
          "name": "_repAdd",
          "type": "address"
        },
        {
          "name": "_repOwner",
          "type": "address"
        },
        {
          "name": "_userId",
          "type": "string"
        },
        {
          "name": "_DLhash",
          "type": "string"
        }
      ],
      "name": "generateReplicationBlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "localWeightTracker",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "numOfvotes",
          "type": "uint256"
        },
        {
          "name": "numOfmem",
          "type": "uint256"
        }
      ],
      "name": "setVoteQuorum",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "replications",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DCPoA",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ideaUpgradeProposals",
      "outputs": [
        {
          "name": "uIdeaIPFS",
          "type": "string"
        },
        {
          "name": "uexecuted",
          "type": "bool"
        },
        {
          "name": "uglobalUseBlockAmount",
          "type": "uint256"
        },
        {
          "name": "uroyalty",
          "type": "uint256"
        },
        {
          "name": "uminingTime",
          "type": "uint256"
        },
        {
          "name": "ustakeAmount",
          "type": "uint256"
        },
        {
          "name": "ulevelRequirement",
          "type": "uint256"
        },
        {
          "name": "uinventorAddress",
          "type": "address"
        },
        {
          "name": "uinventionAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_DLhash",
          "type": "string"
        }
      ],
      "name": "generateUseBlockWeight",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ideaRepCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "Validators",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalIdeaPropCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "IPFS",
          "type": "string"
        }
      ],
      "name": "IdeaProposed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "member",
          "type": "address"
        }
      ],
      "name": "NewMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "IPFS",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "Inventor",
          "type": "address"
        }
      ],
      "name": "IdeaApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_voter",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "inSupport",
          "type": "bool"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_repAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "repOwner",
          "type": "address"
        }
      ],
      "name": "NewReplication",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "repAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "reOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "repWeight",
          "type": "uint256"
        }
      ],
      "name": "LocalUseWeight",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "repAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "reOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "ideaId",
          "type": "uint256"
        }
      ],
      "name": "GlobalUseBlock",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ideaIPFS",
          "type": "string"
        },
        {
          "name": "_globalUseBlockAmount",
          "type": "uint256"
        },
        {
          "name": "_miningTime",
          "type": "uint256"
        },
        {
          "name": "_royalty",
          "type": "uint256"
        },
        {
          "name": "_stakeAmount",
          "type": "uint256"
        },
        {
          "name": "_levelRequirement",
          "type": "uint256"
        },
        {
          "name": "_inventor",
          "type": "address"
        },
        {
          "name": "_invention",
          "type": "address"
        }
      ],
      "name": "proposeIdeaUpgrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ideaProposalID",
          "type": "uint256"
        },
        {
          "name": "supportsProposal",
          "type": "bool"
        }
      ],
      "name": "ideaVote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_add",
          "type": "address"
        }
      ],
      "name": "checkIfRep",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_ideaAdd",
          "type": "address"
        }
      ],
      "name": "getID",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_valCon",
          "type": "address"
        }
      ],
      "name": "setValidatorContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dcpoa",
          "type": "address"
        }
      ],
      "name": "setDCPoA",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        },
        {
          "name": "_rep",
          "type": "address"
        }
      ],
      "name": "transferRepBlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"numerator\",\"type\":\"uint256\"},{\"name\":\"denominator\",\"type\":\"uint256\"},{\"name\":\"precision\",\"type\":\"uint256\"}],\"name\":\"percent\",\"outputs\":[{\"name\":\"quotient\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"getPropID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"localMiningtimeTracker\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ideaProposalID\",\"type\":\"uint256\"},{\"name\":\"supportsProposal\",\"type\":\"bool\"}],\"name\":\"ideaVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ideaProposals\",\"outputs\":[{\"name\":\"IdeaIPFS\",\"type\":\"string\"},{\"name\":\"IdeaBlock\",\"type\":\"bool\"},{\"name\":\"executed\",\"type\":\"bool\"},{\"name\":\"globalUseBlockAmount\",\"type\":\"uint256\"},{\"name\":\"royalty\",\"type\":\"uint256\"},{\"name\":\"miningTime\",\"type\":\"uint256\"},{\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"name\":\"levelRequirement\",\"type\":\"uint256\"},{\"name\":\"inventorAddress\",\"type\":\"address\"},{\"name\":\"inventionAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_mem\",\"type\":\"address\"}],\"name\":\"getOwnedIB\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ideaBlockReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"numOfvotes\",\"type\":\"uint256\"},{\"name\":\"numOfmem\",\"type\":\"uint256\"}],\"name\":\"setVoteNumberQuorum\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"globalBlockHalfTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"repOwnes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dcpoa\",\"type\":\"address\"}],\"name\":\"setDCPoA\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_add\",\"type\":\"address\"},{\"name\":\"_ideaProposalID\",\"type\":\"uint256\"}],\"name\":\"checkIfVotedIdea\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"IdeaAddToId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ideaIPFS\",\"type\":\"string\"},{\"name\":\"_globalUseBlockAmount\",\"type\":\"uint256\"},{\"name\":\"_miningTime\",\"type\":\"uint256\"},{\"name\":\"_royalty\",\"type\":\"uint256\"},{\"name\":\"_stakeAmount\",\"type\":\"uint256\"},{\"name\":\"_levelRequirement\",\"type\":\"uint256\"},{\"name\":\"_inventor\",\"type\":\"address\"},{\"name\":\"_invention\",\"type\":\"address\"}],\"name\":\"proposeIdea\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"repInfo\",\"outputs\":[{\"name\":\"BlockReward\",\"type\":\"uint256\"},{\"name\":\"IdeaID\",\"type\":\"uint256\"},{\"name\":\"Royalty\",\"type\":\"uint256\"},{\"name\":\"InventorsAddress\",\"type\":\"address\"},{\"name\":\"ReplicationAddress\",\"type\":\"address\"},{\"name\":\"ReplicationMember\",\"type\":\"address\"},{\"name\":\"OwnersAddress\",\"type\":\"address\"},{\"name\":\"DeviceLockHash\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"globalUseBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"weightTracker\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"},{\"name\":\"_ideaProposalID\",\"type\":\"uint256\"}],\"name\":\"transferIdeaBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"checkIfRep\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_ideaAdd\",\"type\":\"address\"}],\"name\":\"getID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ideaId\",\"type\":\"uint256\"},{\"name\":\"_repAdd\",\"type\":\"address\"},{\"name\":\"_repOwner\",\"type\":\"address\"},{\"name\":\"_userId\",\"type\":\"string\"},{\"name\":\"_DLhash\",\"type\":\"string\"}],\"name\":\"generateReplicationBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ideaIPFS\",\"type\":\"string\"},{\"name\":\"_globalUseBlockAmount\",\"type\":\"uint256\"},{\"name\":\"_miningTime\",\"type\":\"uint256\"},{\"name\":\"_royalty\",\"type\":\"uint256\"},{\"name\":\"_stakeAmount\",\"type\":\"uint256\"},{\"name\":\"_levelRequirement\",\"type\":\"uint256\"},{\"name\":\"_inventor\",\"type\":\"address\"},{\"name\":\"_invention\",\"type\":\"address\"}],\"name\":\"proposeIdeaUpgrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_valCon\",\"type\":\"address\"}],\"name\":\"setValidatorContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"localWeightTracker\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"numOfvotes\",\"type\":\"uint256\"},{\"name\":\"numOfmem\",\"type\":\"uint256\"}],\"name\":\"setVoteQuorum\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"replications\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DCPoA\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"},{\"name\":\"_rep\",\"type\":\"address\"}],\"name\":\"transferRepBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ideaUpgradeProposals\",\"outputs\":[{\"name\":\"uIdeaIPFS\",\"type\":\"string\"},{\"name\":\"uexecuted\",\"type\":\"bool\"},{\"name\":\"uglobalUseBlockAmount\",\"type\":\"uint256\"},{\"name\":\"uroyalty\",\"type\":\"uint256\"},{\"name\":\"uminingTime\",\"type\":\"uint256\"},{\"name\":\"ustakeAmount\",\"type\":\"uint256\"},{\"name\":\"ulevelRequirement\",\"type\":\"uint256\"},{\"name\":\"uinventorAddress\",\"type\":\"address\"},{\"name\":\"uinventionAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_DLhash\",\"type\":\"string\"}],\"name\":\"generateUseBlockWeight\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ideaRepCounter\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Validators\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"globalIdeaPropCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"IPFS\",\"type\":\"string\"}],\"name\":\"IdeaProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"member\",\"type\":\"address\"}],\"name\":\"NewMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"IPFS\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"Inventor\",\"type\":\"address\"}],\"name\":\"IdeaApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_voter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"inSupport\",\"type\":\"bool\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_repAdd\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"repOwner\",\"type\":\"address\"}],\"name\":\"NewReplication\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"repAdd\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"reOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"repWeight\",\"type\":\"uint256\"}],\"name\":\"LocalUseWeight\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"repAdd\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"reOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ideaId\",\"type\":\"uint256\"}],\"name\":\"GlobalUseBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"checkIfRep(address)\":{\"details\":\"all the following contracts allow for the retreval of token block information\"},\"generateReplicationBlock(uint256,address,address,string,string)\":{\"details\":\"this requires the replicator has enough NotiCoin to meet the stake amount and burns it from existenceit also adds the replicator as a member of DecentraCorpfinally, this contract calls the Proof of Replication Ownership contract and mints a PoRO token to the msg.sender\"},\"generateUseBlockWeight(string)\":{\"details\":\"this is called by generateUseBlockWeight\"},\"getPropID(string)\":{\"details\":\"getPropID is made for easier front end interaction\"},\"initialize(address)\":{\"details\":\"The Ownable constructor sets the original `owner` of the contract to the sender account.\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"percent(uint256,uint256,uint256)\":{\"details\":\"quorum is set to 60%\"},\"proposeIdea(string,uint256,uint256,uint256,uint256,uint256,address,address)\":{\"details\":\"the struct for this is set in interface.solidityidea proposals are put up for community approval\"},\"proposeIdeaUpgrade(string,uint256,uint256,uint256,uint256,uint256,address,address)\":{\"details\":\"the struct for this is set in interface.solidityidea proposals are put up for community approval\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"checkIfRep(address)\":{\"notice\":\"the following functions allow for easier access to info by both the front end and other contracts\"},\"generateReplicationBlock(uint256,address,address,string,string)\":{\"notice\":\"generateReplicationBlock is used to generate a replication block when someone sucessfully replicates an Idea\"},\"generateUseBlockWeight(string)\":{\"notice\":\"UseBlockWeight is an internal function that tracks loacal use weightTracker\"},\"getPropID(string)\":{\"notice\":\"getPropID function allows one to rerieve a proposal ID by its ipfs hash\"},\"ideaVote(uint256,bool)\":{\"notice\":\"vote is a member only function which allows DecentraCorp members to vote on proposalPassed\"},\"percent(uint256,uint256,uint256)\":{\"notice\":\"set_Quorum is an internal function used by proposal vote counts to see if the community approves\"},\"proposeIdea(string,uint256,uint256,uint256,uint256,uint256,address,address)\":{\"notice\":\"proposeIdea is used to allow ANYONE to petition the community for idea approval\"},\"proposeIdeaUpgrade(string,uint256,uint256,uint256,uint256,uint256,address,address)\":{\"notice\":\"proposeIdea is used to allow ANYONE to petition the community for idea approval\"},\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/CryptoPatentBlockchain.sol\":\"CryptoPatentBlockchain\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/CryptoPatentBlockchain.sol\":{\"keccak256\":\"0x0af84a8d831b58085bc8310bf8d245dff17dc313445e951fd7b4823f98ca0e62\",\"urls\":[\"bzzr://d9a3430dc63439271a2395994942495ecbc5bc7166fa972c0d76099315e194d8\"]},\"/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/IdeaBlockLogic.sol\":{\"keccak256\":\"0xfa47cbc1e4b7ac50dc236795cd6efbc654ab9daef7cbea60f77fa76e41107085\",\"urls\":[\"bzzr://3c3bae021e27d298f40fe1ea2cd4cecce53d7917c6b8462803f4f69718254373\"]},\"/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/RepBlockLogic.sol\":{\"keccak256\":\"0xa4041a7f4be49406bc01dd4588172aa26e17480b21403ace1177c328ddeffaa8\",\"urls\":[\"bzzr://f9f96b35fcb86172f889eea7c42725d8f9ede8e5ae49c1490117e97cea736092\"]},\"/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/UseBlockLogic.sol\":{\"keccak256\":\"0x36e7dd7abef8e7bc26070fc740d12601fd7b206f01fe77b2094c4addf06df9f4\",\"urls\":[\"bzzr://0ac44c09e254e950636ef0318b011e0d3f967b2874fabf3c1c9ba398d68246f2\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0d4306da5305cb78f09c70c18ec86dbc66f22fa5ade90edc20e1ab88e16d4d10\",\"urls\":[\"bzzr://47885dccac32ee543284e93f21a5f62c499076b04d01b12ff67aefffbbdcbd34\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xe96d36a781eb7ce39e70936f7da6591356199ca7e46b2bf6ea0c87b2ea84e0ab\",\"urls\":[\"bzzr://caf23f5ace762c5f52ddf315ee9c6489c662061cf12d2e2d693e8e28ff2b27e3\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzzr://e45c5a995f57637b2300a376647ee345cc9cb30ee1984735091fcd4b10ff3500\"]}},\"version\":1}",
  "bytecode": "0x60806040526148d7806100136000396000f3fe608060405234801561001057600080fd5b506004361061023c5760003560e01c80638da5cb5b1161013b578063cec58644116100b8578063f2bedeff1161007c578063f2bedeff146112b4578063f2fde38b1461136f578063f54a0129146113b3578063f6919774146113f5578063f7e1e4f01461143f5761023c565b8063cec586441461101f578063d436b5e91461106f578063e026daa1146110cb578063ed92ce2d14611115578063ee013096146111795761023c565b8063aa59fea4116100ff578063aa59fea414610c75578063b4cecb8e14610e11578063c4d66de814610f3f578063cdf64a7614610f83578063ce87d3ee14610fc75761023c565b80638da5cb5b14610b075780638da9c0b614610b515780638eb5b91314610b9f5780638f32d59b14610bfb57806399f826a514610c1d5761023c565b80632e858cce116101c95780636849e7951161018d5780636849e795146108f5578063715018a614610a935780637582497414610a9d5780638129fc1c14610abb57806381cbb67714610ac55761023c565b80632e858cce1461066357806343110e6f146106c55780634e6a3630146107095780634f214e841461076f578063649298b4146107c75761023c565b80631855efa6116102105780631855efa6146103f85780631ad8a2011461053e5780631ddc883b146105d75780632240d03b146105f557806328a6e47c146106455761023c565b80622c1a9e1461024157806310734e431461029757806311e658441461036657806314111141146103be575b600080fd5b6102816004803603606081101561025757600080fd5b8101908080359060200190929190803590602001909291908035906020019092919050505061145d565b6040518082815260200191505060405180910390f35b610350600480360360208110156102ad57600080fd5b81019080803590602001906401000000008111156102ca57600080fd5b8201836020820111156102dc57600080fd5b803590602001918460018302840111640100000000831117156102fe57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611492565b6040518082815260200191505060405180910390f35b6103a86004803603602081101561037c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611505565b6040518082815260200191505060405180910390f35b6103f6600480360360408110156103d457600080fd5b810190808035906020019092919080351515906020019092919050505061151d565b005b6104246004803603602081101561040e57600080fd5b81019080803590602001909291905050506119c2565b60405180806020018b1515151581526020018a1515151581526020018981526020018881526020018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182810382528c818151815260200191508051906020019080838360005b838110156104fa5780820151818401526020810190506104df565b50505050905090810190601f1680156105275780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b6105806004803603602081101561055457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b08565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156105c35780820151818401526020810190506105a8565b505050509050019250505060405180910390f35b6105df611b9f565b6040518082815260200191505060405180910390f35b61062b6004803603604081101561060b57600080fd5b810190808035906020019092919080359060200190929190505050611ba5565b604051808215151515815260200191505060405180910390f35b61064d611bd4565b6040518082815260200191505060405180910390f35b6106af6004803603604081101561067957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611bda565b6040518082815260200191505060405180910390f35b610707600480360360208110156106db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bff565b005b6107556004803603604081101561071f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c54565b604051808215151515815260200191505060405180910390f35b6107b16004803603602081101561078557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cc4565b6040518082815260200191505060405180910390f35b6108f360048036036101008110156107de57600080fd5b81019080803590602001906401000000008111156107fb57600080fd5b82018360208201111561080d57600080fd5b8035906020019184600183028401116401000000008311171561082f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cdc565b005b6109376004803603602081101561090b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f36565b604051808981526020018881526020018781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610a51578082015181840152602081019050610a36565b50505050905090810190601f168015610a7e5780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b610a9b612096565b005b610aa5612168565b6040518082815260200191505060405180910390f35b610ac361216e565b005b610af160048036036020811015610adb57600080fd5b810190808035906020019092919050505061228d565b6040518082815260200191505060405180910390f35b610b0f6122a5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610b9d60048036036040811015610b6757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506122cf565b005b610be160048036036020811015610bb557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061238a565b604051808215151515815260200191505060405180910390f35b610c036123e0565b604051808215151515815260200191505060405180910390f35b610c5f60048036036020811015610c3357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061243f565b6040518082815260200191505060405180910390f35b610e0f600480360360a0811015610c8b57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610cf257600080fd5b820183602082011115610d0457600080fd5b80359060200191846001830284011164010000000083111715610d2657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610d8957600080fd5b820183602082011115610d9b57600080fd5b80359060200191846001830284011164010000000083111715610dbd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612488565b005b610f3d6004803603610100811015610e2857600080fd5b8101908080359060200190640100000000811115610e4557600080fd5b820183602082011115610e5757600080fd5b80359060200191846001830284011164010000000083111715610e7957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612da9565b005b610f8160048036036020811015610f5557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612fbf565b005b610fc560048036036020811015610f9957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061317d565b005b61100960048036036020811015610fdd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506131d2565b6040518082815260200191505060405180910390f35b6110556004803603604081101561103557600080fd5b8101908080359060200190929190803590602001909291905050506131ea565b604051808215151515815260200191505060405180910390f35b6110b16004803603602081101561108557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613219565b604051808215151515815260200191505060405180910390f35b6110d3613239565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6111776004803603604081101561112b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061325f565b005b6111a56004803603602081101561118f57600080fd5b8101908080359060200190929190505050613545565b60405180806020018a1515151581526020018981526020018881526020018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182810382528b818151815260200191508051906020019080838360005b83811015611271578082015181840152602081019050611256565b50505050905090810190601f16801561129e5780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b61136d600480360360208110156112ca57600080fd5b81019080803590602001906401000000008111156112e757600080fd5b8201836020820111156112f957600080fd5b8035906020019184600183028401116401000000008311171561131b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050613678565b005b6113b16004803603602081101561138557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613ce9565b005b6113df600480360360208110156113c957600080fd5b8101908080359060200190929190505050613d06565b6040518082815260200191505060405180910390f35b6113fd613d1e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b611447613d44565b6040518082815260200191505060405180910390f35b60008060018301600a0a850290506000600a600586848161147a57fe5b04018161148357fe5b04905080925050509392505050565b60006076826040518082805190602001908083835b602083106114ca57805182526020820191506020810190506020830392506114a7565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020549050919050565b60726020528060005260406000206000915090505481565b60011515606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aaa746bb336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156115c057600080fd5b505afa1580156115d4573d6000803e3d6000fd5b505050506040513d60208110156115ea57600080fd5b810190808051906020019092919050505015151461160757600080fd5b6000606e600084815260200190815260200160002090506001151581600a0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141561167e57600080fd5b600115158160010160009054906101000a900460ff16151514156116a157600080fd5b60008160090180548091906001016116b9919061462e565b9050604051806040016040528084151581526020013373ffffffffffffffffffffffffffffffffffffffff168152508260090182815481106116f757fe5b9060005260206000200160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600182600a0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634777e8ea336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561186657600080fd5b505af115801561187a573d6000803e3d6000fd5b505050507f8eb81cb806dbb3d8a2f94981614331a55dfd90e06a42fdc362ca3ca96981d92f3384604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663997072f76040518163ffffffff1660e01b815260040160206040518083038186803b15801561195757600080fd5b505afa15801561196b573d6000803e3d6000fd5b505050506040513d602081101561198157600080fd5b8101908080519060200190929190505050905060006119a78460090180549050836131ea565b905080156119ba576119b98683613d4a565b5b505050505050565b606d602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a6e5780601f10611a4357610100808354040283529160200191611a6e565b820191906000526020600020905b815481529060010190602001808311611a5157829003601f168201915b5050505050908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16908060020154908060030154908060040154908060050154908060060154908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508a565b6060607760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611b9357602002820191906000526020600020905b815481526020019060010190808311611b7f575b50505050509050919050565b60695481565b600080611bb48484600261145d565b9050603c8110611bc8576001915050611bce565b60009150505b92915050565b60685481565b6075602052816000526040600020602052806000526040600020600091509150505481565b611c076123e0565b611c1057600080fd5b80606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080606d6000848152602001908152602001600020905080600a0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b606c6020528060005260406000206000915090505481565b606a60008154809291906001019190505550606a546076896040518082805190602001908083835b60208310611d275780518252602082019150602081019050602083039250611d04565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020819055506000606486890281611d6c57fe5b0490506000606d6000606a548152602001908152602001600020905089816000019080519060200190611da092919061465a565b5060008160010160006101000a81548160ff02191690831515021790555060008160010160016101000a81548160ff021916908315150217905550888160020181905550818160030181905550858160050181905550848160060181905550878160040181905550838160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f544a88757adcb29711e2e12a617fb44221880d5013615cf2dbbdb37f5d5059738a6040518080602001828103825283818151815260200191508051906020019080838360005b83811015611ef0578082015181840152602081019050611ed5565b50505050905090810190601f168015611f1d5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150505050505050505050565b60746020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806007018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561208c5780601f106120615761010080835404028352916020019161208c565b820191906000526020600020905b81548152906001019060200180831161206f57829003601f168201915b5050505050905088565b61209e6123e0565b6120a757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b606b5481565b600060019054906101000a900460ff168061218d575061218c613f8a565b5b806121a457506000809054906101000a900460ff16155b6121f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061487e602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612249576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61225233612fbf565b683635c9adc5dea0000060698190555042606881905550801561228a5760008060016101000a81548160ff0219169083151502179055505b50565b606f6020528060005260406000206000915090505481565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606d600083815260200190815260200160002090508060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461234257600080fd5b828160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000607360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612423613f9b565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6000606c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dc8e79fb846040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156125185780820151818401526020810190506124fd565b50505050905090810190601f1680156125455780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561256257600080fd5b505afa158015612576573d6000803e3d6000fd5b505050506040513d602081101561258c57600080fd5b810190808051906020019092919050505090506000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663817c8966836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561264057600080fd5b505afa158015612654573d6000803e3d6000fd5b505050506040513d602081101561266a57600080fd5b810190808051906020019092919050505090506000606d60008981526020019081526020016000209050606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aaa746bb846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561273357600080fd5b505afa158015612747573d6000803e3d6000fd5b505050506040513d602081101561275d57600080fd5b810190808051906020019092919050505061277757600080fd5b806006015482101561278857600080fd5b8060010160009054906101000a900460ff166127a357600080fd5b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c812a6018483600501546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561285057600080fd5b505af1158015612864573d6000803e3d6000fd5b5050505060008160030154826002015403905060008260070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000607460008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508281600001819055508a816001018190555083600301548160020181905550818160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550898160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550858160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550888160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086816007019080519060200190612a2692919061465a565b50600073ffffffffffffffffffffffffffffffffffffffff168160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612ac457858160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b607160008c8152602001908152602001600020600081548092919060010191905055607160008d8152602001908152602001600020819055506001607360008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550607560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c8152602001908152602001600020600081548092919060010191905055607560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d815260200190815260200160002081905550606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634777e8ea876040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015612ca957600080fd5b505af1158015612cbd573d6000803e3d6000fd5b5050505042607260008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f5f3846e5f661cdab5e659252fcf86d485b1390b32b8445afbc165881296513338a87604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050505050505050505050565b60006076896040518082805190602001908083835b60208310612de15780518252602082019150602081019050602083039250612dbe565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390205490506000606e6000838152602001908152602001600020905089816000019080519060200190612e4692919061465a565b5060008160010160006101000a81548160ff021916908315150217905550888160020181905550868160030181905550858160050181905550848160060181905550878160040181905550838160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f544a88757adcb29711e2e12a617fb44221880d5013615cf2dbbdb37f5d5059738a6040518080602001828103825283818151815260200191508051906020019080838360005b83811015612f79578082015181840152602081019050612f5e565b50505050905090810190601f168015612fa65780820380516001836020036101000a031916815260200191505b509250505060405180910390a150505050505050505050565b600060019054906101000a900460ff1680612fde5750612fdd613f8a565b5b80612ff557506000809054906101000a900460ff16155b61304a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061487e602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561309a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380156131795760008060016101000a81548160ff0219169083151502179055505b5050565b6131856123e0565b61318e57600080fd5b80606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60706020528060005260406000206000915090505481565b6000806131f98484600261145d565b90506050811061320d576001915050613213565b60009150505b92915050565b60736020528060005260406000206000915054906101000a900460ff1681565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6132676146da565b607460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600782018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156134c15780601f10613496576101008083540402835291602001916134c1565b820191906000526020600020905b8154815290600101906020018083116134a457829003601f168201915b50505050508152505090508060c0015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461350857600080fd5b828160c0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050505050565b606e602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156135f15780601f106135c6576101008083540402835291602001916135f1565b820191906000526020600020905b8154815290600101906020018083116135d457829003601f168201915b5050505050908060010160009054906101000a900460ff16908060020154908060030154908060040154908060050154908060060154908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905089565b607360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166136ce57600080fd5b60003390506136db6146da565b607460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600782018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156139355780601f1061390a57610100808354040283529160200191613935565b820191906000526020600020905b81548152906001019060200180831161391857829003601f168201915b50505050508152505090508060e001516040516020018082805190602001908083835b6020831061397b5780518252602082019150602081019050602083039250613958565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120836040516020018082805190602001908083835b602083106139ed57805182526020820191506020810190506020830392506139ca565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014613a3257600080fd5b6000816020015190506000606d6000838152602001908152602001600020905060006001607060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540190508160040154607260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401421015613aeb57600080fd5b606f600084815260200190815260200160002054811115613bb557613b0f85613fa3565b42607260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080606f6000858152602001908152602001600020819055506000607060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550613ce1565b42607260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080607060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f7e0163293172761353775ed5413c5650c56917cf163cbd6293a4636b6a87a6e6858560c0015183604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15b505050505050565b613cf16123e0565b613cfa57600080fd5b613d0381614534565b50565b60716020528060005260406000206000915090505481565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606a5481565b6000606d600084815260200190815260200160002090506000606e60008581526020019081526020016000209050600080905060008090505b8360090180549050811015613dd9576000846009018281548110613da357fe5b9060005260206000200190508060000160009054906101000a900460ff1615613dcd576001830192505b50806001019050613d83565b506000613de68286611ba5565b90508015613f475760018360010160006101000a81548160ff02191690831515021790555082600001846000019080546001816001161561010002031660029004613e32929190614777565b5082600201548460020181905550826003015484600301819055508260050154846005018190555082600601548460060181905550826004015484600401819055508260070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613f82565b60008460010160016101000a81548160ff02191690831515021790555060018460010160006101000a81548160ff0219169083151502179055505b505050505050565b600080303b90506000811491505090565b600033905090565b613fab6146da565b607460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600782018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156142055780601f106141da57610100808354040283529160200191614205565b820191906000526020600020905b8154815290600101906020018083116141e857829003601f168201915b5050505050815250509050606b600081548092919060010191905055506000600282600001518161423257fe5b049050606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636326e4ce8360a00151836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156142e257600080fd5b505af11580156142f6573d6000803e3d6000fd5b50505050606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636326e4ce8360c00151836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156143a757600080fd5b505af11580156143bb573d6000803e3d6000fd5b50505050606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636326e4ce836060015184604001516040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561447057600080fd5b505af1158015614484573d6000803e3d6000fd5b505050507f8a950e000c348dbaa89e6f160262461c978e369ad1596e8697d08cd54d851540838360c001518460200151604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561456e57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8154818355818111156146555781836000526020600020918201910161465491906147fe565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061469b57805160ff19168380011785556146c9565b828001600101855582156146c9579182015b828111156146c85782518255916020019190600101906146ad565b5b5090506146d69190614858565b5090565b604051806101000160405280600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106147b057805485556147ed565b828001600101855582156147ed57600052602060002091601f016020900482015b828111156147ec5782548255916001019190600101906147d1565b5b5090506147fa9190614858565b5090565b61485591905b8082111561485157600080820160006101000a81549060ff02191690556000820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101614804565b5090565b90565b61487a91905b8082111561487657600081600090555060010161485e565b5090565b9056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a165627a7a723058209e459bee40bd05e32b53f034c06ff1d67965e4e346bd15b7597655deb9d645410029",
  "deployedBytecode": "",
  "sourceMap": "56:5406:2:-;;;;;;;;;",
  "deployedSourceMap": "56:5406:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;56:5406:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6259:397:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6259:397:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12042:121;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12042:121:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;12042:121:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12042:121:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;12042:121:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;12042:121:3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2695:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2695:54:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1374:1567:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1374:1567:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2165:50:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2165:50:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2165:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12173:129;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12173:129:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12173:129:3;;;;;;;;;;;;;;;;;1889:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7019:379;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7019:379:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1854:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2855:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2855:57:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5147:105:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5147:105:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;11664:226:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11664:226:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2118:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2118:43:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4734:897;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4734:897:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4734:897:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4734:897:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4734:897:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4734:897:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2801:50;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2801:50:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2801:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:137:17;;;:::i;:::-;;1955:26:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;111:159:2;;;:::i;:::-;;2287:42:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2287:42:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;804:77:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12312:271:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12312:271:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4803:108:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4803:108:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1124:92:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4914:107:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4914:107:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;526:1957:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;526:1957:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;526:1957:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;526:1957:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;526:1957:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;526:1957:4;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;526:1957:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;526:1957:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;526:1957:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;526:1957:4;;;;;;;;;;;;;;;:::i;:::-;;485:778:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;485:778:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;485:778:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;485:778:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;485:778:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;485:778:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;599:142:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;599:142:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;5023:122:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5023:122:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;2333:50:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2333:50:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6666:343;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6666:343:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2753:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2753:44:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1613:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5256:203:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5256:203:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2219:64:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2219:64:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2219:64:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1367:2355:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1367:2355:5;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1367:2355:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1367:2355:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1367:2355:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1367:2355:5;;;;;;;;;;;;;;;:::i;:::-;;1878:107:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1878:107:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;2648:43:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2648:43:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1642:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1920:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6259:397;6346:13;6434:15;6482:1;6472:9;:11;6465:2;:19;6453:9;:31;6434:50;;6547:14;6600:2;6595:1;6580:11;6567:10;:24;;;;;;6566:30;6565:37;;;;;;6547:55;;6629:9;6620:19;;;;6259:397;;;;;:::o;12042:121::-;12101:4;12133:7;12141:4;12133:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;12133:13:3;;;;;;;;;;;;;;;;;;;;;;12126:20;;12042:121;;;:::o;2695:54::-;;;;;;;;;;;;;;;;;:::o;1374:1567:2:-;1545:4;1509:40;;:5;;;;;;;;;;;:20;;;1530:10;1509:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1509:32:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1509:32:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1509:32:2;;;;;;;;;;;;;;;;:40;;;1501:49;;;;;;1562:29;1594:20;:37;1615:15;1594:37;;;;;;;;;;;1562:69;;1719:4;1695:28;;:1;:8;;:20;1704:10;1695:20;;;;;;;;;;;;;;;;;;;;;;;;;:28;;;;1687:37;;;;;;1833:4;1818:19;;:1;:11;;;;;;;;;;;;:19;;;;1810:28;;;;;;1908:11;1922:1;:8;;:17;;;;;;;;;;;:::i;:::-;1908:31;;2045:54;;;;;;;;2062:16;2045:54;;;;;;2087:10;2045:54;;;;;2026:1;:8;;2035:6;2026:16;;;;;;;;;;;;;;;:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2228:4;2205:1;:8;;:20;2214:10;2205:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2303:5;;;;;;;;;;;:20;;;2324:10;2303:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2303:32:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2303:32:2;;;;2403:35;2409:10;2421:16;2403:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2480:14;2497:5;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2497:22:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2497:22:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2497:22:2;;;;;;;;;;;;;;;;2480:39;;2586:10;2599:41;2613:1;:8;;:15;;;;2630:9;2599:13;:41::i;:::-;2586:54;;2811:5;2808:125;;;2832:41;2846:15;2863:9;2832:13;:41::i;:::-;2808:125;1374:1567;;;;;;:::o;2165:50:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12173:129::-;12227:13;12264:15;:21;12280:4;12264:21;;;;;;;;;;;;;;;12257:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12173:129;;;:::o;1889:27::-;;;;:::o;7019:379::-;7100:4;7126:19;7148:33;7156:10;7168:8;7178:1;7148:7;:33::i;:::-;7126:55;;7225:2;7207:14;:20;7204:168;;7265:4;7258:11;;;;;7204:168;7337:5;7330:12;;;7019:379;;;;;:::o;1854:31::-;;;;:::o;2855:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5147:105:2:-;1008:9:17;:7;:9::i;:::-;1000:18;;;;;;5234:6:2;5213:5;;:28;;;;;;;;;;;;;;;;;;5147:105;:::o;11664:226:3:-;11746:4;11774:22;11799:13;:30;11813:15;11799:30;;;;;;;;;;;11774:55;;11858:1;:7;;:13;11866:4;11858:13;;;;;;;;;;;;;;;;;;;;;;;;;11851:20;;;11664:226;;;;:::o;2118:43::-;;;;;;;;;;;;;;;;;:::o;4734:897::-;4978:19;;:21;;;;;;;;;;;;;5033:19;;5012:7;5020:9;5012:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5012:18:3;;;;;;;;;;;;;;;;;;;;;:40;;;;5065:12;5115:3;5104:8;5080:21;:32;:38;;;;;;5065:53;;5131:22;5156:13;:34;5170:19;;5156:34;;;;;;;;;;;5131:59;;5215:9;5202:1;:10;;:22;;;;;;;;;;;;:::i;:::-;;5250:5;5236:1;:11;;;:19;;;;;;;;;;;;;;;;;;5280:5;5267:1;:10;;;:18;;;;;;;;;;;;;;;;;;5322:21;5297:1;:22;;:46;;;;5367:7;5355:1;:9;;:19;;;;5402:12;5386:1;:13;;:28;;;;5447:17;5426:1;:18;;:38;;;;5491:11;5476:1;:12;;:26;;;;5534:9;5514:1;:17;;;:29;;;;;;;;;;;;;;;;;;5576:10;5555:1;:18;;;:31;;;;;;;;;;;;;;;;;;5603:23;5616:9;5603:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5603:23:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4734:897;;;;;;;;;;:::o;2801:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1570:137:17:-;1008:9;:7;:9::i;:::-;1000:18;;;;;;1668:1;1631:40;;1652:6;;;;;;;;;;;1631:40;;;;;;;;;;;;1698:1;1681:6;;:19;;;;;;;;;;;;;;;;;;1570:137::o;1955:26:3:-;;;;:::o;111:159:2:-;1024:12:21;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;158:30:2;177:10;158:18;:30::i;:::-;212:22;194:15;:40;;;;262:3;240:19;:25;;;;1268:14:21;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;111:159:2;:::o;2287:42:3:-;;;;;;;;;;;;;;;;;:::o;804:77:17:-;842:7;868:6;;;;;;;;;;;861:13;;804:77;:::o;12312:271:3:-;12406:22;12431:13;:30;12445:15;12431:30;;;;;;;;;;;12406:55;;12501:1;:17;;;;;;;;;;;;12487:31;;:10;:31;;;12479:40;;;;;;12557:9;12537:1;:17;;;:29;;;;;;;;;;;;;;;;;;12312:271;;;:::o;4803:108:2:-;4859:4;4882:12;:18;4895:4;4882:18;;;;;;;;;;;;;;;;;;;;;;;;;4875:25;;4803:108;;;:::o;1124:92:17:-;1164:4;1203:6;;;;;;;;;;;1187:22;;:12;:10;:12::i;:::-;:22;;;1180:29;;1124:92;:::o;4914:107:2:-;4967:4;4989:11;:21;5001:8;4989:21;;;;;;;;;;;;;;;;4982:28;;4914:107;;;:::o;526:1957:4:-;670:14;687:5;;;;;;;;;;;:20;;;708:7;687:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;687:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;687:29:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;687:29:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;687:29:4;;;;;;;;;;;;;;;;670:46;;769:10;782:5;;;;;;;;;;;:14;;;797:6;782:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;782:22:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;782:22:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;782:22:4;;;;;;;;;;;;;;;;769:35;;833:25;861:13;:22;875:7;861:22;;;;;;;;;;;833:50;;934:5;;;;;;;;;;;:20;;;955:6;934:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;934:28:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;934:28:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;934:28:4;;;;;;;;;;;;;;;;926:37;;;;;;1041:4;:21;;;1032:5;:30;;1024:39;;;;;;1169:4;:14;;;;;;;;;;;;1161:23;;;;;;1233:5;;;;;;;;;;;:18;;;1252:6;1260:4;:16;;;1233:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1233:44:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1233:44:4;;;;1353:16;1400:4;:12;;;1372:4;:25;;;:40;1353:59;;1471:16;1490:4;:20;;;;;;;;;;;;1471:39;;1573:25;1601:7;:16;1609:7;1601:16;;;;;;;;;;;;;;;1573:44;;1639:11;1623:1;:13;;:27;;;;1667:7;1656:1;:8;;:18;;;;1692:4;:12;;;1680:1;:9;;:24;;;;1731:8;1710:1;:18;;;:29;;;;;;;;;;;;;;;;;;1768:7;1745:1;:20;;;:30;;;;;;;;;;;;;;;;;;1803:6;1781:1;:19;;;:28;;;;;;;;;;;;;;;;;;1833:9;1815:1;:15;;;:27;;;;;;;;;;;;;;;;;;1867:7;1848:1;:16;;:26;;;;;;;;;;;;:::i;:::-;;1944:42;1925:61;;:1;:15;;;;;;;;;;;;:61;;;1922:101;;;2012:6;1994:1;:15;;;:24;;;;;;;;;;;;;;;;;;1922:101;2055:14;:23;2070:7;2055:23;;;;;;;;;;;;:25;;;;;;;;;;;;2029:14;:23;2044:7;2029:23;;;;;;;;;;;:51;;;;2168:4;2144:12;:21;2157:7;2144:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;2256:8;:16;2265:6;2256:16;;;;;;;;;;;;;;;:25;2273:7;2256:25;;;;;;;;;;;;:27;;;;;;;;;;;;2228:8;:16;2237:6;2228:16;;;;;;;;;;;;;;;:25;2245:7;2228:25;;;;;;;;;;;:55;;;;2363:5;;;;;;;;;;;:20;;;2384:6;2363:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2363:28:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2363:28:4;;;;2431:3;2397:22;:31;2420:7;2397:31;;;;;;;;;;;;;;;:37;;;;2445:31;2460:7;2469:6;2445:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;526:1957;;;;;;;;;;;:::o;485:778:2:-;738:11;752:7;760:9;752:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;752:18:2;;;;;;;;;;;;;;;;;;;;;;738:32;;783:29;815:20;:28;836:6;815:28;;;;;;;;;;;783:60;;869:9;855:1;:11;;:23;;;;;;;;;;;;:::i;:::-;;904:5;890:1;:11;;;:19;;;;;;;;;;;;;;;;;;947:21;921:1;:23;;:47;;;;993:8;980:1;:10;;:21;;;;1030:12;1013:1;:14;;:29;;;;1076:17;1054:1;:19;;:39;;;;1121:11;1105:1;:13;;:27;;;;1165:9;1144:1;:18;;;:30;;;;;;;;;;;;;;;;;;1208:10;1186:1;:19;;;:32;;;;;;;;;;;;;;;;;;1235:23;1248:9;1235:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1235:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;485:778;;;;;;;;;;:::o;599:142:17:-;1024:12:21;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;673:6:17;664;;:15;;;;;;;;;;;;;;;;;;727:6;;;;;;;;;;;694:40;;723:1;694:40;;;;;;;;;;;;1268:14:21;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;599:142:17;;:::o;5023:122:2:-;1008:9:17;:7;:9::i;:::-;1000:18;;;;;;5126:7:2;5097:10;;:37;;;;;;;;;;;;;;;;;;5023:122;:::o;2333:50:3:-;;;;;;;;;;;;;;;;;:::o;6666:343::-;6741:4;6767:19;6789:33;6797:10;6809:8;6819:1;6789:7;:33::i;:::-;6767:55;;6864:2;6846:14;:20;6843:148;;6900:4;6893:11;;;;;6843:148;6964:5;6957:12;;;6666:343;;;;;:::o;2753:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;1613:25::-;;;;;;;;;;;;;:::o;5256:203:2:-;5331:28;;:::i;:::-;5362:7;:13;5370:4;5362:13;;;;;;;;;;;;;;;5331:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5401:5;:19;;;5387:33;;:10;:33;;;5379:42;;;;;;5447:9;5425:5;:19;;:31;;;;;;;;;;;5256:203;;;:::o;2219:64:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1367:2355:5:-;1509:12;:24;1522:10;1509:24;;;;;;;;;;;;;;;;;;;;;;;;;1501:33;;;;;;1540:12;1555:10;1540:25;;1637:28;;:::i;:::-;1668:7;:13;1676:4;1668:13;;;;;;;;;;;;;;;1637:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2001:5;:20;;;1983:40;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1983:40:5;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1983:40:5;;;1973:51;;;;;;1959:7;1941:27;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1941:27:5;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1941:27:5;;;1931:38;;;;;;:93;1923:102;;;;;;2113:11;2127:5;:12;;;2113:26;;2213:25;2241:13;:21;2255:6;2241:21;;;;;;;;;;;2213:49;;2337:14;2381:1;2354:18;:24;2373:4;2354:24;;;;;;;;;;;;;;;;:28;2337:45;;2487:4;:15;;;2455:22;:28;2478:4;2455:28;;;;;;;;;;;;;;;;:47;2448:3;:54;;2440:63;;;;;;2729:13;:21;2743:6;2729:21;;;;;;;;;;;;2717:9;:33;2714:1004;;;2812:28;2835:4;2812:22;:28::i;:::-;2925:3;2894:22;:28;2917:4;2894:28;;;;;;;;;;;;;;;:34;;;;3039:9;3015:13;:21;3029:6;3015:21;;;;;;;;;;;:33;;;;3155:1;3128:18;:24;3147:4;3128:24;;;;;;;;;;;;;;;:28;;;;2714:1004;;;3342:3;3311:22;:28;3334:4;3311:28;;;;;;;;;;;;;;;:34;;;;3477:9;3450:18;:24;3469:4;3450:24;;;;;;;;;;;;;;;:36;;;;3566:52;3581:4;3587:5;:19;;;3608:9;3566:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2714:1004;1367:2355;;;;;;:::o;1878:107:17:-;1008:9;:7;:9::i;:::-;1000:18;;;;;;1950:28;1969:8;1950:18;:28::i;:::-;1878:107;:::o;2648:43:3:-;;;;;;;;;;;;;;;;;:::o;1642:33::-;;;;;;;;;;;;;:::o;1920:31::-;;;;:::o;3244:1356:2:-;3326:22;3351:13;:30;3365:15;3351:30;;;;;;;;;;;3326:55;;3470:29;3502:20;:37;3523:15;3502:37;;;;;;;;;;;3470:69;;3551:8;3562:1;3551:12;;3578:6;3587:1;3578:10;;3573:166;3595:1;:7;;:14;;;;3590:1;:19;3573:166;;;3628:14;3645:1;:7;;3653:1;3645:10;;;;;;;;;;;;;;;3628:27;;3672:1;:11;;;;;;;;;;;;3668:57;;;3706:1;3699:8;;;;3668:57;3573:166;3611:3;;;;;3573:166;;;;3753:11;3767:35;3787:3;3792:9;3767:19;:35::i;:::-;3753:49;;3914:6;3910:680;;;4019:4;4005:1;:11;;;:18;;;;;;;;;;;;;;;;;;4056:1;:11;;4041:1;:10;;:26;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4110:1;:23;;;4085:1;:22;;:48;;;;4163:1;:10;;;4151:1;:9;;:22;;;;4207:1;:14;;;4191:1;:13;;:30;;;;4260:1;:19;;;4239:1;:18;;:40;;;;4312:1;:13;;;4297:1;:12;;:28;;;;4363:1;:18;;;;;;;;;;;;4343:1;:17;;;:38;;;;;;;;;;;;;;;;;;4420:1;:19;;;;;;;;;;;;4399:1;:18;;;:40;;;;;;;;;;;;;;;;;;3910:680;;;4532:5;4519:1;:10;;;:18;;;;;;;;;;;;;;;;;;4570:4;4556:1;:11;;;:18;;;;;;;;;;;;;;;;;;3910:680;3244:1356;;;;;;:::o;1409:467:21:-;1456:4;1797:10;1842:7;1830:20;1824:26;;1870:1;1864:2;:7;1857:14;;;1409:467;:::o;791:88:15:-;836:7;862:10;855:17;;791:88;:::o;276:947:5:-;335:28;;:::i;:::-;366:7;:13;374:4;366:13;;;;;;;;;;;;;;;335:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:14;;:16;;;;;;;;;;;;;706:13;742:1;722:5;:17;;;:21;;;;;;706:37;;827:5;;;;;;;;;;;:18;;;846:5;:23;;;871:8;827:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;827:53:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;827:53:5;;;;943:5;;;;;;;;;;;:18;;;962:5;:19;;;983:8;943:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;943:49:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;943:49:5;;;;1054:5;;;;;;;;;;;:18;;;1073:5;:22;;;1097:5;:13;;;1054:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1054:57:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1054:57:5;;;;1163:55;1178:4;1184:5;:19;;;1205:5;:12;;;1163:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;276:947;;;:::o;2129:183:17:-;2222:1;2202:22;;:8;:22;;;;2194:31;;;;;;2269:8;2240:38;;2261:6;;;;;;;;;;;2240:38;;;;;;;;;;;;2297:8;2288:6;;:17;;;;;;;;;;;;;;;;;;2129:183;:::o;56:5406:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport './UseBlockLogic.sol';\n\ncontract CryptoPatentBlockchain is UseBlockLogic {\n\n\n  function initialize() public initializer {\n    Ownable.initialize(msg.sender);\n    ideaBlockReward = 1000000000000000000000;\n    globalBlockHalfTime = now;\n  }\n\n  ///@notice proposeIdea is used to allow ANYONE to petition the community for idea approval\n  ///@dev the struct for this is set in interface.solidity\n  ///@dev idea proposals are put up for community approval\n  function proposeIdeaUpgrade(\n    string memory _ideaIPFS,\n\n    uint _globalUseBlockAmount,\n    uint _miningTime,\n    uint _royalty,\n    uint _stakeAmount,\n    uint _levelRequirement,\n    address _inventor,\n    address _invention\n  ) public {\n\n          uint ideaID = getHash[_ideaIPFS];\n\n          IdeaUpgradeProposal storage p = ideaUpgradeProposals[ideaID];\n          p.uIdeaIPFS = _ideaIPFS;\n          p.uexecuted = false;\n          p.uglobalUseBlockAmount = _globalUseBlockAmount;\n          p.uroyalty = _royalty;\n          p.ustakeAmount = _stakeAmount;\n          p.ulevelRequirement = _levelRequirement;\n          p.uminingTime = _miningTime;\n          p.uinventorAddress = _inventor;\n          p.uinventionAddress = _invention;\n          emit IdeaProposed(_ideaIPFS);\n  }\n\n\n  ///@notice vote is a member only function which allows DecentraCorp members to vote on proposalPassed\n\n   function ideaVote(\n          uint _ideaProposalID,\n          bool supportsProposal\n      )\n          public\n\n      {\n          require(DCPoA._checkIfMember(msg.sender) == true);\n          IdeaUpgradeProposal storage p = ideaUpgradeProposals[_ideaProposalID];\n          //makes the proposal an object, p\n          require(p.uvoted[msg.sender] != true);\n          //requires that the person calling the function hasnt voted yet\n          require(p.uexecuted != true);\n          //requires the proposal hasnt been executed yet\n          uint voteID = p.uvotes.length++;\n          //sets voteID to the length of the votes array for that proposal\n          p.uvotes[voteID] = Vote({inSupport: supportsProposal, voter: msg.sender});\n          //sets the individual Vote struct  properties to a voteID within votes struct array\n          p.uvoted[msg.sender] = true;\n          //sets the voter to true so they cant vote twice\n          DCPoA.increaseMemLev(msg.sender);\n          //increases the members level for voting\n          emit Voted(msg.sender, supportsProposal);\n          //emits Voted event\n          uint maxQuorum = DCPoA.getMemberCount();\n          //sets maxQuorum equal to total # of members\n          bool tally = setVoteQuorum(p.uvotes.length, maxQuorum);\n          //sets tally to either true of false depending if the # of members that have voted\n          //must be greater than 80% of the total # of members\n          if(tally) {\n            ideaBlockVote(_ideaProposalID, maxQuorum);\n            //fires of the vote tally function\n          }\n      }\n\n\n  // allows members to vote on proposals\n  ///@notice ideaBlockVote counts the votes and executes and Idea Proposal, adding an idea to the cryptopatent Blockchain\n  ///@dev seperate but similiar structures will need to be implemented in the future to stream line voting on different subjects(beta)\n  function ideaBlockVote(uint _ideaProposalID, uint maxQuorum) internal {\n          IdeaProposal storage p = ideaProposals[_ideaProposalID];\n               // sets p equal to the specific proposalNumbers struct\n                 IdeaUpgradeProposal storage u = ideaUpgradeProposals[_ideaProposalID];\n          uint yea = 0;\n\n\n      for (uint i = 0; i <  p.votes.length; ++i) {\n          Vote storage v = p.votes[i];\n\n          if (v.inSupport) {\n            yea += 1;\n               }\n            }\n\n            bool passes = setVoteNumberQuorum(yea, maxQuorum);\n        //checks if the number of yea votes is 60% or more of the total number of members\n\n               if (passes) {\n                   // Proposal passed; execute the transaction\n\n                 u.uexecuted = true;\n                p.IdeaIPFS =   u.uIdeaIPFS;\n                p.globalUseBlockAmount = u.uglobalUseBlockAmount;\n                p.royalty = u.uroyalty;\n                p.stakeAmount = u.ustakeAmount;\n                p.levelRequirement = u.ulevelRequirement;\n                p.miningTime = u.uminingTime;\n                p.inventorAddress = u.uinventorAddress;\n                p.inventionAddress = u.uinventionAddress;\n\n             } else {\n                   // Proposal failed\n                 p.executed = false;\n                 p.IdeaBlock = true;\n             }\n        }\n\n\n\n  ///@notice the following functions allow for easier access to info by both the front end and other contracts\n  ///@dev all the following contracts allow for the retreval of token block information\nfunction checkIfRep(address _add) external view returns(bool) {\n        return replications[_add];\n        }\n\n\nfunction getID(address _ideaAdd) public view returns(uint){\n        return IdeaAddToId[_ideaAdd];\n        }\n\nfunction setValidatorContract(address _valCon) public onlyOwner {\n        Validators = RelayedOwnedSet(_valCon);\n        }\n\nfunction setDCPoA(DecentraCorp _dcpoa) public onlyOwner {\n        DCPoA = DecentraCorp(_dcpoa);\n        }\n\n\n\nfunction transferRepBlock(address _newOwner, address _rep) public view {\n  ReplicationInfo memory infoR = repInfo[_rep];\n  require(msg.sender == infoR.OwnersAddress);\n  infoR.OwnersAddress = _newOwner;\n}\n\n}\n",
  "sourcePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/CryptoPatentBlockchain.sol",
  "ast": {
    "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/CryptoPatentBlockchain.sol",
    "exportedSymbols": {
      "CryptoPatentBlockchain": [
        963
      ]
    },
    "id": 964,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 525,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/UseBlockLogic.sol",
        "file": "./UseBlockLogic.sol",
        "id": 526,
        "nodeType": "ImportDirective",
        "scope": 964,
        "sourceUnit": 2132,
        "src": "25:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 527,
              "name": "UseBlockLogic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2131,
              "src": "91:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UseBlockLogic_$2131",
                "typeString": "contract UseBlockLogic"
              }
            },
            "id": 528,
            "nodeType": "InheritanceSpecifier",
            "src": "91:13:2"
          }
        ],
        "contractDependencies": [
          1756,
          1948,
          2131,
          4839,
          5089,
          5681
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 963,
        "linearizedBaseContracts": [
          963,
          2131,
          1948,
          1756,
          5089,
          4839,
          5681
        ],
        "name": "CryptoPatentBlockchain",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 548,
              "nodeType": "Block",
              "src": "152:118:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 536,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5696,
                          "src": "177:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "177:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 533,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5089,
                        "src": "158:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$5089_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5002,
                      "src": "158:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "158:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 539,
                  "nodeType": "ExpressionStatement",
                  "src": "158:30:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 540,
                      "name": "ideaBlockReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1045,
                      "src": "194:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31303030303030303030303030303030303030303030",
                      "id": 541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "212:22:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000000"
                      },
                      "value": "1000000000000000000000"
                    },
                    "src": "194:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "194:40:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 544,
                      "name": "globalBlockHalfTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1043,
                      "src": "240:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 545,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5698,
                      "src": "262:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "240:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "240:25:2"
                }
              ]
            },
            "documentation": null,
            "id": 549,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 531,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 530,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5662,
                  "src": "140:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "140:11:2"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "130:2:2"
            },
            "returnParameters": {
              "id": 532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "152:0:2"
            },
            "scope": 963,
            "src": "111:159:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 638,
              "nodeType": "Block",
              "src": "725:538:2",
              "statements": [
                {
                  "assignments": [
                    569
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 569,
                      "name": "ideaID",
                      "nodeType": "VariableDeclaration",
                      "scope": 638,
                      "src": "738:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 568,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "738:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 573,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 570,
                      "name": "getHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1095,
                      "src": "752:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 572,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 571,
                      "name": "_ideaIPFS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 551,
                      "src": "760:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "752:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "738:32:2"
                },
                {
                  "assignments": [
                    575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 575,
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 638,
                      "src": "783:29:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                        "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 574,
                        "name": "IdeaUpgradeProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1196,
                        "src": "783:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 579,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 576,
                      "name": "ideaUpgradeProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1061,
                      "src": "815:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IdeaUpgradeProposal_$1196_storage_$",
                        "typeString": "mapping(uint256 => struct IdeaBlockLogic.IdeaUpgradeProposal storage ref)"
                      }
                    },
                    "id": 578,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 577,
                      "name": "ideaID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 569,
                      "src": "836:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "815:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage",
                      "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "783:60:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 580,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "855:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                        }
                      },
                      "id": 582,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "uIdeaIPFS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1172,
                      "src": "855:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 583,
                      "name": "_ideaIPFS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 551,
                      "src": "869:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "855:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "855:23:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 586,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "890:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                        }
                      },
                      "id": 588,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "uexecuted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1174,
                      "src": "890:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "904:5:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "890:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 591,
                  "nodeType": "ExpressionStatement",
                  "src": "890:19:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 592,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "921:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                        }
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "uglobalUseBlockAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1176,
                      "src": "921:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 595,
                      "name": "_globalUseBlockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 553,
                      "src": "947:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "921:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "921:47:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 598,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "980:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                        }
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "uroyalty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1178,
                      "src": "980:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 601,
                      "name": "_royalty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 557,
                      "src": "993:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "980:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "980:21:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 604,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "1013:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                        }
                      },
                      "id": 606,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ustakeAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1182,
                      "src": "1013:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 607,
                      "name": "_stakeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "1030:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1013:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "1013:29:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 610,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "1054:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                        }
                      },
                      "id": 612,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ulevelRequirement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1184,
                      "src": "1054:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 613,
                      "name": "_levelRequirement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 561,
                      "src": "1076:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1054:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "1054:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 616,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "1105:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                        }
                      },
                      "id": 618,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "uminingTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1180,
                      "src": "1105:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 619,
                      "name": "_miningTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 555,
                      "src": "1121:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1105:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 621,
                  "nodeType": "ExpressionStatement",
                  "src": "1105:27:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 622,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "1144:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                        }
                      },
                      "id": 624,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "uinventorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1186,
                      "src": "1144:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 625,
                      "name": "_inventor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 563,
                      "src": "1165:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1144:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:30:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 628,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "1186:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                        }
                      },
                      "id": 630,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "uinventionAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1188,
                      "src": "1186:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 631,
                      "name": "_invention",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 565,
                      "src": "1208:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1186:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 633,
                  "nodeType": "ExpressionStatement",
                  "src": "1186:32:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 635,
                        "name": "_ideaIPFS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "1248:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 634,
                      "name": "IdeaProposed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1104,
                      "src": "1235:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1235:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 637,
                  "nodeType": "EmitStatement",
                  "src": "1230:28:2"
                }
              ]
            },
            "documentation": "@notice proposeIdea is used to allow ANYONE to petition the community for idea approval\n@dev the struct for this is set in interface.solidity\n@dev idea proposals are put up for community approval",
            "id": 639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proposeIdeaUpgrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 551,
                  "name": "_ideaIPFS",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "518:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 553,
                  "name": "_globalUseBlockAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "548:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 555,
                  "name": "_miningTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "580:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 554,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 557,
                  "name": "_royalty",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "602:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "602:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 559,
                  "name": "_stakeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "621:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "621:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 561,
                  "name": "_levelRequirement",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "644:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "644:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 563,
                  "name": "_inventor",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "672:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "672:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 565,
                  "name": "_invention",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "695:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "512:205:2"
            },
            "returnParameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "725:0:2"
            },
            "scope": 963,
            "src": "485:778:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 743,
              "nodeType": "Block",
              "src": "1489:1452:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 649,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5696,
                                "src": "1530:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1530:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 647,
                              "name": "DCPoA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1039,
                              "src": "1509:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                                "typeString": "contract DecentraCorp"
                              }
                            },
                            "id": 648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_checkIfMember",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 995,
                            "src": "1509:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1509:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1545:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1509:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 646,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "1501:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1501:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 655,
                  "nodeType": "ExpressionStatement",
                  "src": "1501:49:2"
                },
                {
                  "assignments": [
                    657
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 657,
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 743,
                      "src": "1562:29:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                        "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 656,
                        "name": "IdeaUpgradeProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1196,
                        "src": "1562:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 661,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 658,
                      "name": "ideaUpgradeProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1061,
                      "src": "1594:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IdeaUpgradeProposal_$1196_storage_$",
                        "typeString": "mapping(uint256 => struct IdeaBlockLogic.IdeaUpgradeProposal storage ref)"
                      }
                    },
                    "id": 660,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 659,
                      "name": "_ideaProposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 641,
                      "src": "1615:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1594:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage",
                      "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1562:69:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 663,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 657,
                              "src": "1695:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 664,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "uvoted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1195,
                            "src": "1695:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 667,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 665,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5696,
                              "src": "1704:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1704:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1695:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1719:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1695:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 662,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "1687:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1687:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "1687:37:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 673,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 657,
                            "src": "1818:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                              "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                            }
                          },
                          "id": 674,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "uexecuted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1174,
                          "src": "1818:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1833:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1818:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 672,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "1810:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1810:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:28:2"
                },
                {
                  "assignments": [
                    680
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 680,
                      "name": "voteID",
                      "nodeType": "VariableDeclaration",
                      "scope": 743,
                      "src": "1908:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 679,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1908:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 685,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1922:17:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 681,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 657,
                          "src": "1922:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                            "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                          }
                        },
                        "id": 682,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "uvotes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1191,
                        "src": "1922:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vote_$1201_storage_$dyn_storage",
                          "typeString": "struct IdeaBlockLogic.Vote storage ref[] storage ref"
                        }
                      },
                      "id": 683,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1922:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1908:31:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 686,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 657,
                          "src": "2026:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                            "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                          }
                        },
                        "id": 689,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "uvotes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1191,
                        "src": "2026:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vote_$1201_storage_$dyn_storage",
                          "typeString": "struct IdeaBlockLogic.Vote storage ref[] storage ref"
                        }
                      },
                      "id": 690,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 688,
                        "name": "voteID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "2035:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2026:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vote_$1201_storage",
                        "typeString": "struct IdeaBlockLogic.Vote storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 692,
                          "name": "supportsProposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 643,
                          "src": "2062:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 693,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5696,
                            "src": "2087:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2087:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 691,
                        "name": "Vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1201,
                        "src": "2045:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Vote_$1201_storage_ptr_$",
                          "typeString": "type(struct IdeaBlockLogic.Vote storage pointer)"
                        }
                      },
                      "id": 695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "inSupport",
                        "voter"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2045:54:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vote_$1201_memory",
                        "typeString": "struct IdeaBlockLogic.Vote memory"
                      }
                    },
                    "src": "2026:73:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vote_$1201_storage",
                      "typeString": "struct IdeaBlockLogic.Vote storage ref"
                    }
                  },
                  "id": 697,
                  "nodeType": "ExpressionStatement",
                  "src": "2026:73:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 698,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 657,
                          "src": "2205:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                            "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                          }
                        },
                        "id": 702,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "uvoted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1195,
                        "src": "2205:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 703,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 700,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5696,
                          "src": "2214:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2214:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2205:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2228:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2205:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 706,
                  "nodeType": "ExpressionStatement",
                  "src": "2205:27:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 710,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5696,
                          "src": "2324:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2324:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 707,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "2303:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseMemLev",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1000,
                      "src": "2303:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2303:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "2303:32:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 715,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5696,
                          "src": "2409:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2409:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 717,
                        "name": "supportsProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 643,
                        "src": "2421:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 714,
                      "name": "Voted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1120,
                      "src": "2403:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2403:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 719,
                  "nodeType": "EmitStatement",
                  "src": "2398:40:2"
                },
                {
                  "assignments": [
                    721
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 721,
                      "name": "maxQuorum",
                      "nodeType": "VariableDeclaration",
                      "scope": 743,
                      "src": "2480:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 720,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2480:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 725,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 722,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "2497:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getMemberCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1012,
                      "src": "2497:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2497:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2480:39:2"
                },
                {
                  "assignments": [
                    727
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 727,
                      "name": "tally",
                      "nodeType": "VariableDeclaration",
                      "scope": 743,
                      "src": "2586:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 726,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2586:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 734,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 729,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 657,
                            "src": "2613:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                              "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                            }
                          },
                          "id": 730,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "uvotes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1191,
                          "src": "2613:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Vote_$1201_storage_$dyn_storage",
                            "typeString": "struct IdeaBlockLogic.Vote storage ref[] storage ref"
                          }
                        },
                        "id": 731,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2613:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 732,
                        "name": "maxQuorum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "2630:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 728,
                      "name": "setVoteQuorum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1419,
                      "src": "2599:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) pure returns (bool)"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2599:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2586:54:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 735,
                    "name": "tally",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 727,
                    "src": "2811:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 742,
                  "nodeType": "IfStatement",
                  "src": "2808:125:2",
                  "trueBody": {
                    "id": 741,
                    "nodeType": "Block",
                    "src": "2818:115:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 737,
                              "name": "_ideaProposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 641,
                              "src": "2846:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 738,
                              "name": "maxQuorum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 721,
                              "src": "2863:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 736,
                            "name": "ideaBlockVote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              882
                            ],
                            "referencedDeclaration": 882,
                            "src": "2832:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2832:41:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 740,
                        "nodeType": "ExpressionStatement",
                        "src": "2832:41:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice vote is a member only function which allows DecentraCorp members to vote on proposalPassed",
            "id": 744,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ideaVote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 641,
                  "name": "_ideaProposalID",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "1403:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1403:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 643,
                  "name": "supportsProposal",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "1435:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 642,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1435:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1391:73:2"
            },
            "returnParameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1489:0:2"
            },
            "scope": 963,
            "src": "1374:1567:2",
            "stateMutability": "nonpayable",
            "superFunction": 1552,
            "visibility": "public"
          },
          {
            "body": {
              "id": 881,
              "nodeType": "Block",
              "src": "3314:1286:2",
              "statements": [
                {
                  "assignments": [
                    752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 752,
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 881,
                      "src": "3326:22:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                        "typeString": "struct IdeaBlockLogic.IdeaProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 751,
                        "name": "IdeaProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1170,
                        "src": "3326:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 756,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 753,
                      "name": "ideaProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1057,
                      "src": "3351:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IdeaProposal_$1170_storage_$",
                        "typeString": "mapping(uint256 => struct IdeaBlockLogic.IdeaProposal storage ref)"
                      }
                    },
                    "id": 755,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 754,
                      "name": "_ideaProposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 746,
                      "src": "3365:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3351:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage",
                      "typeString": "struct IdeaBlockLogic.IdeaProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3326:55:2"
                },
                {
                  "assignments": [
                    758
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 758,
                      "name": "u",
                      "nodeType": "VariableDeclaration",
                      "scope": 881,
                      "src": "3470:29:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                        "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 757,
                        "name": "IdeaUpgradeProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1196,
                        "src": "3470:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 762,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 759,
                      "name": "ideaUpgradeProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1061,
                      "src": "3502:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IdeaUpgradeProposal_$1196_storage_$",
                        "typeString": "mapping(uint256 => struct IdeaBlockLogic.IdeaUpgradeProposal storage ref)"
                      }
                    },
                    "id": 761,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 760,
                      "name": "_ideaProposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 746,
                      "src": "3523:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3502:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage",
                      "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3470:69:2"
                },
                {
                  "assignments": [
                    764
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 764,
                      "name": "yea",
                      "nodeType": "VariableDeclaration",
                      "scope": 881,
                      "src": "3551:8:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 763,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3551:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 766,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3562:1:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3551:12:2"
                },
                {
                  "body": {
                    "id": 794,
                    "nodeType": "Block",
                    "src": "3616:123:2",
                    "statements": [
                      {
                        "assignments": [
                          780
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 780,
                            "name": "v",
                            "nodeType": "VariableDeclaration",
                            "scope": 794,
                            "src": "3628:14:2",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vote_$1201_storage_ptr",
                              "typeString": "struct IdeaBlockLogic.Vote"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 779,
                              "name": "Vote",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1201,
                              "src": "3628:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vote_$1201_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.Vote"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 785,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 781,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "3645:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 782,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "votes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1165,
                            "src": "3645:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Vote_$1201_storage_$dyn_storage",
                              "typeString": "struct IdeaBlockLogic.Vote storage ref[] storage ref"
                            }
                          },
                          "id": 784,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 783,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "3653:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3645:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vote_$1201_storage",
                            "typeString": "struct IdeaBlockLogic.Vote storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3628:27:2"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 786,
                            "name": "v",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 780,
                            "src": "3672:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vote_$1201_storage_ptr",
                              "typeString": "struct IdeaBlockLogic.Vote storage pointer"
                            }
                          },
                          "id": 787,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "inSupport",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1198,
                          "src": "3672:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 793,
                        "nodeType": "IfStatement",
                        "src": "3668:57:2",
                        "trueBody": {
                          "id": 792,
                          "nodeType": "Block",
                          "src": "3685:40:2",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 790,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 788,
                                  "name": "yea",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 764,
                                  "src": "3699:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 789,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3706:1:2",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "3699:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 791,
                              "nodeType": "ExpressionStatement",
                              "src": "3699:8:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 771,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 768,
                      "src": "3590:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 772,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 752,
                          "src": "3595:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                            "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1165,
                        "src": "3595:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vote_$1201_storage_$dyn_storage",
                          "typeString": "struct IdeaBlockLogic.Vote storage ref[] storage ref"
                        }
                      },
                      "id": 774,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3595:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3590:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 795,
                  "initializationExpression": {
                    "assignments": [
                      768
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 768,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 795,
                        "src": "3578:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 767,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3578:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 770,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3587:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3578:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "3611:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 776,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 768,
                        "src": "3613:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 778,
                    "nodeType": "ExpressionStatement",
                    "src": "3611:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3573:166:2"
                },
                {
                  "assignments": [
                    797
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 797,
                      "name": "passes",
                      "nodeType": "VariableDeclaration",
                      "scope": 881,
                      "src": "3753:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 796,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3753:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 802,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 799,
                        "name": "yea",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 764,
                        "src": "3787:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 800,
                        "name": "maxQuorum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "3792:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 798,
                      "name": "setVoteNumberQuorum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1447,
                      "src": "3767:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) pure returns (bool)"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3767:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3753:49:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 803,
                    "name": "passes",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 797,
                    "src": "3914:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 879,
                    "nodeType": "Block",
                    "src": "4462:128:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 867,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4519:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 869,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "executed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1148,
                            "src": "4519:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4532:5:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "4519:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 872,
                        "nodeType": "ExpressionStatement",
                        "src": "4519:18:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 873,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4556:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 875,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "IdeaBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1146,
                            "src": "4556:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4570:4:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4556:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 878,
                        "nodeType": "ExpressionStatement",
                        "src": "4556:18:2"
                      }
                    ]
                  },
                  "id": 880,
                  "nodeType": "IfStatement",
                  "src": "3910:680:2",
                  "trueBody": {
                    "id": 866,
                    "nodeType": "Block",
                    "src": "3922:534:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 804,
                              "name": "u",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "4005:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 806,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "uexecuted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1174,
                            "src": "4005:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4019:4:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4005:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 809,
                        "nodeType": "ExpressionStatement",
                        "src": "4005:18:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 810,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4041:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 812,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "IdeaIPFS",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1144,
                            "src": "4041:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 813,
                              "name": "u",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "4056:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 814,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "uIdeaIPFS",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1172,
                            "src": "4056:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "src": "4041:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 816,
                        "nodeType": "ExpressionStatement",
                        "src": "4041:26:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 817,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4085:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 819,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "globalUseBlockAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1150,
                            "src": "4085:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 820,
                              "name": "u",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "4110:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 821,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "uglobalUseBlockAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1176,
                            "src": "4110:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4085:48:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 823,
                        "nodeType": "ExpressionStatement",
                        "src": "4085:48:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 824,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4151:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 826,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "royalty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1152,
                            "src": "4151:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 827,
                              "name": "u",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "4163:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 828,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "uroyalty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1178,
                            "src": "4163:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4151:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 830,
                        "nodeType": "ExpressionStatement",
                        "src": "4151:22:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 831,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4191:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 833,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "stakeAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1156,
                            "src": "4191:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 834,
                              "name": "u",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "4207:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 835,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ustakeAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1182,
                            "src": "4207:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4191:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 837,
                        "nodeType": "ExpressionStatement",
                        "src": "4191:30:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 838,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4239:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 840,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "levelRequirement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1158,
                            "src": "4239:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 841,
                              "name": "u",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "4260:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 842,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ulevelRequirement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1184,
                            "src": "4260:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4239:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 844,
                        "nodeType": "ExpressionStatement",
                        "src": "4239:40:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 845,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4297:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 847,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "miningTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1154,
                            "src": "4297:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 848,
                              "name": "u",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "4312:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 849,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "uminingTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1180,
                            "src": "4312:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4297:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 851,
                        "nodeType": "ExpressionStatement",
                        "src": "4297:28:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 852,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4343:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 854,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "inventorAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1160,
                            "src": "4343:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 855,
                              "name": "u",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "4363:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 856,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "uinventorAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1186,
                            "src": "4363:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4343:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 858,
                        "nodeType": "ExpressionStatement",
                        "src": "4343:38:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 859,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4399:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 861,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "inventionAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1162,
                            "src": "4399:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 862,
                              "name": "u",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "4420:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 863,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "uinventionAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1188,
                            "src": "4420:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4399:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 865,
                        "nodeType": "ExpressionStatement",
                        "src": "4399:40:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice ideaBlockVote counts the votes and executes and Idea Proposal, adding an idea to the cryptopatent Blockchain\n@dev seperate but similiar structures will need to be implemented in the future to stream line voting on different subjects(beta)",
            "id": 882,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ideaBlockVote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 746,
                  "name": "_ideaProposalID",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "3267:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3267:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 748,
                  "name": "maxQuorum",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "3289:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3266:38:2"
            },
            "returnParameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3314:0:2"
            },
            "scope": 963,
            "src": "3244:1356:2",
            "stateMutability": "nonpayable",
            "superFunction": 1681,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 893,
              "nodeType": "Block",
              "src": "4865:46:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 889,
                      "name": "replications",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1081,
                      "src": "4882:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 891,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 890,
                      "name": "_add",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 884,
                      "src": "4895:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4882:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 888,
                  "id": 892,
                  "nodeType": "Return",
                  "src": "4875:25:2"
                }
              ]
            },
            "documentation": "@notice the following functions allow for easier access to info by both the front end and other contracts\n@dev all the following contracts allow for the retreval of token block information",
            "id": 894,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkIfRep",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 884,
                  "name": "_add",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "4823:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4823:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4822:14:2"
            },
            "returnParameters": {
              "id": 888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 887,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "4859:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 886,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4859:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4858:6:2"
            },
            "scope": 963,
            "src": "4803:108:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 905,
              "nodeType": "Block",
              "src": "4972:49:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 901,
                      "name": "IdeaAddToId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1053,
                      "src": "4989:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 903,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 902,
                      "name": "_ideaAdd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 896,
                      "src": "5001:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4989:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 900,
                  "id": 904,
                  "nodeType": "Return",
                  "src": "4982:28:2"
                }
              ]
            },
            "documentation": null,
            "id": 906,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getID",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 896,
                  "name": "_ideaAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "4929:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 895,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4929:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4928:18:2"
            },
            "returnParameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 899,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "4967:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4967:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4966:6:2"
            },
            "scope": 963,
            "src": "4914:107:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 919,
              "nodeType": "Block",
              "src": "5087:58:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 913,
                      "name": "Validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1041,
                      "src": "5097:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RelayedOwnedSet_$1033",
                        "typeString": "contract RelayedOwnedSet"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 915,
                          "name": "_valCon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 908,
                          "src": "5126:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 914,
                        "name": "RelayedOwnedSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "5110:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RelayedOwnedSet_$1033_$",
                          "typeString": "type(contract RelayedOwnedSet)"
                        }
                      },
                      "id": 916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5110:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RelayedOwnedSet_$1033",
                        "typeString": "contract RelayedOwnedSet"
                      }
                    },
                    "src": "5097:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RelayedOwnedSet_$1033",
                      "typeString": "contract RelayedOwnedSet"
                    }
                  },
                  "id": 918,
                  "nodeType": "ExpressionStatement",
                  "src": "5097:37:2"
                }
              ]
            },
            "documentation": null,
            "id": 920,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 911,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 910,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5019,
                  "src": "5077:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5077:9:2"
              }
            ],
            "name": "setValidatorContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 908,
                  "name": "_valCon",
                  "nodeType": "VariableDeclaration",
                  "scope": 920,
                  "src": "5053:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5053:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5052:17:2"
            },
            "returnParameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5087:0:2"
            },
            "scope": 963,
            "src": "5023:122:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 933,
              "nodeType": "Block",
              "src": "5203:49:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 927,
                      "name": "DCPoA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1039,
                      "src": "5213:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                        "typeString": "contract DecentraCorp"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 929,
                          "name": "_dcpoa",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 922,
                          "src": "5234:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                            "typeString": "contract DecentraCorp"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                            "typeString": "contract DecentraCorp"
                          }
                        ],
                        "id": 928,
                        "name": "DecentraCorp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "5221:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DecentraCorp_$1027_$",
                          "typeString": "type(contract DecentraCorp)"
                        }
                      },
                      "id": 930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5221:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                        "typeString": "contract DecentraCorp"
                      }
                    },
                    "src": "5213:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                      "typeString": "contract DecentraCorp"
                    }
                  },
                  "id": 932,
                  "nodeType": "ExpressionStatement",
                  "src": "5213:28:2"
                }
              ]
            },
            "documentation": null,
            "id": 934,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 925,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 924,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5019,
                  "src": "5193:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5193:9:2"
              }
            ],
            "name": "setDCPoA",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 922,
                  "name": "_dcpoa",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "5165:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                    "typeString": "contract DecentraCorp"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 921,
                    "name": "DecentraCorp",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1027,
                    "src": "5165:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                      "typeString": "contract DecentraCorp"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5164:21:2"
            },
            "returnParameters": {
              "id": 926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5203:0:2"
            },
            "scope": 963,
            "src": "5147:105:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 961,
              "nodeType": "Block",
              "src": "5327:132:2",
              "statements": [
                {
                  "assignments": [
                    942
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 942,
                      "name": "infoR",
                      "nodeType": "VariableDeclaration",
                      "scope": 961,
                      "src": "5331:28:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 941,
                        "name": "ReplicationInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1218,
                        "src": "5331:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 946,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 943,
                      "name": "repInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "5362:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ReplicationInfo_$1218_storage_$",
                        "typeString": "mapping(address => struct IdeaBlockLogic.ReplicationInfo storage ref)"
                      }
                    },
                    "id": 945,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 944,
                      "name": "_rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 938,
                      "src": "5370:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5362:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage",
                      "typeString": "struct IdeaBlockLogic.ReplicationInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5331:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 948,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5696,
                            "src": "5387:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5387:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 950,
                            "name": "infoR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 942,
                            "src": "5401:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                              "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                            }
                          },
                          "id": 951,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "OwnersAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1215,
                          "src": "5401:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5387:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 947,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "5379:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5379:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 954,
                  "nodeType": "ExpressionStatement",
                  "src": "5379:42:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 955,
                        "name": "infoR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 942,
                        "src": "5425:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                        }
                      },
                      "id": 957,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "OwnersAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1215,
                      "src": "5425:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 958,
                      "name": "_newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 936,
                      "src": "5447:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5425:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 960,
                  "nodeType": "ExpressionStatement",
                  "src": "5425:31:2"
                }
              ]
            },
            "documentation": null,
            "id": 962,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferRepBlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 936,
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "5282:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 935,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5282:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 938,
                  "name": "_rep",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "5301:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5301:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5281:33:2"
            },
            "returnParameters": {
              "id": 940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5327:0:2"
            },
            "scope": 963,
            "src": "5256:203:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 964,
        "src": "56:5406:2"
      }
    ],
    "src": "0:5463:2"
  },
  "legacyAST": {
    "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/CryptoPatentBlockchain.sol",
    "exportedSymbols": {
      "CryptoPatentBlockchain": [
        963
      ]
    },
    "id": 964,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 525,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/stan36/repos/DecentraCorpContracts/contracts/CryptoPatent/UseBlockLogic.sol",
        "file": "./UseBlockLogic.sol",
        "id": 526,
        "nodeType": "ImportDirective",
        "scope": 964,
        "sourceUnit": 2132,
        "src": "25:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 527,
              "name": "UseBlockLogic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2131,
              "src": "91:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UseBlockLogic_$2131",
                "typeString": "contract UseBlockLogic"
              }
            },
            "id": 528,
            "nodeType": "InheritanceSpecifier",
            "src": "91:13:2"
          }
        ],
        "contractDependencies": [
          1756,
          1948,
          2131,
          4839,
          5089,
          5681
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 963,
        "linearizedBaseContracts": [
          963,
          2131,
          1948,
          1756,
          5089,
          4839,
          5681
        ],
        "name": "CryptoPatentBlockchain",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 548,
              "nodeType": "Block",
              "src": "152:118:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 536,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5696,
                          "src": "177:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "177:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 533,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5089,
                        "src": "158:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$5089_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5002,
                      "src": "158:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "158:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 539,
                  "nodeType": "ExpressionStatement",
                  "src": "158:30:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 540,
                      "name": "ideaBlockReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1045,
                      "src": "194:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31303030303030303030303030303030303030303030",
                      "id": 541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "212:22:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000000"
                      },
                      "value": "1000000000000000000000"
                    },
                    "src": "194:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "194:40:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 544,
                      "name": "globalBlockHalfTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1043,
                      "src": "240:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 545,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5698,
                      "src": "262:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "240:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "240:25:2"
                }
              ]
            },
            "documentation": null,
            "id": 549,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 531,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 530,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5662,
                  "src": "140:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "140:11:2"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "130:2:2"
            },
            "returnParameters": {
              "id": 532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "152:0:2"
            },
            "scope": 963,
            "src": "111:159:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 638,
              "nodeType": "Block",
              "src": "725:538:2",
              "statements": [
                {
                  "assignments": [
                    569
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 569,
                      "name": "ideaID",
                      "nodeType": "VariableDeclaration",
                      "scope": 638,
                      "src": "738:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 568,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "738:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 573,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 570,
                      "name": "getHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1095,
                      "src": "752:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 572,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 571,
                      "name": "_ideaIPFS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 551,
                      "src": "760:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "752:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "738:32:2"
                },
                {
                  "assignments": [
                    575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 575,
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 638,
                      "src": "783:29:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                        "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 574,
                        "name": "IdeaUpgradeProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1196,
                        "src": "783:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 579,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 576,
                      "name": "ideaUpgradeProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1061,
                      "src": "815:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IdeaUpgradeProposal_$1196_storage_$",
                        "typeString": "mapping(uint256 => struct IdeaBlockLogic.IdeaUpgradeProposal storage ref)"
                      }
                    },
                    "id": 578,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 577,
                      "name": "ideaID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 569,
                      "src": "836:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "815:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage",
                      "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "783:60:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 580,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "855:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                        }
                      },
                      "id": 582,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "uIdeaIPFS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1172,
                      "src": "855:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 583,
                      "name": "_ideaIPFS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 551,
                      "src": "869:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "855:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "855:23:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 586,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "890:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                        }
                      },
                      "id": 588,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "uexecuted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1174,
                      "src": "890:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "904:5:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "890:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 591,
                  "nodeType": "ExpressionStatement",
                  "src": "890:19:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 592,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "921:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                        }
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "uglobalUseBlockAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1176,
                      "src": "921:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 595,
                      "name": "_globalUseBlockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 553,
                      "src": "947:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "921:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "921:47:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 598,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "980:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                        }
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "uroyalty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1178,
                      "src": "980:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 601,
                      "name": "_royalty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 557,
                      "src": "993:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "980:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "980:21:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 604,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "1013:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                        }
                      },
                      "id": 606,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ustakeAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1182,
                      "src": "1013:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 607,
                      "name": "_stakeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "1030:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1013:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "1013:29:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 610,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "1054:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                        }
                      },
                      "id": 612,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ulevelRequirement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1184,
                      "src": "1054:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 613,
                      "name": "_levelRequirement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 561,
                      "src": "1076:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1054:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "1054:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 616,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "1105:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                        }
                      },
                      "id": 618,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "uminingTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1180,
                      "src": "1105:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 619,
                      "name": "_miningTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 555,
                      "src": "1121:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1105:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 621,
                  "nodeType": "ExpressionStatement",
                  "src": "1105:27:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 622,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "1144:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                        }
                      },
                      "id": 624,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "uinventorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1186,
                      "src": "1144:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 625,
                      "name": "_inventor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 563,
                      "src": "1165:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1144:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:30:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 628,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "1186:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                        }
                      },
                      "id": 630,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "uinventionAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1188,
                      "src": "1186:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 631,
                      "name": "_invention",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 565,
                      "src": "1208:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1186:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 633,
                  "nodeType": "ExpressionStatement",
                  "src": "1186:32:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 635,
                        "name": "_ideaIPFS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "1248:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 634,
                      "name": "IdeaProposed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1104,
                      "src": "1235:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1235:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 637,
                  "nodeType": "EmitStatement",
                  "src": "1230:28:2"
                }
              ]
            },
            "documentation": "@notice proposeIdea is used to allow ANYONE to petition the community for idea approval\n@dev the struct for this is set in interface.solidity\n@dev idea proposals are put up for community approval",
            "id": 639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proposeIdeaUpgrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 551,
                  "name": "_ideaIPFS",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "518:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 553,
                  "name": "_globalUseBlockAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "548:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 555,
                  "name": "_miningTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "580:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 554,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 557,
                  "name": "_royalty",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "602:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "602:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 559,
                  "name": "_stakeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "621:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "621:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 561,
                  "name": "_levelRequirement",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "644:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "644:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 563,
                  "name": "_inventor",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "672:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "672:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 565,
                  "name": "_invention",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "695:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "512:205:2"
            },
            "returnParameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "725:0:2"
            },
            "scope": 963,
            "src": "485:778:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 743,
              "nodeType": "Block",
              "src": "1489:1452:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 649,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5696,
                                "src": "1530:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1530:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 647,
                              "name": "DCPoA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1039,
                              "src": "1509:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                                "typeString": "contract DecentraCorp"
                              }
                            },
                            "id": 648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_checkIfMember",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 995,
                            "src": "1509:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1509:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1545:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1509:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 646,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "1501:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1501:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 655,
                  "nodeType": "ExpressionStatement",
                  "src": "1501:49:2"
                },
                {
                  "assignments": [
                    657
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 657,
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 743,
                      "src": "1562:29:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                        "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 656,
                        "name": "IdeaUpgradeProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1196,
                        "src": "1562:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 661,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 658,
                      "name": "ideaUpgradeProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1061,
                      "src": "1594:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IdeaUpgradeProposal_$1196_storage_$",
                        "typeString": "mapping(uint256 => struct IdeaBlockLogic.IdeaUpgradeProposal storage ref)"
                      }
                    },
                    "id": 660,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 659,
                      "name": "_ideaProposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 641,
                      "src": "1615:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1594:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage",
                      "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1562:69:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 663,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 657,
                              "src": "1695:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 664,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "uvoted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1195,
                            "src": "1695:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 667,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 665,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5696,
                              "src": "1704:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1704:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1695:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1719:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1695:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 662,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "1687:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1687:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "1687:37:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 673,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 657,
                            "src": "1818:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                              "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                            }
                          },
                          "id": 674,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "uexecuted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1174,
                          "src": "1818:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1833:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1818:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 672,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "1810:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1810:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:28:2"
                },
                {
                  "assignments": [
                    680
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 680,
                      "name": "voteID",
                      "nodeType": "VariableDeclaration",
                      "scope": 743,
                      "src": "1908:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 679,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1908:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 685,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1922:17:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 681,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 657,
                          "src": "1922:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                            "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                          }
                        },
                        "id": 682,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "uvotes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1191,
                        "src": "1922:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vote_$1201_storage_$dyn_storage",
                          "typeString": "struct IdeaBlockLogic.Vote storage ref[] storage ref"
                        }
                      },
                      "id": 683,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1922:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1908:31:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 686,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 657,
                          "src": "2026:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                            "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                          }
                        },
                        "id": 689,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "uvotes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1191,
                        "src": "2026:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vote_$1201_storage_$dyn_storage",
                          "typeString": "struct IdeaBlockLogic.Vote storage ref[] storage ref"
                        }
                      },
                      "id": 690,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 688,
                        "name": "voteID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "2035:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2026:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vote_$1201_storage",
                        "typeString": "struct IdeaBlockLogic.Vote storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 692,
                          "name": "supportsProposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 643,
                          "src": "2062:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 693,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5696,
                            "src": "2087:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2087:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 691,
                        "name": "Vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1201,
                        "src": "2045:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Vote_$1201_storage_ptr_$",
                          "typeString": "type(struct IdeaBlockLogic.Vote storage pointer)"
                        }
                      },
                      "id": 695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "inSupport",
                        "voter"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2045:54:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vote_$1201_memory",
                        "typeString": "struct IdeaBlockLogic.Vote memory"
                      }
                    },
                    "src": "2026:73:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vote_$1201_storage",
                      "typeString": "struct IdeaBlockLogic.Vote storage ref"
                    }
                  },
                  "id": 697,
                  "nodeType": "ExpressionStatement",
                  "src": "2026:73:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 698,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 657,
                          "src": "2205:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                            "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                          }
                        },
                        "id": 702,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "uvoted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1195,
                        "src": "2205:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 703,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 700,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5696,
                          "src": "2214:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2214:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2205:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2228:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2205:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 706,
                  "nodeType": "ExpressionStatement",
                  "src": "2205:27:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 710,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5696,
                          "src": "2324:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2324:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 707,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "2303:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseMemLev",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1000,
                      "src": "2303:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2303:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "2303:32:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 715,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5696,
                          "src": "2409:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2409:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 717,
                        "name": "supportsProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 643,
                        "src": "2421:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 714,
                      "name": "Voted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1120,
                      "src": "2403:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2403:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 719,
                  "nodeType": "EmitStatement",
                  "src": "2398:40:2"
                },
                {
                  "assignments": [
                    721
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 721,
                      "name": "maxQuorum",
                      "nodeType": "VariableDeclaration",
                      "scope": 743,
                      "src": "2480:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 720,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2480:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 725,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 722,
                        "name": "DCPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "2497:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                          "typeString": "contract DecentraCorp"
                        }
                      },
                      "id": 723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getMemberCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1012,
                      "src": "2497:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2497:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2480:39:2"
                },
                {
                  "assignments": [
                    727
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 727,
                      "name": "tally",
                      "nodeType": "VariableDeclaration",
                      "scope": 743,
                      "src": "2586:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 726,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2586:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 734,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 729,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 657,
                            "src": "2613:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                              "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                            }
                          },
                          "id": 730,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "uvotes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1191,
                          "src": "2613:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Vote_$1201_storage_$dyn_storage",
                            "typeString": "struct IdeaBlockLogic.Vote storage ref[] storage ref"
                          }
                        },
                        "id": 731,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2613:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 732,
                        "name": "maxQuorum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "2630:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 728,
                      "name": "setVoteQuorum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1419,
                      "src": "2599:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) pure returns (bool)"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2599:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2586:54:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 735,
                    "name": "tally",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 727,
                    "src": "2811:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 742,
                  "nodeType": "IfStatement",
                  "src": "2808:125:2",
                  "trueBody": {
                    "id": 741,
                    "nodeType": "Block",
                    "src": "2818:115:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 737,
                              "name": "_ideaProposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 641,
                              "src": "2846:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 738,
                              "name": "maxQuorum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 721,
                              "src": "2863:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 736,
                            "name": "ideaBlockVote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              882
                            ],
                            "referencedDeclaration": 882,
                            "src": "2832:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2832:41:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 740,
                        "nodeType": "ExpressionStatement",
                        "src": "2832:41:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice vote is a member only function which allows DecentraCorp members to vote on proposalPassed",
            "id": 744,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ideaVote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 641,
                  "name": "_ideaProposalID",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "1403:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1403:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 643,
                  "name": "supportsProposal",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "1435:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 642,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1435:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1391:73:2"
            },
            "returnParameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1489:0:2"
            },
            "scope": 963,
            "src": "1374:1567:2",
            "stateMutability": "nonpayable",
            "superFunction": 1552,
            "visibility": "public"
          },
          {
            "body": {
              "id": 881,
              "nodeType": "Block",
              "src": "3314:1286:2",
              "statements": [
                {
                  "assignments": [
                    752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 752,
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 881,
                      "src": "3326:22:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                        "typeString": "struct IdeaBlockLogic.IdeaProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 751,
                        "name": "IdeaProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1170,
                        "src": "3326:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 756,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 753,
                      "name": "ideaProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1057,
                      "src": "3351:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IdeaProposal_$1170_storage_$",
                        "typeString": "mapping(uint256 => struct IdeaBlockLogic.IdeaProposal storage ref)"
                      }
                    },
                    "id": 755,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 754,
                      "name": "_ideaProposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 746,
                      "src": "3365:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3351:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage",
                      "typeString": "struct IdeaBlockLogic.IdeaProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3326:55:2"
                },
                {
                  "assignments": [
                    758
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 758,
                      "name": "u",
                      "nodeType": "VariableDeclaration",
                      "scope": 881,
                      "src": "3470:29:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                        "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 757,
                        "name": "IdeaUpgradeProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1196,
                        "src": "3470:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 762,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 759,
                      "name": "ideaUpgradeProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1061,
                      "src": "3502:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IdeaUpgradeProposal_$1196_storage_$",
                        "typeString": "mapping(uint256 => struct IdeaBlockLogic.IdeaUpgradeProposal storage ref)"
                      }
                    },
                    "id": 761,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 760,
                      "name": "_ideaProposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 746,
                      "src": "3523:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3502:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage",
                      "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3470:69:2"
                },
                {
                  "assignments": [
                    764
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 764,
                      "name": "yea",
                      "nodeType": "VariableDeclaration",
                      "scope": 881,
                      "src": "3551:8:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 763,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3551:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 766,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3562:1:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3551:12:2"
                },
                {
                  "body": {
                    "id": 794,
                    "nodeType": "Block",
                    "src": "3616:123:2",
                    "statements": [
                      {
                        "assignments": [
                          780
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 780,
                            "name": "v",
                            "nodeType": "VariableDeclaration",
                            "scope": 794,
                            "src": "3628:14:2",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vote_$1201_storage_ptr",
                              "typeString": "struct IdeaBlockLogic.Vote"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 779,
                              "name": "Vote",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1201,
                              "src": "3628:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vote_$1201_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.Vote"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 785,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 781,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "3645:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 782,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "votes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1165,
                            "src": "3645:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Vote_$1201_storage_$dyn_storage",
                              "typeString": "struct IdeaBlockLogic.Vote storage ref[] storage ref"
                            }
                          },
                          "id": 784,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 783,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "3653:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3645:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vote_$1201_storage",
                            "typeString": "struct IdeaBlockLogic.Vote storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3628:27:2"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 786,
                            "name": "v",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 780,
                            "src": "3672:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vote_$1201_storage_ptr",
                              "typeString": "struct IdeaBlockLogic.Vote storage pointer"
                            }
                          },
                          "id": 787,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "inSupport",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1198,
                          "src": "3672:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 793,
                        "nodeType": "IfStatement",
                        "src": "3668:57:2",
                        "trueBody": {
                          "id": 792,
                          "nodeType": "Block",
                          "src": "3685:40:2",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 790,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 788,
                                  "name": "yea",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 764,
                                  "src": "3699:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 789,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3706:1:2",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "3699:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 791,
                              "nodeType": "ExpressionStatement",
                              "src": "3699:8:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 771,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 768,
                      "src": "3590:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 772,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 752,
                          "src": "3595:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                            "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1165,
                        "src": "3595:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vote_$1201_storage_$dyn_storage",
                          "typeString": "struct IdeaBlockLogic.Vote storage ref[] storage ref"
                        }
                      },
                      "id": 774,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3595:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3590:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 795,
                  "initializationExpression": {
                    "assignments": [
                      768
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 768,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 795,
                        "src": "3578:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 767,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3578:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 770,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3587:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3578:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "3611:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 776,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 768,
                        "src": "3613:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 778,
                    "nodeType": "ExpressionStatement",
                    "src": "3611:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3573:166:2"
                },
                {
                  "assignments": [
                    797
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 797,
                      "name": "passes",
                      "nodeType": "VariableDeclaration",
                      "scope": 881,
                      "src": "3753:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 796,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3753:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 802,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 799,
                        "name": "yea",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 764,
                        "src": "3787:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 800,
                        "name": "maxQuorum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "3792:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 798,
                      "name": "setVoteNumberQuorum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1447,
                      "src": "3767:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) pure returns (bool)"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3767:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3753:49:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 803,
                    "name": "passes",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 797,
                    "src": "3914:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 879,
                    "nodeType": "Block",
                    "src": "4462:128:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 867,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4519:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 869,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "executed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1148,
                            "src": "4519:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4532:5:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "4519:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 872,
                        "nodeType": "ExpressionStatement",
                        "src": "4519:18:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 873,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4556:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 875,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "IdeaBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1146,
                            "src": "4556:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4570:4:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4556:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 878,
                        "nodeType": "ExpressionStatement",
                        "src": "4556:18:2"
                      }
                    ]
                  },
                  "id": 880,
                  "nodeType": "IfStatement",
                  "src": "3910:680:2",
                  "trueBody": {
                    "id": 866,
                    "nodeType": "Block",
                    "src": "3922:534:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 804,
                              "name": "u",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "4005:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 806,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "uexecuted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1174,
                            "src": "4005:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4019:4:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4005:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 809,
                        "nodeType": "ExpressionStatement",
                        "src": "4005:18:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 810,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4041:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 812,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "IdeaIPFS",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1144,
                            "src": "4041:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 813,
                              "name": "u",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "4056:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 814,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "uIdeaIPFS",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1172,
                            "src": "4056:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "src": "4041:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 816,
                        "nodeType": "ExpressionStatement",
                        "src": "4041:26:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 817,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4085:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 819,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "globalUseBlockAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1150,
                            "src": "4085:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 820,
                              "name": "u",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "4110:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 821,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "uglobalUseBlockAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1176,
                            "src": "4110:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4085:48:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 823,
                        "nodeType": "ExpressionStatement",
                        "src": "4085:48:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 824,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4151:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 826,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "royalty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1152,
                            "src": "4151:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 827,
                              "name": "u",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "4163:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 828,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "uroyalty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1178,
                            "src": "4163:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4151:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 830,
                        "nodeType": "ExpressionStatement",
                        "src": "4151:22:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 831,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4191:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 833,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "stakeAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1156,
                            "src": "4191:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 834,
                              "name": "u",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "4207:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 835,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ustakeAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1182,
                            "src": "4207:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4191:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 837,
                        "nodeType": "ExpressionStatement",
                        "src": "4191:30:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 838,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4239:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 840,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "levelRequirement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1158,
                            "src": "4239:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 841,
                              "name": "u",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "4260:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 842,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ulevelRequirement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1184,
                            "src": "4260:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4239:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 844,
                        "nodeType": "ExpressionStatement",
                        "src": "4239:40:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 845,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4297:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 847,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "miningTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1154,
                            "src": "4297:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 848,
                              "name": "u",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "4312:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 849,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "uminingTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1180,
                            "src": "4312:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4297:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 851,
                        "nodeType": "ExpressionStatement",
                        "src": "4297:28:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 852,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4343:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 854,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "inventorAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1160,
                            "src": "4343:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 855,
                              "name": "u",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "4363:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 856,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "uinventorAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1186,
                            "src": "4363:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4343:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 858,
                        "nodeType": "ExpressionStatement",
                        "src": "4343:38:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 859,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4399:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaProposal_$1170_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaProposal storage pointer"
                              }
                            },
                            "id": 861,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "inventionAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1162,
                            "src": "4399:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 862,
                              "name": "u",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "4420:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IdeaUpgradeProposal_$1196_storage_ptr",
                                "typeString": "struct IdeaBlockLogic.IdeaUpgradeProposal storage pointer"
                              }
                            },
                            "id": 863,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "uinventionAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1188,
                            "src": "4420:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4399:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 865,
                        "nodeType": "ExpressionStatement",
                        "src": "4399:40:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice ideaBlockVote counts the votes and executes and Idea Proposal, adding an idea to the cryptopatent Blockchain\n@dev seperate but similiar structures will need to be implemented in the future to stream line voting on different subjects(beta)",
            "id": 882,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ideaBlockVote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 746,
                  "name": "_ideaProposalID",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "3267:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3267:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 748,
                  "name": "maxQuorum",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "3289:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3266:38:2"
            },
            "returnParameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3314:0:2"
            },
            "scope": 963,
            "src": "3244:1356:2",
            "stateMutability": "nonpayable",
            "superFunction": 1681,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 893,
              "nodeType": "Block",
              "src": "4865:46:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 889,
                      "name": "replications",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1081,
                      "src": "4882:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 891,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 890,
                      "name": "_add",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 884,
                      "src": "4895:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4882:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 888,
                  "id": 892,
                  "nodeType": "Return",
                  "src": "4875:25:2"
                }
              ]
            },
            "documentation": "@notice the following functions allow for easier access to info by both the front end and other contracts\n@dev all the following contracts allow for the retreval of token block information",
            "id": 894,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkIfRep",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 884,
                  "name": "_add",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "4823:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4823:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4822:14:2"
            },
            "returnParameters": {
              "id": 888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 887,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "4859:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 886,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4859:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4858:6:2"
            },
            "scope": 963,
            "src": "4803:108:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 905,
              "nodeType": "Block",
              "src": "4972:49:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 901,
                      "name": "IdeaAddToId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1053,
                      "src": "4989:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 903,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 902,
                      "name": "_ideaAdd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 896,
                      "src": "5001:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4989:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 900,
                  "id": 904,
                  "nodeType": "Return",
                  "src": "4982:28:2"
                }
              ]
            },
            "documentation": null,
            "id": 906,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getID",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 896,
                  "name": "_ideaAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "4929:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 895,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4929:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4928:18:2"
            },
            "returnParameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 899,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "4967:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4967:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4966:6:2"
            },
            "scope": 963,
            "src": "4914:107:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 919,
              "nodeType": "Block",
              "src": "5087:58:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 913,
                      "name": "Validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1041,
                      "src": "5097:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RelayedOwnedSet_$1033",
                        "typeString": "contract RelayedOwnedSet"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 915,
                          "name": "_valCon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 908,
                          "src": "5126:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 914,
                        "name": "RelayedOwnedSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "5110:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RelayedOwnedSet_$1033_$",
                          "typeString": "type(contract RelayedOwnedSet)"
                        }
                      },
                      "id": 916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5110:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RelayedOwnedSet_$1033",
                        "typeString": "contract RelayedOwnedSet"
                      }
                    },
                    "src": "5097:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RelayedOwnedSet_$1033",
                      "typeString": "contract RelayedOwnedSet"
                    }
                  },
                  "id": 918,
                  "nodeType": "ExpressionStatement",
                  "src": "5097:37:2"
                }
              ]
            },
            "documentation": null,
            "id": 920,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 911,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 910,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5019,
                  "src": "5077:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5077:9:2"
              }
            ],
            "name": "setValidatorContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 908,
                  "name": "_valCon",
                  "nodeType": "VariableDeclaration",
                  "scope": 920,
                  "src": "5053:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5053:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5052:17:2"
            },
            "returnParameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5087:0:2"
            },
            "scope": 963,
            "src": "5023:122:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 933,
              "nodeType": "Block",
              "src": "5203:49:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 927,
                      "name": "DCPoA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1039,
                      "src": "5213:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                        "typeString": "contract DecentraCorp"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 929,
                          "name": "_dcpoa",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 922,
                          "src": "5234:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                            "typeString": "contract DecentraCorp"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                            "typeString": "contract DecentraCorp"
                          }
                        ],
                        "id": 928,
                        "name": "DecentraCorp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "5221:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DecentraCorp_$1027_$",
                          "typeString": "type(contract DecentraCorp)"
                        }
                      },
                      "id": 930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5221:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                        "typeString": "contract DecentraCorp"
                      }
                    },
                    "src": "5213:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                      "typeString": "contract DecentraCorp"
                    }
                  },
                  "id": 932,
                  "nodeType": "ExpressionStatement",
                  "src": "5213:28:2"
                }
              ]
            },
            "documentation": null,
            "id": 934,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 925,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 924,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5019,
                  "src": "5193:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5193:9:2"
              }
            ],
            "name": "setDCPoA",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 922,
                  "name": "_dcpoa",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "5165:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                    "typeString": "contract DecentraCorp"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 921,
                    "name": "DecentraCorp",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1027,
                    "src": "5165:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DecentraCorp_$1027",
                      "typeString": "contract DecentraCorp"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5164:21:2"
            },
            "returnParameters": {
              "id": 926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5203:0:2"
            },
            "scope": 963,
            "src": "5147:105:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 961,
              "nodeType": "Block",
              "src": "5327:132:2",
              "statements": [
                {
                  "assignments": [
                    942
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 942,
                      "name": "infoR",
                      "nodeType": "VariableDeclaration",
                      "scope": 961,
                      "src": "5331:28:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                        "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 941,
                        "name": "ReplicationInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1218,
                        "src": "5331:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 946,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 943,
                      "name": "repInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "5362:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ReplicationInfo_$1218_storage_$",
                        "typeString": "mapping(address => struct IdeaBlockLogic.ReplicationInfo storage ref)"
                      }
                    },
                    "id": 945,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 944,
                      "name": "_rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 938,
                      "src": "5370:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5362:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReplicationInfo_$1218_storage",
                      "typeString": "struct IdeaBlockLogic.ReplicationInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5331:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 948,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5696,
                            "src": "5387:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5387:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 950,
                            "name": "infoR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 942,
                            "src": "5401:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                              "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                            }
                          },
                          "id": 951,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "OwnersAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1215,
                          "src": "5401:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5387:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 947,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5699,
                        5700
                      ],
                      "referencedDeclaration": 5699,
                      "src": "5379:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5379:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 954,
                  "nodeType": "ExpressionStatement",
                  "src": "5379:42:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 955,
                        "name": "infoR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 942,
                        "src": "5425:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReplicationInfo_$1218_memory_ptr",
                          "typeString": "struct IdeaBlockLogic.ReplicationInfo memory"
                        }
                      },
                      "id": 957,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "OwnersAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1215,
                      "src": "5425:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 958,
                      "name": "_newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 936,
                      "src": "5447:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5425:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 960,
                  "nodeType": "ExpressionStatement",
                  "src": "5425:31:2"
                }
              ]
            },
            "documentation": null,
            "id": 962,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferRepBlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 936,
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "5282:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 935,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5282:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 938,
                  "name": "_rep",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "5301:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5301:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5281:33:2"
            },
            "returnParameters": {
              "id": 940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5327:0:2"
            },
            "scope": 963,
            "src": "5256:203:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 964,
        "src": "56:5406:2"
      }
    ],
    "src": "0:5463:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "3636": {
      "links": {},
      "events": {},
      "address": "0x7F40F77f00278b35480b702Ef082DDDEFccD7C44",
      "updated_at": 1567789720335
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-09-13T18:41:29.174Z",
  "devdoc": {
    "methods": {
      "checkIfRep(address)": {
        "details": "all the following contracts allow for the retreval of token block information"
      },
      "generateReplicationBlock(uint256,address,address,string,string)": {
        "details": "this requires the replicator has enough NotiCoin to meet the stake amount and burns it from existenceit also adds the replicator as a member of DecentraCorpfinally, this contract calls the Proof of Replication Ownership contract and mints a PoRO token to the msg.sender"
      },
      "generateUseBlockWeight(string)": {
        "details": "this is called by generateUseBlockWeight"
      },
      "getPropID(string)": {
        "details": "getPropID is made for easier front end interaction"
      },
      "initialize(address)": {
        "details": "The Ownable constructor sets the original `owner` of the contract to the sender account."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "percent(uint256,uint256,uint256)": {
        "details": "quorum is set to 60%"
      },
      "proposeIdea(string,uint256,uint256,uint256,uint256,uint256,address,address)": {
        "details": "the struct for this is set in interface.solidityidea proposals are put up for community approval"
      },
      "proposeIdeaUpgrade(string,uint256,uint256,uint256,uint256,uint256,address,address)": {
        "details": "the struct for this is set in interface.solidityidea proposals are put up for community approval"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "checkIfRep(address)": {
        "notice": "the following functions allow for easier access to info by both the front end and other contracts"
      },
      "generateReplicationBlock(uint256,address,address,string,string)": {
        "notice": "generateReplicationBlock is used to generate a replication block when someone sucessfully replicates an Idea"
      },
      "generateUseBlockWeight(string)": {
        "notice": "UseBlockWeight is an internal function that tracks loacal use weightTracker"
      },
      "getPropID(string)": {
        "notice": "getPropID function allows one to rerieve a proposal ID by its ipfs hash"
      },
      "ideaVote(uint256,bool)": {
        "notice": "vote is a member only function which allows DecentraCorp members to vote on proposalPassed"
      },
      "percent(uint256,uint256,uint256)": {
        "notice": "set_Quorum is an internal function used by proposal vote counts to see if the community approves"
      },
      "proposeIdea(string,uint256,uint256,uint256,uint256,uint256,address,address)": {
        "notice": "proposeIdea is used to allow ANYONE to petition the community for idea approval"
      },
      "proposeIdeaUpgrade(string,uint256,uint256,uint256,uint256,uint256,address,address)": {
        "notice": "proposeIdea is used to allow ANYONE to petition the community for idea approval"
      },
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}