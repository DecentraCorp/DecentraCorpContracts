{
  "contracts": {
    "Entropy21": {
      "address": "0xE9403D2feA27107DC18850ceaCbc861618a147F5",
      "constructorCode": "608060405234801561001057600080fd5b5061125c806100206000396000f3fe",
      "bodyBytecodeHash": "93cf65609d11d31737cdb0ab7ecdd0461e923e1cb2cac88e2d0720d446b6c401",
      "localBytecodeHash": "c5b249b14b0067523be63a29026d068e200d606e4b36b0bed3c59be39f22deea",
      "deployedBytecodeHash": "c5b249b14b0067523be63a29026d068e200d606e4b36b0bed3c59be39f22deea",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Entropy21.NewRound>": {
          "id": "t_struct<Entropy21.NewRound>",
          "kind": "struct",
          "label": "Entropy21.NewRound",
          "members": [
            {
              "label": "NumberOfPlayers",
              "astId": 308,
              "type": "t_uint256",
              "src": "578:20:1"
            },
            {
              "label": "PoolAmount",
              "astId": 310,
              "type": "t_uint256",
              "src": "602:15:1"
            },
            {
              "label": "CurrentHighest",
              "astId": 312,
              "type": "t_uint256",
              "src": "621:19:1"
            },
            {
              "label": "CurrentWinner",
              "astId": 314,
              "type": "t_address",
              "src": "644:21:1"
            }
          ]
        },
        "t_mapping<t_struct<Entropy21.NewRound>>": {
          "id": "t_mapping<t_struct<Entropy21.NewRound>>",
          "valueType": "t_struct<Entropy21.NewRound>",
          "label": "mapping(key => Entropy21.NewRound)",
          "kind": "mapping"
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_mapping<t_string>": {
          "id": "t_mapping<t_string>",
          "valueType": "t_string",
          "label": "mapping(key => string)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 4423,
          "type": "t_bool",
          "src": "757:24:17"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 4425,
          "type": "t_bool",
          "src": "876:25:17"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 4474,
          "type": "t_array:50<t_uint256>",
          "src": "1891:29:17"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "_owner",
          "astId": 3732,
          "type": "t_address",
          "src": "302:22:13"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "______gap",
          "astId": 3843,
          "type": "t_array:50<t_uint256>",
          "src": "2186:29:13"
        },
        {
          "contract": "Entropy21",
          "path": "contracts/ChaosCasino/Entropy21.sol",
          "label": "CC",
          "astId": 290,
          "type": "t_address",
          "src": "362:21:1"
        },
        {
          "contract": "Entropy21",
          "path": "contracts/ChaosCasino/Entropy21.sol",
          "label": "round",
          "astId": 292,
          "type": "t_uint256",
          "src": "389:17:1"
        },
        {
          "contract": "Entropy21",
          "path": "contracts/ChaosCasino/Entropy21.sol",
          "label": "roundTimer",
          "astId": 294,
          "type": "t_uint256",
          "src": "410:22:1"
        },
        {
          "contract": "Entropy21",
          "path": "contracts/ChaosCasino/Entropy21.sol",
          "label": "rounds",
          "astId": 298,
          "type": "t_mapping<t_struct<Entropy21.NewRound>>",
          "src": "436:39:1"
        },
        {
          "contract": "Entropy21",
          "path": "contracts/ChaosCasino/Entropy21.sol",
          "label": "inTheGame",
          "astId": 302,
          "type": "t_mapping<t_bool>",
          "src": "479:34:1"
        },
        {
          "contract": "Entropy21",
          "path": "contracts/ChaosCasino/Entropy21.sol",
          "label": "playerHashs",
          "astId": 306,
          "type": "t_mapping<t_string>",
          "src": "517:38:1"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "CryptoPatentBlockchain": {
      "address": "0xf8Ef61aC5F8877c7D4b5Df1F553811812e2bDF42",
      "constructorCode": "608060405234801561001057600080fd5b50614fd1806100206000396000f3fe",
      "bodyBytecodeHash": "193a78a887bcaa0c9d5d4cbe86d8a0d082f7544728f8fb62e94857f46ea8467e",
      "localBytecodeHash": "1d7a827780b05404d687946a39c5fdcd94cf06fbc7a3dd59a7b22489fcde2a38",
      "deployedBytecodeHash": "1d7a827780b05404d687946a39c5fdcd94cf06fbc7a3dd59a7b22489fcde2a38",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_struct<IdeaBlockLogic.IdeaProposal>": {
          "id": "t_struct<IdeaBlockLogic.IdeaProposal>",
          "kind": "struct",
          "label": "IdeaBlockLogic.IdeaProposal",
          "members": [
            {
              "label": "IdeaIPFS",
              "astId": 1136,
              "type": "t_string",
              "src": "3347:15:3"
            },
            {
              "label": "IdeaBlock",
              "astId": 1138,
              "type": "t_bool",
              "src": "3371:14:3"
            },
            {
              "label": "executed",
              "astId": 1140,
              "type": "t_bool",
              "src": "3394:13:3"
            },
            {
              "label": "globalUseBlockAmount",
              "astId": 1142,
              "type": "t_uint256",
              "src": "3416:25:3"
            },
            {
              "label": "royalty",
              "astId": 1144,
              "type": "t_uint256",
              "src": "3450:12:3"
            },
            {
              "label": "miningTime",
              "astId": 1146,
              "type": "t_uint256",
              "src": "3471:15:3"
            },
            {
              "label": "stakeAmount",
              "astId": 1148,
              "type": "t_uint256",
              "src": "3495:16:3"
            },
            {
              "label": "levelRequirement",
              "astId": 1150,
              "type": "t_uint256",
              "src": "3520:21:3"
            },
            {
              "label": "inventorAddress",
              "astId": 1152,
              "type": "t_address",
              "src": "3550:23:3"
            },
            {
              "label": "inventionAddress",
              "astId": 1154,
              "type": "t_address",
              "src": "3582:24:3"
            },
            {
              "label": "votes",
              "astId": 1157,
              "type": "t_array:dyn<t_struct<IdeaBlockLogic.Vote>>",
              "src": "3615:12:3"
            },
            {
              "label": "voted",
              "astId": 1161,
              "type": "t_mapping<t_bool>",
              "src": "3636:31:3"
            }
          ]
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_struct<IdeaBlockLogic.Vote>": {
          "id": "t_struct<IdeaBlockLogic.Vote>",
          "kind": "struct",
          "label": "IdeaBlockLogic.Vote",
          "members": [
            {
              "label": "inSupport",
              "astId": 1164,
              "type": "t_bool",
              "src": "3701:14:3"
            },
            {
              "label": "voter",
              "astId": 1166,
              "type": "t_address",
              "src": "3727:13:3"
            }
          ]
        },
        "t_array:dyn<t_struct<IdeaBlockLogic.Vote>>": {
          "id": "t_array:dyn<t_struct<IdeaBlockLogic.Vote>>",
          "valueType": "t_struct<IdeaBlockLogic.Vote>",
          "length": "dyn",
          "kind": "array",
          "label": "IdeaBlockLogic.Vote[]"
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_struct<IdeaBlockLogic.IdeaProposal>>": {
          "id": "t_mapping<t_struct<IdeaBlockLogic.IdeaProposal>>",
          "valueType": "t_struct<IdeaBlockLogic.IdeaProposal>",
          "label": "mapping(key => IdeaBlockLogic.IdeaProposal)",
          "kind": "mapping"
        },
        "t_struct<IdeaBlockLogic.ReplicationInfo>": {
          "id": "t_struct<IdeaBlockLogic.ReplicationInfo>",
          "kind": "struct",
          "label": "IdeaBlockLogic.ReplicationInfo",
          "members": [
            {
              "label": "BlockReward",
              "astId": 1169,
              "type": "t_uint256",
              "src": "3839:16:3"
            },
            {
              "label": "IdeaID",
              "astId": 1171,
              "type": "t_uint256",
              "src": "3861:11:3"
            },
            {
              "label": "Royalty",
              "astId": 1173,
              "type": "t_uint256",
              "src": "3878:12:3"
            },
            {
              "label": "InventorsAddress",
              "astId": 1175,
              "type": "t_address",
              "src": "3896:24:3"
            },
            {
              "label": "ReplicationAddress",
              "astId": 1177,
              "type": "t_address",
              "src": "3926:26:3"
            },
            {
              "label": "ReplicationMember",
              "astId": 1179,
              "type": "t_address",
              "src": "3958:25:3"
            },
            {
              "label": "OwnersAddress",
              "astId": 1181,
              "type": "t_address",
              "src": "3989:21:3"
            },
            {
              "label": "DeviceLockHash",
              "astId": 1183,
              "type": "t_string",
              "src": "4016:21:3"
            }
          ]
        },
        "t_mapping<t_struct<IdeaBlockLogic.ReplicationInfo>>": {
          "id": "t_mapping<t_struct<IdeaBlockLogic.ReplicationInfo>>",
          "valueType": "t_struct<IdeaBlockLogic.ReplicationInfo>",
          "label": "mapping(key => IdeaBlockLogic.ReplicationInfo)",
          "kind": "mapping"
        },
        "t_array:dyn<t_uint256>": {
          "id": "t_array:dyn<t_uint256>",
          "valueType": "t_uint256",
          "length": "dyn",
          "kind": "array",
          "label": "uint256[]"
        },
        "t_mapping<t_array:dyn<t_uint256>>": {
          "id": "t_mapping<t_array:dyn<t_uint256>>",
          "valueType": "t_array:dyn<t_uint256>",
          "label": "mapping(key => uint256[])",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 4423,
          "type": "t_bool",
          "src": "757:24:17"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 4425,
          "type": "t_bool",
          "src": "876:25:17"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 4474,
          "type": "t_array:50<t_uint256>",
          "src": "1891:29:17"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "_owner",
          "astId": 3732,
          "type": "t_address",
          "src": "302:22:13"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "______gap",
          "astId": 3843,
          "type": "t_array:50<t_uint256>",
          "src": "2186:29:13"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "DCPoA",
          "astId": 1035,
          "type": "t_address",
          "src": "1574:25:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "Validators",
          "astId": 1037,
          "type": "t_address",
          "src": "1603:33:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "globalBlockHalfTime",
          "astId": 1039,
          "type": "t_uint256",
          "src": "1815:31:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "ideaBlockReward",
          "astId": 1041,
          "type": "t_uint256",
          "src": "1850:27:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "globalIdeaPropCount",
          "astId": 1043,
          "type": "t_uint256",
          "src": "1881:31:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "globalUseBlock",
          "astId": 1045,
          "type": "t_uint256",
          "src": "1916:26:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "IdeaAddToId",
          "astId": 1049,
          "type": "t_mapping<t_uint256>",
          "src": "2079:43:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "ideaProposals",
          "astId": 1053,
          "type": "t_mapping<t_struct<IdeaBlockLogic.IdeaProposal>>",
          "src": "2126:50:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "weightTracker",
          "astId": 1057,
          "type": "t_mapping<t_uint256>",
          "src": "2180:42:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "localWeightTracker",
          "astId": 1061,
          "type": "t_mapping<t_uint256>",
          "src": "2226:50:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "ideaRepCounter",
          "astId": 1065,
          "type": "t_mapping<t_uint256>",
          "src": "2541:43:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "localMiningtimeTracker",
          "astId": 1069,
          "type": "t_mapping<t_uint256>",
          "src": "2588:54:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "replications",
          "astId": 1073,
          "type": "t_mapping<t_bool>",
          "src": "2646:44:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "repInfo",
          "astId": 1077,
          "type": "t_mapping<t_struct<IdeaBlockLogic.ReplicationInfo>>",
          "src": "2694:50:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "repOwnes",
          "astId": 1083,
          "type": "t_mapping<t_uint256>",
          "src": "2748:57:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "getHash",
          "astId": 1087,
          "type": "t_mapping<t_uint256>",
          "src": "2809:31:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "ideaBlocksOwned",
          "astId": 1092,
          "type": "t_mapping<t_array:dyn<t_uint256>>",
          "src": "2844:42:3"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "DecentraCorp": {
      "address": "0xB2e99160FbDb7f221cCB2b2616EeB33acC81b596",
      "constructorCode": "608060405234801561001057600080fd5b50614eb1806100206000396000f3fe",
      "bodyBytecodeHash": "d164db343a996e2cc4059d9837e527ca7d2dc6bc3af9283807391de03f2f1f14",
      "localBytecodeHash": "f1556069cec7e12f3a638c81fef8949acdb87868117fcc4d9e71996ab5a4fcec",
      "deployedBytecodeHash": "f1556069cec7e12f3a638c81fef8949acdb87868117fcc4d9e71996ab5a4fcec",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_string>": {
          "id": "t_mapping<t_string>",
          "valueType": "t_string",
          "label": "mapping(key => string)",
          "kind": "mapping"
        },
        "t_mapping<t_address>": {
          "id": "t_mapping<t_address>",
          "valueType": "t_address",
          "label": "mapping(key => address)",
          "kind": "mapping"
        },
        "t_struct<DecentraCorp.Proposal>": {
          "id": "t_struct<DecentraCorp.Proposal>",
          "kind": "struct",
          "label": "DecentraCorp.Proposal",
          "members": [
            {
              "label": "Address",
              "astId": 2531,
              "type": "t_address",
              "src": "1874:15:10"
            },
            {
              "label": "PropCode",
              "astId": 2533,
              "type": "t_uint256",
              "src": "1899:13:10"
            },
            {
              "label": "Amount",
              "astId": 2535,
              "type": "t_uint256",
              "src": "1922:11:10"
            },
            {
              "label": "voteHash",
              "astId": 2537,
              "type": "t_string",
              "src": "1943:15:10"
            },
            {
              "label": "executed",
              "astId": 2539,
              "type": "t_bool",
              "src": "1968:13:10"
            },
            {
              "label": "proposalPassed",
              "astId": 2541,
              "type": "t_bool",
              "src": "1991:19:10"
            },
            {
              "label": "votes",
              "astId": 2544,
              "type": "t_array:dyn<t_struct<DecentraCorp.Vote>>",
              "src": "2020:12:10"
            },
            {
              "label": "voted",
              "astId": 2548,
              "type": "t_mapping<t_bool>",
              "src": "2042:31:10"
            }
          ]
        },
        "t_struct<DecentraCorp.Vote>": {
          "id": "t_struct<DecentraCorp.Vote>",
          "kind": "struct",
          "label": "DecentraCorp.Vote",
          "members": [
            {
              "label": "inSupport",
              "astId": 2551,
              "type": "t_bool",
              "src": "2113:14:10"
            },
            {
              "label": "voter",
              "astId": 2553,
              "type": "t_address",
              "src": "2141:13:10"
            }
          ]
        },
        "t_array:dyn<t_struct<DecentraCorp.Vote>>": {
          "id": "t_array:dyn<t_struct<DecentraCorp.Vote>>",
          "valueType": "t_struct<DecentraCorp.Vote>",
          "length": "dyn",
          "kind": "array",
          "label": "DecentraCorp.Vote[]"
        },
        "t_array:dyn<t_struct<DecentraCorp.Proposal>>": {
          "id": "t_array:dyn<t_struct<DecentraCorp.Proposal>>",
          "valueType": "t_struct<DecentraCorp.Proposal>",
          "length": "dyn",
          "kind": "array",
          "label": "DecentraCorp.Proposal[]"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 4423,
          "type": "t_bool",
          "src": "757:24:17"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 4425,
          "type": "t_bool",
          "src": "876:25:17"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 4474,
          "type": "t_array:50<t_uint256>",
          "src": "1891:29:17"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "_owner",
          "astId": 3732,
          "type": "t_address",
          "src": "302:22:13"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "______gap",
          "astId": 3843,
          "type": "t_array:50<t_uint256>",
          "src": "2186:29:13"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "_balances",
          "astId": 3860,
          "type": "t_mapping<t_uint256>",
          "src": "774:46:14"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "_allowed",
          "astId": 3866,
          "type": "t_mapping<t_uint256>",
          "src": "827:66:14"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "_totalSupply",
          "astId": 3868,
          "type": "t_uint256",
          "src": "900:28:14"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "______gap",
          "astId": 4282,
          "type": "t_array:50<t_uint256>",
          "src": "7661:29:14"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_name",
          "astId": 4293,
          "type": "t_string",
          "src": "382:20:15"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 4295,
          "type": "t_string",
          "src": "408:22:15"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 4297,
          "type": "t_uint8",
          "src": "436:23:15"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "______gap",
          "astId": 4349,
          "type": "t_array:50<t_uint256>",
          "src": "1097:29:15"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "memberCount",
          "astId": 2442,
          "type": "t_uint256",
          "src": "829:23:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "buyMemWindow",
          "astId": 2444,
          "type": "t_uint256",
          "src": "857:24:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "frozen",
          "astId": 2446,
          "type": "t_bool",
          "src": "886:18:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "founder",
          "astId": 2448,
          "type": "t_address",
          "src": "909:22:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "members",
          "astId": 2452,
          "type": "t_mapping<t_bool>",
          "src": "937:32:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "memberLevel",
          "astId": 2456,
          "type": "t_mapping<t_uint256>",
          "src": "974:36:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "memberProfileHash",
          "astId": 2460,
          "type": "t_mapping<t_string>",
          "src": "1015:44:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "approvedContracts",
          "astId": 2464,
          "type": "t_mapping<t_bool>",
          "src": "1152:42:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "getHash",
          "astId": 2468,
          "type": "t_mapping<t_uint256>",
          "src": "1199:31:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "propCode",
          "astId": 2472,
          "type": "t_mapping<t_uint256>",
          "src": "1235:32:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "profileComments",
          "astId": 2476,
          "type": "t_mapping<t_string>",
          "src": "1272:42:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "frozenAccounts",
          "astId": 2480,
          "type": "t_mapping<t_bool>",
          "src": "1319:39:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "userIDs",
          "astId": 2484,
          "type": "t_mapping<t_address>",
          "src": "1363:35:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "proposals",
          "astId": 2487,
          "type": "t_array:dyn<t_struct<DecentraCorp.Proposal>>",
          "src": "1405:27:10"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "AccountAbstraction": {
      "address": "0xf2358dB5ab9f3133Fc463aFC29225742B83D5b44",
      "constructorCode": "608060405234801561001057600080fd5b5061149a806100206000396000f3fe",
      "bodyBytecodeHash": "1d4cb91c198a196614b83dfdb7c4045395fc70208bc95a159d3fb1873e8fb4aa",
      "localBytecodeHash": "af820ea3a7a3995e7de6f42a7d853c897d2b99c76741006b7b7344e697a8bff5",
      "deployedBytecodeHash": "af820ea3a7a3995e7de6f42a7d853c897d2b99c76741006b7b7344e697a8bff5",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_mapping<t_string>": {
          "id": "t_mapping<t_string>",
          "valueType": "t_string",
          "label": "mapping(key => string)",
          "kind": "mapping"
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_address>": {
          "id": "t_mapping<t_address>",
          "valueType": "t_address",
          "label": "mapping(key => address)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 4423,
          "type": "t_bool",
          "src": "757:24:17"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 4425,
          "type": "t_bool",
          "src": "876:25:17"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 4474,
          "type": "t_array:50<t_uint256>",
          "src": "1891:29:17"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "_owner",
          "astId": 3732,
          "type": "t_address",
          "src": "302:22:13"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "______gap",
          "astId": 3843,
          "type": "t_array:50<t_uint256>",
          "src": "2186:29:13"
        },
        {
          "contract": "AccountAbstraction",
          "path": "contracts/UniversalWallet/AccountAbstraction.sol",
          "label": "UserNameToHash",
          "astId": 3458,
          "type": "t_mapping<t_string>",
          "src": "243:40:11"
        },
        {
          "contract": "AccountAbstraction",
          "path": "contracts/UniversalWallet/AccountAbstraction.sol",
          "label": "IsTaken",
          "astId": 3462,
          "type": "t_mapping<t_bool>",
          "src": "285:31:11"
        },
        {
          "contract": "AccountAbstraction",
          "path": "contracts/UniversalWallet/AccountAbstraction.sol",
          "label": "addressBook",
          "astId": 3466,
          "type": "t_mapping<t_address>",
          "src": "318:38:11"
        },
        {
          "contract": "AccountAbstraction",
          "path": "contracts/UniversalWallet/AccountAbstraction.sol",
          "label": "nameFinder",
          "astId": 3470,
          "type": "t_mapping<t_string>",
          "src": "358:37:11"
        },
        {
          "contract": "AccountAbstraction",
          "path": "contracts/UniversalWallet/AccountAbstraction.sol",
          "label": "exists",
          "astId": 3474,
          "type": "t_mapping<t_bool>",
          "src": "397:31:11"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "ChaosCasino": {
      "address": "0x9B7117E89D2378aDD8Fa71926A608881b5335987",
      "constructorCode": "608060405234801561001057600080fd5b50612bdf806100206000396000f3fe",
      "bodyBytecodeHash": "21fecc7a93afc4a7eea79845f42a21611d310df0b4134d93057a0794901c0fd9",
      "localBytecodeHash": "8d3b26255c8ad55e68f430b7632881401c93752e5c4b5274a3c46333ff272d91",
      "deployedBytecodeHash": "8d3b26255c8ad55e68f430b7632881401c93752e5c4b5274a3c46333ff272d91",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 4423,
          "type": "t_bool",
          "src": "757:24:17"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 4425,
          "type": "t_bool",
          "src": "876:25:17"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 4474,
          "type": "t_array:50<t_uint256>",
          "src": "1891:29:17"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "_owner",
          "astId": 3732,
          "type": "t_address",
          "src": "302:22:13"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "______gap",
          "astId": 3843,
          "type": "t_array:50<t_uint256>",
          "src": "2186:29:13"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "_balances",
          "astId": 3860,
          "type": "t_mapping<t_uint256>",
          "src": "774:46:14"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "_allowed",
          "astId": 3866,
          "type": "t_mapping<t_uint256>",
          "src": "827:66:14"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "_totalSupply",
          "astId": 3868,
          "type": "t_uint256",
          "src": "900:28:14"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "______gap",
          "astId": 4282,
          "type": "t_array:50<t_uint256>",
          "src": "7661:29:14"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_name",
          "astId": 4293,
          "type": "t_string",
          "src": "382:20:15"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 4295,
          "type": "t_string",
          "src": "408:22:15"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 4297,
          "type": "t_uint8",
          "src": "436:23:15"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "______gap",
          "astId": 4349,
          "type": "t_array:50<t_uint256>",
          "src": "1097:29:15"
        },
        {
          "contract": "ChaosCasino",
          "path": "contracts/ChaosCasino/ChaosCasino.sol",
          "label": "DCPoA",
          "astId": 42,
          "type": "t_address",
          "src": "1404:25:0"
        },
        {
          "contract": "ChaosCasino",
          "path": "contracts/ChaosCasino/ChaosCasino.sol",
          "label": "CPB",
          "astId": 44,
          "type": "t_address",
          "src": "1433:33:0"
        },
        {
          "contract": "ChaosCasino",
          "path": "contracts/ChaosCasino/ChaosCasino.sol",
          "label": "randNum",
          "astId": 46,
          "type": "t_uint256",
          "src": "1530:19:0"
        },
        {
          "contract": "ChaosCasino",
          "path": "contracts/ChaosCasino/ChaosCasino.sol",
          "label": "dcAdd",
          "astId": 48,
          "type": "t_address",
          "src": "1553:20:0"
        },
        {
          "contract": "ChaosCasino",
          "path": "contracts/ChaosCasino/ChaosCasino.sol",
          "label": "approvedGameContracts",
          "astId": 52,
          "type": "t_mapping<t_bool>",
          "src": "1577:46:0"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    }
  },
  "solidityLibs": {},
  "proxies": {
    "DecentraCorp/DecentraCorp": [
      {
        "address": "0xB8339Dedb4DBa1ef4CfB55E3d400a8a580e9bbd2",
        "version": "0.1.0",
        "implementation": "0xB2e99160FbDb7f221cCB2b2616EeB33acC81b596"
      }
    ],
    "DecentraCorp/CryptoPatentBlockchain": [
      {
        "address": "0x24e2b4690BDBdA1A7488842c2F3c5cCd306bE617",
        "version": "0.1.0",
        "implementation": "0xf8Ef61aC5F8877c7D4b5Df1F553811812e2bDF42"
      }
    ],
    "DecentraCorp/ChaosCasino": [
      {
        "address": "0x589DD04Bf2aA74f407910B7da82D9044536246Eb",
        "version": "0.1.0",
        "implementation": "0x9B7117E89D2378aDD8Fa71926A608881b5335987"
      }
    ],
    "DecentraCorp/Entropy21": [
      {
        "address": "0x123d0f4d00726a9097eA4aE2f82bEe6bB353649A",
        "version": "0.1.0",
        "implementation": "0xE9403D2feA27107DC18850ceaCbc861618a147F5"
      }
    ],
    "DecentraCorp/AccountAbstraction": [
      {
        "address": "0xC05C3f60E499440D89D7F195765187495E7B220b",
        "version": "0.1.0",
        "implementation": "0xf2358dB5ab9f3133Fc463aFC29225742B83D5b44"
      }
    ]
  },
  "zosversion": "2.2",
  "dependencies": {
    "openzeppelin-eth": {
      "package": "0x0A199573AD7313090e87a9092abB5f3DC1a7116f",
      "version": "2.1.3",
      "customDeploy": true
    }
  },
  "version": "0.1.0",
  "proxyAdmin": {
    "address": "0x54A5b4996b23355Df9a838cd7a7313C41cc5999b"
  }
}