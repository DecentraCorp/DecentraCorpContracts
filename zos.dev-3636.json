{
  "contracts": {
    "Entropy21": {
      "address": "0x8F3847aCB04Ed6D7F47c03d896D567d38eFbCd24",
      "constructorCode": "608060405234801561001057600080fd5b5061125c806100206000396000f3fe",
      "bodyBytecodeHash": "93cf65609d11d31737cdb0ab7ecdd0461e923e1cb2cac88e2d0720d446b6c401",
      "localBytecodeHash": "c5b249b14b0067523be63a29026d068e200d606e4b36b0bed3c59be39f22deea",
      "deployedBytecodeHash": "c5b249b14b0067523be63a29026d068e200d606e4b36b0bed3c59be39f22deea",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Entropy21.NewRound>": {
          "id": "t_struct<Entropy21.NewRound>",
          "kind": "struct",
          "label": "Entropy21.NewRound",
          "members": [
            {
              "label": "NumberOfPlayers",
              "astId": 308,
              "type": "t_uint256",
              "src": "578:20:1"
            },
            {
              "label": "PoolAmount",
              "astId": 310,
              "type": "t_uint256",
              "src": "602:15:1"
            },
            {
              "label": "CurrentHighest",
              "astId": 312,
              "type": "t_uint256",
              "src": "621:19:1"
            },
            {
              "label": "CurrentWinner",
              "astId": 314,
              "type": "t_address",
              "src": "644:21:1"
            }
          ]
        },
        "t_mapping<t_struct<Entropy21.NewRound>>": {
          "id": "t_mapping<t_struct<Entropy21.NewRound>>",
          "valueType": "t_struct<Entropy21.NewRound>",
          "label": "mapping(key => Entropy21.NewRound)",
          "kind": "mapping"
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_mapping<t_string>": {
          "id": "t_mapping<t_string>",
          "valueType": "t_string",
          "label": "mapping(key => string)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 4371,
          "type": "t_bool",
          "src": "757:24:16"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 4373,
          "type": "t_bool",
          "src": "876:25:16"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 4422,
          "type": "t_array:50<t_uint256>",
          "src": "1891:29:16"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "_owner",
          "astId": 3680,
          "type": "t_address",
          "src": "302:22:12"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "______gap",
          "astId": 3791,
          "type": "t_array:50<t_uint256>",
          "src": "2186:29:12"
        },
        {
          "contract": "Entropy21",
          "path": "contracts/ChaosCasino/Entropy21.sol",
          "label": "CC",
          "astId": 290,
          "type": "t_address",
          "src": "362:21:1"
        },
        {
          "contract": "Entropy21",
          "path": "contracts/ChaosCasino/Entropy21.sol",
          "label": "round",
          "astId": 292,
          "type": "t_uint256",
          "src": "389:17:1"
        },
        {
          "contract": "Entropy21",
          "path": "contracts/ChaosCasino/Entropy21.sol",
          "label": "roundTimer",
          "astId": 294,
          "type": "t_uint256",
          "src": "410:22:1"
        },
        {
          "contract": "Entropy21",
          "path": "contracts/ChaosCasino/Entropy21.sol",
          "label": "rounds",
          "astId": 298,
          "type": "t_mapping<t_struct<Entropy21.NewRound>>",
          "src": "436:39:1"
        },
        {
          "contract": "Entropy21",
          "path": "contracts/ChaosCasino/Entropy21.sol",
          "label": "inTheGame",
          "astId": 302,
          "type": "t_mapping<t_bool>",
          "src": "479:34:1"
        },
        {
          "contract": "Entropy21",
          "path": "contracts/ChaosCasino/Entropy21.sol",
          "label": "playerHashs",
          "astId": 306,
          "type": "t_mapping<t_string>",
          "src": "517:38:1"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "CryptoPatentBlockchain": {
      "address": "0x86EB808f2F5D60a6513BB0e955aAc423E24CfCd4",
      "constructorCode": "608060405234801561001057600080fd5b5061572380620000216000396000f3fe",
      "bodyBytecodeHash": "1bbd30041b5a9b5ae0262e27e26667f6cbd6546e31858d557ab1e1a8b655e613",
      "localBytecodeHash": "f7ad1a6e63d502d19e981982cf747b632fcce9488a7f8480be5cf21ed8727b76",
      "deployedBytecodeHash": "f7ad1a6e63d502d19e981982cf747b632fcce9488a7f8480be5cf21ed8727b76",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<IdeaBlockLogic.IdeaBlock>": {
          "id": "t_struct<IdeaBlockLogic.IdeaBlock>",
          "kind": "struct",
          "label": "IdeaBlockLogic.IdeaBlock",
          "members": [
            {
              "label": "globalUseBlockAmount",
              "astId": 1300,
              "type": "t_uint256",
              "src": "4043:25:3"
            },
            {
              "label": "royalty",
              "astId": 1302,
              "type": "t_uint256",
              "src": "4074:12:3"
            },
            {
              "label": "miningTime",
              "astId": 1304,
              "type": "t_uint256",
              "src": "4092:15:3"
            },
            {
              "label": "stakeAmount",
              "astId": 1306,
              "type": "t_uint256",
              "src": "4113:16:3"
            },
            {
              "label": "levelRequirement",
              "astId": 1308,
              "type": "t_uint256",
              "src": "4135:21:3"
            },
            {
              "label": "inventorAddress",
              "astId": 1310,
              "type": "t_address",
              "src": "4162:23:3"
            },
            {
              "label": "inventionAddress",
              "astId": 1312,
              "type": "t_address",
              "src": "4191:24:3"
            },
            {
              "label": "IPFShash",
              "astId": 1314,
              "type": "t_string",
              "src": "4221:15:3"
            }
          ]
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_mapping<t_struct<IdeaBlockLogic.IdeaBlock>>": {
          "id": "t_mapping<t_struct<IdeaBlockLogic.IdeaBlock>>",
          "valueType": "t_struct<IdeaBlockLogic.IdeaBlock>",
          "label": "mapping(key => IdeaBlockLogic.IdeaBlock)",
          "kind": "mapping"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_struct<IdeaBlockLogic.IdeaProposal>": {
          "id": "t_struct<IdeaBlockLogic.IdeaProposal>",
          "kind": "struct",
          "label": "IdeaBlockLogic.IdeaProposal",
          "members": [
            {
              "label": "IdeaIPFS",
              "astId": 1267,
              "type": "t_string",
              "src": "3508:15:3"
            },
            {
              "label": "executed",
              "astId": 1269,
              "type": "t_bool",
              "src": "3532:13:3"
            },
            {
              "label": "proposalPassed",
              "astId": 1271,
              "type": "t_bool",
              "src": "3554:19:3"
            },
            {
              "label": "globalUseBlockAmount",
              "astId": 1273,
              "type": "t_uint256",
              "src": "3582:25:3"
            },
            {
              "label": "royalty",
              "astId": 1275,
              "type": "t_uint256",
              "src": "3616:12:3"
            },
            {
              "label": "miningTime",
              "astId": 1277,
              "type": "t_uint256",
              "src": "3637:15:3"
            },
            {
              "label": "stakeAmount",
              "astId": 1279,
              "type": "t_uint256",
              "src": "3661:16:3"
            },
            {
              "label": "levelRequirement",
              "astId": 1281,
              "type": "t_uint256",
              "src": "3686:21:3"
            },
            {
              "label": "inventorAddress",
              "astId": 1283,
              "type": "t_address",
              "src": "3716:23:3"
            },
            {
              "label": "inventionAddress",
              "astId": 1285,
              "type": "t_address",
              "src": "3748:24:3"
            },
            {
              "label": "votes",
              "astId": 1288,
              "type": "t_array:dyn<t_struct<IdeaBlockLogic.Vote>>",
              "src": "3781:12:3"
            },
            {
              "label": "voted",
              "astId": 1292,
              "type": "t_mapping<t_bool>",
              "src": "3802:31:3"
            }
          ]
        },
        "t_struct<IdeaBlockLogic.Vote>": {
          "id": "t_struct<IdeaBlockLogic.Vote>",
          "kind": "struct",
          "label": "IdeaBlockLogic.Vote",
          "members": [
            {
              "label": "inSupport",
              "astId": 1295,
              "type": "t_bool",
              "src": "3867:14:3"
            },
            {
              "label": "voter",
              "astId": 1297,
              "type": "t_address",
              "src": "3893:13:3"
            }
          ]
        },
        "t_array:dyn<t_struct<IdeaBlockLogic.Vote>>": {
          "id": "t_array:dyn<t_struct<IdeaBlockLogic.Vote>>",
          "valueType": "t_struct<IdeaBlockLogic.Vote>",
          "length": "dyn",
          "kind": "array",
          "label": "IdeaBlockLogic.Vote[]"
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_struct<IdeaBlockLogic.IdeaProposal>>": {
          "id": "t_mapping<t_struct<IdeaBlockLogic.IdeaProposal>>",
          "valueType": "t_struct<IdeaBlockLogic.IdeaProposal>",
          "label": "mapping(key => IdeaBlockLogic.IdeaProposal)",
          "kind": "mapping"
        },
        "t_struct<IdeaBlockLogic.ReplicationInfo>": {
          "id": "t_struct<IdeaBlockLogic.ReplicationInfo>",
          "kind": "struct",
          "label": "IdeaBlockLogic.ReplicationInfo",
          "members": [
            {
              "label": "BlockReward",
              "astId": 1317,
              "type": "t_uint256",
              "src": "4332:16:3"
            },
            {
              "label": "IdeaID",
              "astId": 1319,
              "type": "t_uint256",
              "src": "4354:11:3"
            },
            {
              "label": "Royalty",
              "astId": 1321,
              "type": "t_uint256",
              "src": "4371:12:3"
            },
            {
              "label": "InventorsAddress",
              "astId": 1323,
              "type": "t_address",
              "src": "4389:24:3"
            },
            {
              "label": "ReplicationAddress",
              "astId": 1325,
              "type": "t_address",
              "src": "4419:26:3"
            },
            {
              "label": "ReplicationMember",
              "astId": 1327,
              "type": "t_address",
              "src": "4451:25:3"
            },
            {
              "label": "OwnersAddress",
              "astId": 1329,
              "type": "t_address",
              "src": "4482:21:3"
            },
            {
              "label": "DeviceLockHash",
              "astId": 1331,
              "type": "t_string",
              "src": "4509:21:3"
            }
          ]
        },
        "t_mapping<t_struct<IdeaBlockLogic.ReplicationInfo>>": {
          "id": "t_mapping<t_struct<IdeaBlockLogic.ReplicationInfo>>",
          "valueType": "t_struct<IdeaBlockLogic.ReplicationInfo>",
          "label": "mapping(key => IdeaBlockLogic.ReplicationInfo)",
          "kind": "mapping"
        },
        "t_array:dyn<t_uint256>": {
          "id": "t_array:dyn<t_uint256>",
          "valueType": "t_uint256",
          "length": "dyn",
          "kind": "array",
          "label": "uint256[]"
        },
        "t_mapping<t_array:dyn<t_uint256>>": {
          "id": "t_mapping<t_array:dyn<t_uint256>>",
          "valueType": "t_array:dyn<t_uint256>",
          "label": "mapping(key => uint256[])",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 4371,
          "type": "t_bool",
          "src": "757:24:16"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 4373,
          "type": "t_bool",
          "src": "876:25:16"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 4422,
          "type": "t_array:50<t_uint256>",
          "src": "1891:29:16"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "_owner",
          "astId": 3680,
          "type": "t_address",
          "src": "302:22:12"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "______gap",
          "astId": 3791,
          "type": "t_array:50<t_uint256>",
          "src": "2186:29:12"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "DCPoA",
          "astId": 1160,
          "type": "t_address",
          "src": "1574:25:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "Validators",
          "astId": 1162,
          "type": "t_address",
          "src": "1603:33:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "globalIdeaCount",
          "astId": 1164,
          "type": "t_uint256",
          "src": "1895:27:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "globalBlockHalfTime",
          "astId": 1166,
          "type": "t_uint256",
          "src": "1926:31:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "ideaBlockReward",
          "astId": 1168,
          "type": "t_uint256",
          "src": "1961:27:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "globalIdeaPropCount",
          "astId": 1170,
          "type": "t_uint256",
          "src": "1992:31:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "globalUseBlock",
          "astId": 1172,
          "type": "t_uint256",
          "src": "2027:26:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "ideaVariables",
          "astId": 1176,
          "type": "t_mapping<t_struct<IdeaBlockLogic.IdeaBlock>>",
          "src": "2189:47:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "IdeaAddToId",
          "astId": 1180,
          "type": "t_mapping<t_uint256>",
          "src": "2240:43:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "ideaProposals",
          "astId": 1184,
          "type": "t_mapping<t_struct<IdeaBlockLogic.IdeaProposal>>",
          "src": "2287:50:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "weightTracker",
          "astId": 1188,
          "type": "t_mapping<t_uint256>",
          "src": "2341:42:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "localWeightTracker",
          "astId": 1192,
          "type": "t_mapping<t_uint256>",
          "src": "2387:50:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "ideaRepCounter",
          "astId": 1196,
          "type": "t_mapping<t_uint256>",
          "src": "2702:43:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "localMiningtimeTracker",
          "astId": 1200,
          "type": "t_mapping<t_uint256>",
          "src": "2749:54:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "replications",
          "astId": 1204,
          "type": "t_mapping<t_bool>",
          "src": "2807:44:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "repInfo",
          "astId": 1208,
          "type": "t_mapping<t_struct<IdeaBlockLogic.ReplicationInfo>>",
          "src": "2855:50:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "repOwnes",
          "astId": 1214,
          "type": "t_mapping<t_uint256>",
          "src": "2909:57:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "getHash",
          "astId": 1218,
          "type": "t_mapping<t_uint256>",
          "src": "2970:31:3"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "ideaBlocksOwned",
          "astId": 1223,
          "type": "t_mapping<t_array:dyn<t_uint256>>",
          "src": "3005:42:3"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "DecentraCorp": {
      "address": "0x50780Df18Ecfd8C35354728EC22aAf4FE04111ad",
      "constructorCode": "608060405234801561001057600080fd5b50614d57806100206000396000f3fe",
      "bodyBytecodeHash": "27a5c57cb82f777b1e13d9c2bced30e54929b2a7815de2a17a2f2bb1239e95d7",
      "localBytecodeHash": "3e9598785f3e7a4d36fe4349eb1ff888abd4ffefb9acae6a5ebcfc1f37162e0a",
      "deployedBytecodeHash": "3e9598785f3e7a4d36fe4349eb1ff888abd4ffefb9acae6a5ebcfc1f37162e0a",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_string>": {
          "id": "t_mapping<t_string>",
          "valueType": "t_string",
          "label": "mapping(key => string)",
          "kind": "mapping"
        },
        "t_mapping<t_address>": {
          "id": "t_mapping<t_address>",
          "valueType": "t_address",
          "label": "mapping(key => address)",
          "kind": "mapping"
        },
        "t_struct<DecentraCorp.Proposal>": {
          "id": "t_struct<DecentraCorp.Proposal>",
          "kind": "struct",
          "label": "DecentraCorp.Proposal",
          "members": [
            {
              "label": "Address",
              "astId": 2640,
              "type": "t_address",
              "src": "1874:15:10"
            },
            {
              "label": "PropCode",
              "astId": 2642,
              "type": "t_uint256",
              "src": "1899:13:10"
            },
            {
              "label": "Amount",
              "astId": 2644,
              "type": "t_uint256",
              "src": "1922:11:10"
            },
            {
              "label": "voteHash",
              "astId": 2646,
              "type": "t_string",
              "src": "1943:15:10"
            },
            {
              "label": "executed",
              "astId": 2648,
              "type": "t_bool",
              "src": "1968:13:10"
            },
            {
              "label": "proposalPassed",
              "astId": 2650,
              "type": "t_bool",
              "src": "1991:19:10"
            },
            {
              "label": "votes",
              "astId": 2653,
              "type": "t_array:dyn<t_struct<DecentraCorp.Vote>>",
              "src": "2020:12:10"
            },
            {
              "label": "voted",
              "astId": 2657,
              "type": "t_mapping<t_bool>",
              "src": "2042:31:10"
            }
          ]
        },
        "t_struct<DecentraCorp.Vote>": {
          "id": "t_struct<DecentraCorp.Vote>",
          "kind": "struct",
          "label": "DecentraCorp.Vote",
          "members": [
            {
              "label": "inSupport",
              "astId": 2660,
              "type": "t_bool",
              "src": "2113:14:10"
            },
            {
              "label": "voter",
              "astId": 2662,
              "type": "t_address",
              "src": "2141:13:10"
            }
          ]
        },
        "t_array:dyn<t_struct<DecentraCorp.Vote>>": {
          "id": "t_array:dyn<t_struct<DecentraCorp.Vote>>",
          "valueType": "t_struct<DecentraCorp.Vote>",
          "length": "dyn",
          "kind": "array",
          "label": "DecentraCorp.Vote[]"
        },
        "t_array:dyn<t_struct<DecentraCorp.Proposal>>": {
          "id": "t_array:dyn<t_struct<DecentraCorp.Proposal>>",
          "valueType": "t_struct<DecentraCorp.Proposal>",
          "length": "dyn",
          "kind": "array",
          "label": "DecentraCorp.Proposal[]"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 4371,
          "type": "t_bool",
          "src": "757:24:16"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 4373,
          "type": "t_bool",
          "src": "876:25:16"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 4422,
          "type": "t_array:50<t_uint256>",
          "src": "1891:29:16"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "_owner",
          "astId": 3680,
          "type": "t_address",
          "src": "302:22:12"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "______gap",
          "astId": 3791,
          "type": "t_array:50<t_uint256>",
          "src": "2186:29:12"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "_balances",
          "astId": 3808,
          "type": "t_mapping<t_uint256>",
          "src": "774:46:13"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "_allowed",
          "astId": 3814,
          "type": "t_mapping<t_uint256>",
          "src": "827:66:13"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "_totalSupply",
          "astId": 3816,
          "type": "t_uint256",
          "src": "900:28:13"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "______gap",
          "astId": 4230,
          "type": "t_array:50<t_uint256>",
          "src": "7661:29:13"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_name",
          "astId": 4241,
          "type": "t_string",
          "src": "382:20:14"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 4243,
          "type": "t_string",
          "src": "408:22:14"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 4245,
          "type": "t_uint8",
          "src": "436:23:14"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "______gap",
          "astId": 4297,
          "type": "t_array:50<t_uint256>",
          "src": "1097:29:14"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "memberCount",
          "astId": 2551,
          "type": "t_uint256",
          "src": "829:23:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "buyMemWindow",
          "astId": 2553,
          "type": "t_uint256",
          "src": "857:24:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "frozen",
          "astId": 2555,
          "type": "t_bool",
          "src": "886:18:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "founder",
          "astId": 2557,
          "type": "t_address",
          "src": "909:22:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "members",
          "astId": 2561,
          "type": "t_mapping<t_bool>",
          "src": "937:32:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "memberLevel",
          "astId": 2565,
          "type": "t_mapping<t_uint256>",
          "src": "974:36:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "memberProfileHash",
          "astId": 2569,
          "type": "t_mapping<t_string>",
          "src": "1015:44:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "approvedContracts",
          "astId": 2573,
          "type": "t_mapping<t_bool>",
          "src": "1152:42:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "getHash",
          "astId": 2577,
          "type": "t_mapping<t_uint256>",
          "src": "1199:31:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "propCode",
          "astId": 2581,
          "type": "t_mapping<t_uint256>",
          "src": "1235:32:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "profileComments",
          "astId": 2585,
          "type": "t_mapping<t_string>",
          "src": "1272:42:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "frozenAccounts",
          "astId": 2589,
          "type": "t_mapping<t_bool>",
          "src": "1319:39:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "userIDs",
          "astId": 2593,
          "type": "t_mapping<t_address>",
          "src": "1363:35:10"
        },
        {
          "contract": "DecentraCorp",
          "path": "contracts/DecentraCorp/DecentraCorp.sol",
          "label": "proposals",
          "astId": 2596,
          "type": "t_array:dyn<t_struct<DecentraCorp.Proposal>>",
          "src": "1405:27:10"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "ChaosCasino": {
      "address": "0x19BEDA608AE73C46AD2e8432bb8b3A0F91f6703e",
      "constructorCode": "608060405234801561001057600080fd5b50612bdf806100206000396000f3fe",
      "bodyBytecodeHash": "21fecc7a93afc4a7eea79845f42a21611d310df0b4134d93057a0794901c0fd9",
      "localBytecodeHash": "8d3b26255c8ad55e68f430b7632881401c93752e5c4b5274a3c46333ff272d91",
      "deployedBytecodeHash": "8d3b26255c8ad55e68f430b7632881401c93752e5c4b5274a3c46333ff272d91",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 4371,
          "type": "t_bool",
          "src": "757:24:16"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 4373,
          "type": "t_bool",
          "src": "876:25:16"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 4422,
          "type": "t_array:50<t_uint256>",
          "src": "1891:29:16"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "_owner",
          "astId": 3680,
          "type": "t_address",
          "src": "302:22:12"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "______gap",
          "astId": 3791,
          "type": "t_array:50<t_uint256>",
          "src": "2186:29:12"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "_balances",
          "astId": 3808,
          "type": "t_mapping<t_uint256>",
          "src": "774:46:13"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "_allowed",
          "astId": 3814,
          "type": "t_mapping<t_uint256>",
          "src": "827:66:13"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "_totalSupply",
          "astId": 3816,
          "type": "t_uint256",
          "src": "900:28:13"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "______gap",
          "astId": 4230,
          "type": "t_array:50<t_uint256>",
          "src": "7661:29:13"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_name",
          "astId": 4241,
          "type": "t_string",
          "src": "382:20:14"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 4243,
          "type": "t_string",
          "src": "408:22:14"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 4245,
          "type": "t_uint8",
          "src": "436:23:14"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "______gap",
          "astId": 4297,
          "type": "t_array:50<t_uint256>",
          "src": "1097:29:14"
        },
        {
          "contract": "ChaosCasino",
          "path": "contracts/ChaosCasino/ChaosCasino.sol",
          "label": "DCPoA",
          "astId": 42,
          "type": "t_address",
          "src": "1404:25:0"
        },
        {
          "contract": "ChaosCasino",
          "path": "contracts/ChaosCasino/ChaosCasino.sol",
          "label": "CPB",
          "astId": 44,
          "type": "t_address",
          "src": "1433:33:0"
        },
        {
          "contract": "ChaosCasino",
          "path": "contracts/ChaosCasino/ChaosCasino.sol",
          "label": "randNum",
          "astId": 46,
          "type": "t_uint256",
          "src": "1530:19:0"
        },
        {
          "contract": "ChaosCasino",
          "path": "contracts/ChaosCasino/ChaosCasino.sol",
          "label": "dcAdd",
          "astId": 48,
          "type": "t_address",
          "src": "1553:20:0"
        },
        {
          "contract": "ChaosCasino",
          "path": "contracts/ChaosCasino/ChaosCasino.sol",
          "label": "approvedGameContracts",
          "astId": 52,
          "type": "t_mapping<t_bool>",
          "src": "1577:46:0"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    }
  },
  "solidityLibs": {},
  "proxies": {
    "DecentraCorp/DecentraCorp": [
      {
        "address": "0x314710B62Cf4DB72B8A3D82C4558ed9D448e991b",
        "version": "0.1.0",
        "implementation": "0x50780Df18Ecfd8C35354728EC22aAf4FE04111ad"
      }
    ],
    "DecentraCorp/CryptoPatentBlockchain": [
      {
        "address": "0x4E0681B33a71810C42f53bD153d473fa4b674fa6",
        "version": "0.1.0",
        "implementation": "0x86EB808f2F5D60a6513BB0e955aAc423E24CfCd4"
      }
    ],
    "DecentraCorp/ChaosCasino": [
      {
        "address": "0xA0042d1a52358F068Aa0835BC6a22F28D5B2A949",
        "version": "0.1.0",
        "implementation": "0x19BEDA608AE73C46AD2e8432bb8b3A0F91f6703e"
      }
    ],
    "DecentraCorp/Entropy21": [
      {
        "address": "0x7B3042879FF9162Ba68a8B4097c9Da5c286F88F8",
        "version": "0.1.0",
        "implementation": "0x8F3847aCB04Ed6D7F47c03d896D567d38eFbCd24"
      }
    ]
  },
  "zosversion": "2.2",
  "dependencies": {
    "openzeppelin-eth": {
      "package": "0x2AF09696Ab079F4D4397D982134414C02D9FC215",
      "version": "2.1.3",
      "customDeploy": true
    }
  },
  "version": "0.1.0",
  "proxyAdmin": {
    "address": "0xfb4ff6b6f240c4e88c3791d626Ab008c7fCc9521"
  }
}