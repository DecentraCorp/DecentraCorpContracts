{
  "contracts": {
    "ChaosCasino": {
      "address": "0x1D0569E5CaeeE8e6a618A6047c961d49a6306615",
      "constructorCode": "608060405234801561001057600080fd5b506127f8806100206000396000f3fe",
      "bodyBytecodeHash": "26d80f07df574f58cf71fcf1e72bf2d26b6050356493bdbf227470ea3fe5f6cf",
      "localBytecodeHash": "76c9d6130aeba399ea36d9141c8e045561c76275db1987b618c93853b19320fd",
      "deployedBytecodeHash": "76c9d6130aeba399ea36d9141c8e045561c76275db1987b618c93853b19320fd",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 3855,
          "type": "t_bool",
          "src": "757:24:15"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 3857,
          "type": "t_bool",
          "src": "876:25:15"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 3906,
          "type": "t_array:50<t_uint256>",
          "src": "1891:29:15"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "_owner",
          "astId": 3164,
          "type": "t_address",
          "src": "302:22:11"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "______gap",
          "astId": 3275,
          "type": "t_array:50<t_uint256>",
          "src": "2186:29:11"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "_balances",
          "astId": 3292,
          "type": "t_mapping<t_uint256>",
          "src": "774:46:12"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "_allowed",
          "astId": 3298,
          "type": "t_mapping<t_uint256>",
          "src": "827:66:12"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "_totalSupply",
          "astId": 3300,
          "type": "t_uint256",
          "src": "900:28:12"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "______gap",
          "astId": 3714,
          "type": "t_array:50<t_uint256>",
          "src": "7661:29:12"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_name",
          "astId": 3725,
          "type": "t_string",
          "src": "382:20:13"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 3727,
          "type": "t_string",
          "src": "408:22:13"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 3729,
          "type": "t_uint8",
          "src": "436:23:13"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "______gap",
          "astId": 3781,
          "type": "t_array:50<t_uint256>",
          "src": "1097:29:13"
        },
        {
          "contract": "ChaosCasino",
          "path": "contracts/ChaosCasino/ChaosCasino.sol",
          "label": "CPB",
          "astId": 27,
          "type": "t_address",
          "src": "1130:33:0"
        },
        {
          "contract": "ChaosCasino",
          "path": "contracts/ChaosCasino/ChaosCasino.sol",
          "label": "randNum",
          "astId": 29,
          "type": "t_uint256",
          "src": "1227:12:0"
        },
        {
          "contract": "ChaosCasino",
          "path": "contracts/ChaosCasino/ChaosCasino.sol",
          "label": "bets",
          "astId": 33,
          "type": "t_mapping<t_uint256>",
          "src": "1344:29:0"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "DC_Depot": {
      "address": "0x333D1D44C9E5EbfB8A3eE1d34f5068f3dB95Acbe",
      "constructorCode": "608060405234801561001057600080fd5b50613150806100206000396000f3fe",
      "bodyBytecodeHash": "0652dd526ef9420584db4c8e2592f69c8a5d5589d9769518c1da43b8331d5d77",
      "localBytecodeHash": "575d771a3c02c78d945a8e728f22a206c48e9bca22802b8c9aaf0e54dfaa6187",
      "deployedBytecodeHash": "575d771a3c02c78d945a8e728f22a206c48e9bca22802b8c9aaf0e54dfaa6187",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_array:dyn<t_address>": {
          "id": "t_array:dyn<t_address>",
          "valueType": "t_address",
          "length": "dyn",
          "kind": "array",
          "label": "address[]"
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_struct<DCD_Escrow.Escrow>": {
          "id": "t_struct<DCD_Escrow.Escrow>",
          "kind": "struct",
          "label": "DCD_Escrow.Escrow",
          "members": [
            {
              "label": "PayedInNTC",
              "astId": 1647,
              "type": "t_bool",
              "src": "212:15:6"
            },
            {
              "label": "Price",
              "astId": 1649,
              "type": "t_uint256",
              "src": "231:10:6"
            },
            {
              "label": "buyer",
              "astId": 1651,
              "type": "t_address_payable",
              "src": "245:21:6"
            },
            {
              "label": "seller",
              "astId": 1653,
              "type": "t_address_payable",
              "src": "270:22:6"
            },
            {
              "label": "facility",
              "astId": 1655,
              "type": "t_address",
              "src": "296:16:6"
            },
            {
              "label": "ItemIPFS",
              "astId": 1657,
              "type": "t_string",
              "src": "316:15:6"
            }
          ]
        },
        "t_address_payable": {
          "id": "t_address_payable",
          "kind": "elementary",
          "label": "address payable"
        },
        "t_mapping<t_struct<DCD_Escrow.Escrow>>": {
          "id": "t_mapping<t_struct<DCD_Escrow.Escrow>>",
          "valueType": "t_struct<DCD_Escrow.Escrow>",
          "label": "mapping(key => DCD_Escrow.Escrow)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 3855,
          "type": "t_bool",
          "src": "757:24:15"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 3857,
          "type": "t_bool",
          "src": "876:25:15"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 3906,
          "type": "t_array:50<t_uint256>",
          "src": "1891:29:15"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "_owner",
          "astId": 3164,
          "type": "t_address",
          "src": "302:22:11"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "______gap",
          "astId": 3275,
          "type": "t_array:50<t_uint256>",
          "src": "2186:29:11"
        },
        {
          "contract": "DecentraControlled",
          "path": "contracts/DC_Depot/DecentraControlled.sol",
          "label": "DCPoA",
          "astId": 1844,
          "type": "t_address",
          "src": "592:28:8"
        },
        {
          "contract": "DecentraControlled",
          "path": "contracts/DC_Depot/DecentraControlled.sol",
          "label": "globalItemCount",
          "astId": 1846,
          "type": "t_uint256",
          "src": "626:27:8"
        },
        {
          "contract": "DecentraControlled",
          "path": "contracts/DC_Depot/DecentraControlled.sol",
          "label": "etherEarned",
          "astId": 1848,
          "type": "t_uint256",
          "src": "657:23:8"
        },
        {
          "contract": "DecentraControlled",
          "path": "contracts/DC_Depot/DecentraControlled.sol",
          "label": "globalEscrowCount",
          "astId": 1850,
          "type": "t_uint256",
          "src": "684:29:8"
        },
        {
          "contract": "DecentraControlled",
          "path": "contracts/DC_Depot/DecentraControlled.sol",
          "label": "_NTC_PriceMod",
          "astId": 1852,
          "type": "t_uint256",
          "src": "717:25:8"
        },
        {
          "contract": "DecentraControlled",
          "path": "contracts/DC_Depot/DecentraControlled.sol",
          "label": "_DecentraCorpFee",
          "astId": 1854,
          "type": "t_uint256",
          "src": "746:28:8"
        },
        {
          "contract": "DecentraControlled",
          "path": "contracts/DC_Depot/DecentraControlled.sol",
          "label": "forSale",
          "astId": 1856,
          "type": "t_string",
          "src": "779:21:8"
        },
        {
          "contract": "DecentraControlled",
          "path": "contracts/DC_Depot/DecentraControlled.sol",
          "label": "needsProcessing",
          "astId": 1858,
          "type": "t_string",
          "src": "804:29:8"
        },
        {
          "contract": "DecentraControlled",
          "path": "contracts/DC_Depot/DecentraControlled.sol",
          "label": "processors",
          "astId": 1861,
          "type": "t_array:dyn<t_address>",
          "src": "838:27:8"
        },
        {
          "contract": "DecentraControlled",
          "path": "contracts/DC_Depot/DecentraControlled.sol",
          "label": "approvedProcessingFacility",
          "astId": 1865,
          "type": "t_mapping<t_bool>",
          "src": "869:51:8"
        },
        {
          "contract": "DecentraControlled",
          "path": "contracts/DC_Depot/DecentraControlled.sol",
          "label": "IPFStoID",
          "astId": 1869,
          "type": "t_mapping<t_uint256>",
          "src": "924:32:8"
        },
        {
          "contract": "DecentraControlled",
          "path": "contracts/DC_Depot/DecentraControlled.sol",
          "label": "PoPTokens",
          "astId": 1873,
          "type": "t_mapping<t_uint256>",
          "src": "960:34:8"
        },
        {
          "contract": "DCD_Escrow",
          "path": "contracts/DC_Depot/DCD_Escrow.sol",
          "label": "itemInEscrow",
          "astId": 1662,
          "type": "t_mapping<t_struct<DCD_Escrow.Escrow>>",
          "src": "340:44:6"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "CryptoPatentBlockchain": {
      "address": "0x0998584c27bF38379fB1cBdA77838f0820B47818",
      "constructorCode": "608060405234801561001057600080fd5b506143e7806100206000396000f3fe",
      "bodyBytecodeHash": "1a8757346eb055ae3b6832dbbafbf0637d7f5a596ce3b25dd9fcb6ae96ce999a",
      "localBytecodeHash": "e00857a4d95acd6a2e9a2b54b71044e54769cfbedf5301c559dd24f32b2f9b5e",
      "deployedBytecodeHash": "e00857a4d95acd6a2e9a2b54b71044e54769cfbedf5301c559dd24f32b2f9b5e",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<IdeaBlockLogic.IdeaBlock>": {
          "id": "t_struct<IdeaBlockLogic.IdeaBlock>",
          "kind": "struct",
          "label": "IdeaBlockLogic.IdeaBlock",
          "members": [
            {
              "label": "globalUseBlockAmount",
              "astId": 860,
              "type": "t_uint256",
              "src": "3720:25:2"
            },
            {
              "label": "royalty",
              "astId": 862,
              "type": "t_uint256",
              "src": "3751:12:2"
            },
            {
              "label": "miningTime",
              "astId": 864,
              "type": "t_uint256",
              "src": "3769:15:2"
            },
            {
              "label": "inventorAddress",
              "astId": 866,
              "type": "t_address",
              "src": "3790:23:2"
            },
            {
              "label": "inventionAddress",
              "astId": 868,
              "type": "t_address",
              "src": "3819:24:2"
            },
            {
              "label": "IPFShash",
              "astId": 870,
              "type": "t_string",
              "src": "3849:15:2"
            }
          ]
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_mapping<t_struct<IdeaBlockLogic.IdeaBlock>>": {
          "id": "t_mapping<t_struct<IdeaBlockLogic.IdeaBlock>>",
          "valueType": "t_struct<IdeaBlockLogic.IdeaBlock>",
          "label": "mapping(key => IdeaBlockLogic.IdeaBlock)",
          "kind": "mapping"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_struct<IdeaBlockLogic.IdeaProposal>": {
          "id": "t_struct<IdeaBlockLogic.IdeaProposal>",
          "kind": "struct",
          "label": "IdeaBlockLogic.IdeaProposal",
          "members": [
            {
              "label": "IdeaIPFS",
              "astId": 841,
              "type": "t_string",
              "src": "3384:15:2"
            },
            {
              "label": "executed",
              "astId": 843,
              "type": "t_bool",
              "src": "3408:13:2"
            },
            {
              "label": "proposalPassed",
              "astId": 845,
              "type": "t_bool",
              "src": "3430:19:2"
            },
            {
              "label": "votes",
              "astId": 848,
              "type": "t_array:dyn<t_struct<IdeaBlockLogic.Vote>>",
              "src": "3458:12:2"
            },
            {
              "label": "voted",
              "astId": 852,
              "type": "t_mapping<t_bool>",
              "src": "3479:31:2"
            }
          ]
        },
        "t_struct<IdeaBlockLogic.Vote>": {
          "id": "t_struct<IdeaBlockLogic.Vote>",
          "kind": "struct",
          "label": "IdeaBlockLogic.Vote",
          "members": [
            {
              "label": "inSupport",
              "astId": 855,
              "type": "t_bool",
              "src": "3544:14:2"
            },
            {
              "label": "voter",
              "astId": 857,
              "type": "t_address",
              "src": "3570:13:2"
            }
          ]
        },
        "t_array:dyn<t_struct<IdeaBlockLogic.Vote>>": {
          "id": "t_array:dyn<t_struct<IdeaBlockLogic.Vote>>",
          "valueType": "t_struct<IdeaBlockLogic.Vote>",
          "length": "dyn",
          "kind": "array",
          "label": "IdeaBlockLogic.Vote[]"
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_struct<IdeaBlockLogic.IdeaProposal>>": {
          "id": "t_mapping<t_struct<IdeaBlockLogic.IdeaProposal>>",
          "valueType": "t_struct<IdeaBlockLogic.IdeaProposal>",
          "label": "mapping(key => IdeaBlockLogic.IdeaProposal)",
          "kind": "mapping"
        },
        "t_struct<IdeaBlockLogic.ReplicationInfo>": {
          "id": "t_struct<IdeaBlockLogic.ReplicationInfo>",
          "kind": "struct",
          "label": "IdeaBlockLogic.ReplicationInfo",
          "members": [
            {
              "label": "BlockReward",
              "astId": 873,
              "type": "t_uint256",
              "src": "3960:16:2"
            },
            {
              "label": "OwnersAddress",
              "astId": 875,
              "type": "t_address",
              "src": "3982:21:2"
            },
            {
              "label": "IdeaID",
              "astId": 877,
              "type": "t_uint256",
              "src": "4009:11:2"
            },
            {
              "label": "Royalty",
              "astId": 879,
              "type": "t_uint256",
              "src": "4026:12:2"
            },
            {
              "label": "RepID",
              "astId": 881,
              "type": "t_uint256",
              "src": "4044:10:2"
            },
            {
              "label": "InventorsAddress",
              "astId": 883,
              "type": "t_address",
              "src": "4060:24:2"
            },
            {
              "label": "ReplicationAddress",
              "astId": 885,
              "type": "t_address",
              "src": "4090:26:2"
            }
          ]
        },
        "t_mapping<t_struct<IdeaBlockLogic.ReplicationInfo>>": {
          "id": "t_mapping<t_struct<IdeaBlockLogic.ReplicationInfo>>",
          "valueType": "t_struct<IdeaBlockLogic.ReplicationInfo>",
          "label": "mapping(key => IdeaBlockLogic.ReplicationInfo)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 3855,
          "type": "t_bool",
          "src": "757:24:15"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 3857,
          "type": "t_bool",
          "src": "876:25:15"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 3906,
          "type": "t_array:50<t_uint256>",
          "src": "1891:29:15"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "_owner",
          "astId": 3164,
          "type": "t_address",
          "src": "302:22:11"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "______gap",
          "astId": 3275,
          "type": "t_array:50<t_uint256>",
          "src": "2186:29:11"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "DCPoA",
          "astId": 743,
          "type": "t_address",
          "src": "1412:28:2"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "Validators",
          "astId": 745,
          "type": "t_address",
          "src": "1444:33:2"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "globalIdeaCount",
          "astId": 747,
          "type": "t_uint256",
          "src": "1736:27:2"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "globalBlockHalfTime",
          "astId": 749,
          "type": "t_uint256",
          "src": "1767:31:2"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "ideaBlockReward",
          "astId": 751,
          "type": "t_uint256",
          "src": "1802:27:2"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "repStake",
          "astId": 753,
          "type": "t_uint256",
          "src": "1833:20:2"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "globalIdeaPropCount",
          "astId": 755,
          "type": "t_uint256",
          "src": "1857:31:2"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "globalRepCount",
          "astId": 757,
          "type": "t_uint256",
          "src": "1990:26:2"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "globalUseBlock",
          "astId": 759,
          "type": "t_uint256",
          "src": "2020:26:2"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "ideaVariables",
          "astId": 763,
          "type": "t_mapping<t_struct<IdeaBlockLogic.IdeaBlock>>",
          "src": "2182:47:2"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "IdeaAddToId",
          "astId": 767,
          "type": "t_mapping<t_uint256>",
          "src": "2233:43:2"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "ideaProposals",
          "astId": 771,
          "type": "t_mapping<t_struct<IdeaBlockLogic.IdeaProposal>>",
          "src": "2280:50:2"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "weightTracker",
          "astId": 775,
          "type": "t_mapping<t_uint256>",
          "src": "2334:42:2"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "localWeightTracker",
          "astId": 779,
          "type": "t_mapping<t_uint256>",
          "src": "2380:50:2"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "ideaRepCounter",
          "astId": 783,
          "type": "t_mapping<t_uint256>",
          "src": "2695:43:2"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "localMiningtimeTracker",
          "astId": 787,
          "type": "t_mapping<t_uint256>",
          "src": "2742:54:2"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "replications",
          "astId": 791,
          "type": "t_mapping<t_bool>",
          "src": "2800:44:2"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "repInfo",
          "astId": 795,
          "type": "t_mapping<t_struct<IdeaBlockLogic.ReplicationInfo>>",
          "src": "2848:50:2"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "repOwnes",
          "astId": 801,
          "type": "t_mapping<t_uint256>",
          "src": "2902:57:2"
        },
        {
          "contract": "IdeaBlockLogic",
          "path": "contracts/CryptoPatent/IdeaBlockLogic.sol",
          "label": "getHash",
          "astId": 805,
          "type": "t_mapping<t_uint256>",
          "src": "2963:31:2"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "DecentraCorpPoA": {
      "address": "0x7757092E265d5CE050E897BB8Ccc874eF98EAE69",
      "constructorCode": "608060405234801561001057600080fd5b50614a51806100206000396000f3fe",
      "bodyBytecodeHash": "cf3188af7d18d92a9178c4bbbcd978f22dfc101b3b6d6c84914f919e738fb63b",
      "localBytecodeHash": "f0c798922ca10f66d9033259a7dc98d065a6f7356ab0ba7cfc6790fb959020ad",
      "deployedBytecodeHash": "f0c798922ca10f66d9033259a7dc98d065a6f7356ab0ba7cfc6790fb959020ad",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_string>": {
          "id": "t_mapping<t_string>",
          "valueType": "t_string",
          "label": "mapping(key => string)",
          "kind": "mapping"
        },
        "t_struct<DecentraCorpPoA.Proposal>": {
          "id": "t_struct<DecentraCorpPoA.Proposal>",
          "kind": "struct",
          "label": "DecentraCorpPoA.Proposal",
          "members": [
            {
              "label": "Address",
              "astId": 2157,
              "type": "t_address",
              "src": "1910:15:9"
            },
            {
              "label": "PropCode",
              "astId": 2159,
              "type": "t_uint256",
              "src": "1935:13:9"
            },
            {
              "label": "Amount",
              "astId": 2161,
              "type": "t_uint256",
              "src": "1958:11:9"
            },
            {
              "label": "voteHash",
              "astId": 2163,
              "type": "t_string",
              "src": "1979:15:9"
            },
            {
              "label": "executed",
              "astId": 2165,
              "type": "t_bool",
              "src": "2004:13:9"
            },
            {
              "label": "proposalPassed",
              "astId": 2167,
              "type": "t_bool",
              "src": "2027:19:9"
            },
            {
              "label": "votes",
              "astId": 2170,
              "type": "t_array:dyn<t_struct<DecentraCorpPoA.Vote>>",
              "src": "2056:12:9"
            },
            {
              "label": "voted",
              "astId": 2174,
              "type": "t_mapping<t_bool>",
              "src": "2078:31:9"
            }
          ]
        },
        "t_struct<DecentraCorpPoA.Vote>": {
          "id": "t_struct<DecentraCorpPoA.Vote>",
          "kind": "struct",
          "label": "DecentraCorpPoA.Vote",
          "members": [
            {
              "label": "inSupport",
              "astId": 2177,
              "type": "t_bool",
              "src": "2149:14:9"
            },
            {
              "label": "voter",
              "astId": 2179,
              "type": "t_address",
              "src": "2177:13:9"
            }
          ]
        },
        "t_array:dyn<t_struct<DecentraCorpPoA.Vote>>": {
          "id": "t_array:dyn<t_struct<DecentraCorpPoA.Vote>>",
          "valueType": "t_struct<DecentraCorpPoA.Vote>",
          "length": "dyn",
          "kind": "array",
          "label": "DecentraCorpPoA.Vote[]"
        },
        "t_array:dyn<t_struct<DecentraCorpPoA.Proposal>>": {
          "id": "t_array:dyn<t_struct<DecentraCorpPoA.Proposal>>",
          "valueType": "t_struct<DecentraCorpPoA.Proposal>",
          "length": "dyn",
          "kind": "array",
          "label": "DecentraCorpPoA.Proposal[]"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 3855,
          "type": "t_bool",
          "src": "757:24:15"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 3857,
          "type": "t_bool",
          "src": "876:25:15"
        },
        {
          "contract": "Initializable",
          "path": "zos-lib/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 3906,
          "type": "t_array:50<t_uint256>",
          "src": "1891:29:15"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "_owner",
          "astId": 3164,
          "type": "t_address",
          "src": "302:22:11"
        },
        {
          "contract": "Ownable",
          "path": "openzeppelin-eth/contracts/ownership/Ownable.sol",
          "label": "______gap",
          "astId": 3275,
          "type": "t_array:50<t_uint256>",
          "src": "2186:29:11"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "_balances",
          "astId": 3292,
          "type": "t_mapping<t_uint256>",
          "src": "774:46:12"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "_allowed",
          "astId": 3298,
          "type": "t_mapping<t_uint256>",
          "src": "827:66:12"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "_totalSupply",
          "astId": 3300,
          "type": "t_uint256",
          "src": "900:28:12"
        },
        {
          "contract": "ERC20",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
          "label": "______gap",
          "astId": 3714,
          "type": "t_array:50<t_uint256>",
          "src": "7661:29:12"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_name",
          "astId": 3725,
          "type": "t_string",
          "src": "382:20:13"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 3727,
          "type": "t_string",
          "src": "408:22:13"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 3729,
          "type": "t_uint8",
          "src": "436:23:13"
        },
        {
          "contract": "ERC20Detailed",
          "path": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "______gap",
          "astId": 3781,
          "type": "t_array:50<t_uint256>",
          "src": "1097:29:13"
        },
        {
          "contract": "DecentraCorpPoA",
          "path": "contracts/DecentraCorp/DecentraCorpPoA.sol",
          "label": "memberCount",
          "astId": 2072,
          "type": "t_uint256",
          "src": "902:23:9"
        },
        {
          "contract": "DecentraCorpPoA",
          "path": "contracts/DecentraCorp/DecentraCorpPoA.sol",
          "label": "buyMemWindow",
          "astId": 2074,
          "type": "t_uint256",
          "src": "930:24:9"
        },
        {
          "contract": "DecentraCorpPoA",
          "path": "contracts/DecentraCorp/DecentraCorpPoA.sol",
          "label": "frozen",
          "astId": 2076,
          "type": "t_bool",
          "src": "959:18:9"
        },
        {
          "contract": "DecentraCorpPoA",
          "path": "contracts/DecentraCorp/DecentraCorpPoA.sol",
          "label": "founder",
          "astId": 2078,
          "type": "t_address",
          "src": "982:22:9"
        },
        {
          "contract": "DecentraCorpPoA",
          "path": "contracts/DecentraCorp/DecentraCorpPoA.sol",
          "label": "members",
          "astId": 2082,
          "type": "t_mapping<t_bool>",
          "src": "1011:32:9"
        },
        {
          "contract": "DecentraCorpPoA",
          "path": "contracts/DecentraCorp/DecentraCorpPoA.sol",
          "label": "memberLevel",
          "astId": 2086,
          "type": "t_mapping<t_uint256>",
          "src": "1048:36:9"
        },
        {
          "contract": "DecentraCorpPoA",
          "path": "contracts/DecentraCorp/DecentraCorpPoA.sol",
          "label": "memberProfileHash",
          "astId": 2090,
          "type": "t_mapping<t_string>",
          "src": "1089:44:9"
        },
        {
          "contract": "DecentraCorpPoA",
          "path": "contracts/DecentraCorp/DecentraCorpPoA.sol",
          "label": "approvedContracts",
          "astId": 2094,
          "type": "t_mapping<t_bool>",
          "src": "1226:42:9"
        },
        {
          "contract": "DecentraCorpPoA",
          "path": "contracts/DecentraCorp/DecentraCorpPoA.sol",
          "label": "getHash",
          "astId": 2098,
          "type": "t_mapping<t_uint256>",
          "src": "1273:31:9"
        },
        {
          "contract": "DecentraCorpPoA",
          "path": "contracts/DecentraCorp/DecentraCorpPoA.sol",
          "label": "propCode",
          "astId": 2102,
          "type": "t_mapping<t_uint256>",
          "src": "1309:32:9"
        },
        {
          "contract": "DecentraCorpPoA",
          "path": "contracts/DecentraCorp/DecentraCorpPoA.sol",
          "label": "profileComments",
          "astId": 2106,
          "type": "t_mapping<t_string>",
          "src": "1346:42:9"
        },
        {
          "contract": "DecentraCorpPoA",
          "path": "contracts/DecentraCorp/DecentraCorpPoA.sol",
          "label": "frozenAccounts",
          "astId": 2110,
          "type": "t_mapping<t_bool>",
          "src": "1393:39:9"
        },
        {
          "contract": "DecentraCorpPoA",
          "path": "contracts/DecentraCorp/DecentraCorpPoA.sol",
          "label": "proposals",
          "astId": 2113,
          "type": "t_array:dyn<t_struct<DecentraCorpPoA.Proposal>>",
          "src": "1441:27:9"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    }
  },
  "solidityLibs": {},
  "proxies": {
    "DecentraCorp/CryptoPatentBlockchain": [
      {
        "address": "0xD7985c173553d57bA546403e3379ce4540DbB876",
        "version": "0.1.0",
        "implementation": "0x0998584c27bF38379fB1cBdA77838f0820B47818"
      },
      {
        "address": "0xAef71a5ede41692746b354D700893A40662E1A56",
        "version": "0.1.0",
        "implementation": "0x0998584c27bF38379fB1cBdA77838f0820B47818"
      }
    ],
    "DecentraCorp/DecentraCorpPoA": [
      {
        "address": "0x3fAb0cC32F60DccA88368e550692bf753b329A77",
        "version": "0.1.0",
        "implementation": "0x7757092E265d5CE050E897BB8Ccc874eF98EAE69"
      }
    ],
    "DecentraCorp/ChaosCasino": [
      {
        "address": "0xd48e2d6b8b482B01164c6b448746a145E7b48C69",
        "version": "0.1.0",
        "implementation": "0x1D0569E5CaeeE8e6a618A6047c961d49a6306615"
      }
    ],
    "DecentraCorp/DC_Depot": [
      {
        "address": "0xEf1389beb9b9d9dF39E2753D53C1eA8Ab970A5A7",
        "version": "0.1.0",
        "implementation": "0x333D1D44C9E5EbfB8A3eE1d34f5068f3dB95Acbe"
      }
    ]
  },
  "zosversion": "2.2",
  "version": "0.1.0",
  "dependencies": {
    "openzeppelin-eth": {
      "package": "0xABc9cff9ef0ef69c4F5f7189511e1097fF02F5BB",
      "version": "2.1.3",
      "customDeploy": true
    }
  },
  "proxyAdmin": {
    "address": "0x8E83aBf6B9ACB751F1bE324835830064D9C0725c"
  }
}